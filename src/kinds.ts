// ~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".
import type { IGrantee } from './grants';

export interface KindOptions {
  readonly apiGroups: Array<string>;
  readonly resources: Array<string>;
}

/**
 * Represents information about an API resource type.
 */
export class Kind implements IGrantee {
  /**
   * API resource information for Binding.
   */
  public static readonly BINDING = new Kind({
    apiGroups: [''],
    resources: ['bindings'],
  });

  /**
   * API resource information for ComponentStatus.
   */
  public static readonly COMPONENT_STATUS = new Kind({
    apiGroups: [''],
    resources: ['componentstatuses'],
  });

  /**
   * API resource information for ConfigMap.
   */
  public static readonly CONFIG_MAP = new Kind({
    apiGroups: [''],
    resources: ['configmaps'],
  });

  /**
   * API resource information for Endpoints.
   */
  public static readonly ENDPOINTS = new Kind({
    apiGroups: [''],
    resources: ['endpoints'],
  });

  /**
   * API resource information for Event.
   */
  public static readonly EVENT = new Kind({
    apiGroups: ['', 'events.k8s.io'],
    resources: ['events'],
  });

  /**
   * API resource information for LimitRange.
   */
  public static readonly LIMIT_RANGE = new Kind({
    apiGroups: [''],
    resources: ['limitranges'],
  });

  /**
   * API resource information for Namespace.
   */
  public static readonly NAMESPACE = new Kind({
    apiGroups: [''],
    resources: ['namespaces'],
  });

  /**
   * API resource information for Node.
   */
  public static readonly NODE = new Kind({
    apiGroups: [''],
    resources: ['nodes'],
  });

  /**
   * API resource information for PersistentVolumeClaim.
   */
  public static readonly PERSISTENT_VOLUME_CLAIM = new Kind({
    apiGroups: [''],
    resources: ['persistentvolumeclaims'],
  });

  /**
   * API resource information for PersistentVolume.
   */
  public static readonly PERSISTENT_VOLUME = new Kind({
    apiGroups: [''],
    resources: ['persistentvolumes'],
  });

  /**
   * API resource information for Pod.
   */
  public static readonly POD = new Kind({
    apiGroups: [''],
    resources: ['pods'],
  });

  /**
   * API resource information for PodTemplate.
   */
  public static readonly POD_TEMPLATE = new Kind({
    apiGroups: [''],
    resources: ['podtemplates'],
  });

  /**
   * API resource information for ReplicationController.
   */
  public static readonly REPLICATION_CONTROLLER = new Kind({
    apiGroups: [''],
    resources: ['replicationcontrollers'],
  });

  /**
   * API resource information for ResourceQuota.
   */
  public static readonly RESOURCE_QUOTA = new Kind({
    apiGroups: [''],
    resources: ['resourcequotas'],
  });

  /**
   * API resource information for Secret.
   */
  public static readonly SECRET = new Kind({
    apiGroups: [''],
    resources: ['secrets'],
  });

  /**
   * API resource information for ServiceAccount.
   */
  public static readonly SERVICE_ACCOUNT = new Kind({
    apiGroups: [''],
    resources: ['serviceaccounts'],
  });

  /**
   * API resource information for Service.
   */
  public static readonly SERVICE = new Kind({
    apiGroups: [''],
    resources: ['services'],
  });

  /**
   * API resource information for MutatingWebhookConfiguration.
   */
  public static readonly MUTATING_WEBHOOK_CONFIGURATION = new Kind({
    apiGroups: ['admissionregistration.k8s.io'],
    resources: ['mutatingwebhookconfigurations'],
  });

  /**
   * API resource information for ValidatingWebhookConfiguration.
   */
  public static readonly VALIDATING_WEBHOOK_CONFIGURATION = new Kind({
    apiGroups: ['admissionregistration.k8s.io'],
    resources: ['validatingwebhookconfigurations'],
  });

  /**
   * API resource information for CustomResourceDefinition.
   */
  public static readonly CUSTOM_RESOURCE_DEFINITION = new Kind({
    apiGroups: ['apiextensions.k8s.io'],
    resources: ['customresourcedefinitions'],
  });

  /**
   * API resource information for APIService.
   */
  public static readonly API_SERVICE = new Kind({
    apiGroups: ['apiregistration.k8s.io'],
    resources: ['apiservices'],
  });

  /**
   * API resource information for ControllerRevision.
   */
  public static readonly CONTROLLER_REVISION = new Kind({
    apiGroups: ['apps'],
    resources: ['controllerrevisions'],
  });

  /**
   * API resource information for DaemonSet.
   */
  public static readonly DAEMON_SET = new Kind({
    apiGroups: ['apps'],
    resources: ['daemonsets'],
  });

  /**
   * API resource information for Deployment.
   */
  public static readonly DEPLOYMENT = new Kind({
    apiGroups: ['apps'],
    resources: ['deployments'],
  });

  /**
   * API resource information for ReplicaSet.
   */
  public static readonly REPLICA_SET = new Kind({
    apiGroups: ['apps'],
    resources: ['replicasets'],
  });

  /**
   * API resource information for StatefulSet.
   */
  public static readonly STATEFUL_SET = new Kind({
    apiGroups: ['apps'],
    resources: ['statefulsets'],
  });

  /**
   * API resource information for TokenReview.
   */
  public static readonly TOKEN_REVIEW = new Kind({
    apiGroups: ['authentication.k8s.io'],
    resources: ['tokenreviews'],
  });

  /**
   * API resource information for LocalSubjectAccessReview.
   */
  public static readonly LOCAL_SUBJECT_ACCESS_REVIEW = new Kind({
    apiGroups: ['authorization.k8s.io'],
    resources: ['localsubjectaccessreviews'],
  });

  /**
   * API resource information for SelfSubjectAccessReview.
   */
  public static readonly SELF_SUBJECT_ACCESS_REVIEW = new Kind({
    apiGroups: ['authorization.k8s.io'],
    resources: ['selfsubjectaccessreviews'],
  });

  /**
   * API resource information for SelfSubjectRulesReview.
   */
  public static readonly SELF_SUBJECT_RULES_REVIEW = new Kind({
    apiGroups: ['authorization.k8s.io'],
    resources: ['selfsubjectrulesreviews'],
  });

  /**
   * API resource information for SubjectAccessReview.
   */
  public static readonly SUBJECT_ACCESS_REVIEW = new Kind({
    apiGroups: ['authorization.k8s.io'],
    resources: ['subjectaccessreviews'],
  });

  /**
   * API resource information for HorizontalPodAutoscaler.
   */
  public static readonly HORIZONTAL_POD_AUTOSCALER = new Kind({
    apiGroups: ['autoscaling'],
    resources: ['horizontalpodautoscalers'],
  });

  /**
   * API resource information for CronJob.
   */
  public static readonly CRON_JOB = new Kind({
    apiGroups: ['batch'],
    resources: ['cronjobs'],
  });

  /**
   * API resource information for Job.
   */
  public static readonly JOB = new Kind({
    apiGroups: ['batch'],
    resources: ['jobs'],
  });

  /**
   * API resource information for CertificateSigningRequest.
   */
  public static readonly CERTIFICATE_SIGNING_REQUEST = new Kind({
    apiGroups: ['certificates.k8s.io'],
    resources: ['certificatesigningrequests'],
  });

  /**
   * API resource information for Lease.
   */
  public static readonly LEASE = new Kind({
    apiGroups: ['coordination.k8s.io'],
    resources: ['leases'],
  });

  /**
   * API resource information for EndpointSlice.
   */
  public static readonly ENDPOINT_SLICE = new Kind({
    apiGroups: ['discovery.k8s.io'],
    resources: ['endpointslices'],
  });

  /**
   * API resource information for FlowSchema.
   */
  public static readonly FLOW_SCHEMA = new Kind({
    apiGroups: ['flowcontrol.apiserver.k8s.io'],
    resources: ['flowschemas'],
  });

  /**
   * API resource information for PriorityLevelConfiguration.
   */
  public static readonly PRIORITY_LEVEL_CONFIGURATION = new Kind({
    apiGroups: ['flowcontrol.apiserver.k8s.io'],
    resources: ['prioritylevelconfigurations'],
  });

  /**
   * API resource information for IngressClass.
   */
  public static readonly INGRESS_CLASS = new Kind({
    apiGroups: ['networking.k8s.io'],
    resources: ['ingressclasses'],
  });

  /**
   * API resource information for Ingress.
   */
  public static readonly INGRESS = new Kind({
    apiGroups: ['networking.k8s.io'],
    resources: ['ingresses'],
  });

  /**
   * API resource information for NetworkPolicy.
   */
  public static readonly NETWORK_POLICY = new Kind({
    apiGroups: ['networking.k8s.io'],
    resources: ['networkpolicies'],
  });

  /**
   * API resource information for RuntimeClass.
   */
  public static readonly RUNTIME_CLASS = new Kind({
    apiGroups: ['node.k8s.io'],
    resources: ['runtimeclasses'],
  });

  /**
   * API resource information for PodDisruptionBudget.
   */
  public static readonly POD_DISRUPTION_BUDGET = new Kind({
    apiGroups: ['policy'],
    resources: ['poddisruptionbudgets'],
  });

  /**
   * API resource information for PodSecurityPolicy.
   */
  public static readonly POD_SECURITY_POLICY = new Kind({
    apiGroups: ['policy'],
    resources: ['podsecuritypolicies'],
  });

  /**
   * API resource information for ClusterRoleBinding.
   */
  public static readonly CLUSTER_ROLE_BINDING = new Kind({
    apiGroups: ['rbac.authorization.k8s.io'],
    resources: ['clusterrolebindings'],
  });

  /**
   * API resource information for ClusterRole.
   */
  public static readonly CLUSTER_ROLE = new Kind({
    apiGroups: ['rbac.authorization.k8s.io'],
    resources: ['clusterroles'],
  });

  /**
   * API resource information for RoleBinding.
   */
  public static readonly ROLE_BINDING = new Kind({
    apiGroups: ['rbac.authorization.k8s.io'],
    resources: ['rolebindings'],
  });

  /**
   * API resource information for Role.
   */
  public static readonly ROLE = new Kind({
    apiGroups: ['rbac.authorization.k8s.io'],
    resources: ['roles'],
  });

  /**
   * API resource information for PriorityClass.
   */
  public static readonly PRIORITY_CLASS = new Kind({
    apiGroups: ['scheduling.k8s.io'],
    resources: ['priorityclasses'],
  });

  /**
   * API resource information for CSIDriver.
   */
  public static readonly CSI_DRIVER = new Kind({
    apiGroups: ['storage.k8s.io'],
    resources: ['csidrivers'],
  });

  /**
   * API resource information for CSINode.
   */
  public static readonly CSI_NODE = new Kind({
    apiGroups: ['storage.k8s.io'],
    resources: ['csinodes'],
  });

  /**
   * API resource information for CSIStorageCapacity.
   */
  public static readonly CSI_STORAGE_CAPACITY = new Kind({
    apiGroups: ['storage.k8s.io'],
    resources: ['csistoragecapacities'],
  });

  /**
   * API resource information for StorageClass.
   */
  public static readonly STORAGE_CLASS = new Kind({
    apiGroups: ['storage.k8s.io'],
    resources: ['storageclasses'],
  });

  /**
   * API resource information for VolumeAttachment.
   */
  public static readonly VOLUME_ATTACHMENT = new Kind({
    apiGroups: ['storage.k8s.io'],
    resources: ['volumeattachments'],
  });

  public static custom(options: KindOptions): Kind {
    return new Kind(options);
  };

  private readonly _apiGroups: Array<string>;
  private readonly _resources: Array<string>;

  private constructor(options: KindOptions) {
    this._apiGroups = options.apiGroups;
    this._resources = options.resources;
  }

  public get apiGroups(): Array<string> {
    return [...this._apiGroups];
  }

  public get resources(): Array<string> | undefined {
    return [...this._resources];
  }
}
