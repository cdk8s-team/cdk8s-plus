// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`scheduling can be assigned to a node - custom 1`] = `
Array [
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "name": "test-redis-c870fe8d",
    },
    "spec": Object {
      "affinity": Object {
        "nodeAffinity": Object {
          "preferredDuringSchedulingIgnoredDuringExecution": Array [
            Object {
              "preference": Object {
                "matchExpressions": Array [
                  Object {
                    "key": "memory",
                    "operator": "In",
                    "values": Array [
                      "high",
                    ],
                  },
                ],
              },
              "weight": 1,
            },
          ],
          "requiredDuringSchedulingIgnoredDuringExecution": Object {
            "nodeSelectorTerms": Array [],
          },
        },
        "podAffinity": Object {
          "preferredDuringSchedulingIgnoredDuringExecution": Array [],
          "requiredDuringSchedulingIgnoredDuringExecution": Array [],
        },
        "podAntiAffinity": Object {
          "preferredDuringSchedulingIgnoredDuringExecution": Array [],
          "requiredDuringSchedulingIgnoredDuringExecution": Array [],
        },
      },
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "env": Array [],
          "image": "redis",
          "imagePullPolicy": "Always",
          "name": "main",
          "ports": Array [],
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsNonRoot": false,
          },
          "volumeMounts": Array [],
        },
      ],
      "dnsConfig": Object {
        "nameservers": Array [],
        "options": Array [],
        "searches": Array [],
      },
      "dnsPolicy": "ClusterFirst",
      "hostAliases": Array [],
      "initContainers": Array [],
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
        "sysctls": Array [],
      },
      "setHostnameAsFQDN": false,
      "volumes": Array [],
    },
  },
]
`;

exports[`scheduling can be assigned to a node - default 1`] = `
Array [
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "name": "test-redis-c870fe8d",
    },
    "spec": Object {
      "affinity": Object {
        "nodeAffinity": Object {
          "preferredDuringSchedulingIgnoredDuringExecution": Array [],
          "requiredDuringSchedulingIgnoredDuringExecution": Object {
            "nodeSelectorTerms": Array [
              Object {
                "matchExpressions": Array [
                  Object {
                    "key": "memory",
                    "operator": "In",
                    "values": Array [
                      "high",
                    ],
                  },
                ],
              },
            ],
          },
        },
        "podAffinity": Object {
          "preferredDuringSchedulingIgnoredDuringExecution": Array [],
          "requiredDuringSchedulingIgnoredDuringExecution": Array [],
        },
        "podAntiAffinity": Object {
          "preferredDuringSchedulingIgnoredDuringExecution": Array [],
          "requiredDuringSchedulingIgnoredDuringExecution": Array [],
        },
      },
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "env": Array [],
          "image": "redis",
          "imagePullPolicy": "Always",
          "name": "main",
          "ports": Array [],
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsNonRoot": false,
          },
          "volumeMounts": Array [],
        },
      ],
      "dnsConfig": Object {
        "nameservers": Array [],
        "options": Array [],
        "searches": Array [],
      },
      "dnsPolicy": "ClusterFirst",
      "hostAliases": Array [],
      "initContainers": Array [],
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
        "sysctls": Array [],
      },
      "setHostnameAsFQDN": false,
      "volumes": Array [],
    },
  },
]
`;

exports[`scheduling can be assigned to a node by name 1`] = `
Array [
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "name": "test-redis-c870fe8d",
    },
    "spec": Object {
      "affinity": Object {
        "nodeAffinity": Object {
          "preferredDuringSchedulingIgnoredDuringExecution": Array [],
          "requiredDuringSchedulingIgnoredDuringExecution": Object {
            "nodeSelectorTerms": Array [
              Object {},
            ],
          },
        },
        "podAffinity": Object {
          "preferredDuringSchedulingIgnoredDuringExecution": Array [],
          "requiredDuringSchedulingIgnoredDuringExecution": Array [],
        },
        "podAntiAffinity": Object {
          "preferredDuringSchedulingIgnoredDuringExecution": Array [],
          "requiredDuringSchedulingIgnoredDuringExecution": Array [],
        },
      },
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "env": Array [],
          "image": "redis",
          "imagePullPolicy": "Always",
          "name": "main",
          "ports": Array [],
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsNonRoot": false,
          },
          "volumeMounts": Array [],
        },
      ],
      "dnsConfig": Object {
        "nameservers": Array [],
        "options": Array [],
        "searches": Array [],
      },
      "dnsPolicy": "ClusterFirst",
      "hostAliases": Array [],
      "initContainers": Array [],
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
        "sysctls": Array [],
      },
      "setHostnameAsFQDN": false,
      "volumes": Array [],
    },
  },
]
`;

exports[`scheduling can be co-located with a managed pod - custom 1`] = `
Array [
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "labels": Object {
        "app": "store",
      },
      "name": "test-redis-c870fe8d",
    },
    "spec": Object {
      "affinity": Object {
        "nodeAffinity": Object {
          "preferredDuringSchedulingIgnoredDuringExecution": Array [],
          "requiredDuringSchedulingIgnoredDuringExecution": Object {
            "nodeSelectorTerms": Array [],
          },
        },
        "podAffinity": Object {
          "preferredDuringSchedulingIgnoredDuringExecution": Array [],
          "requiredDuringSchedulingIgnoredDuringExecution": Array [],
        },
        "podAntiAffinity": Object {
          "preferredDuringSchedulingIgnoredDuringExecution": Array [],
          "requiredDuringSchedulingIgnoredDuringExecution": Array [],
        },
      },
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "env": Array [],
          "image": "redis",
          "imagePullPolicy": "Always",
          "name": "main",
          "ports": Array [],
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsNonRoot": false,
          },
          "volumeMounts": Array [],
        },
      ],
      "dnsConfig": Object {
        "nameservers": Array [],
        "options": Array [],
        "searches": Array [],
      },
      "dnsPolicy": "ClusterFirst",
      "hostAliases": Array [],
      "initContainers": Array [],
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
        "sysctls": Array [],
      },
      "setHostnameAsFQDN": false,
      "volumes": Array [],
    },
  },
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "name": "test-web-c854d28f",
    },
    "spec": Object {
      "affinity": Object {
        "nodeAffinity": Object {
          "preferredDuringSchedulingIgnoredDuringExecution": Array [],
          "requiredDuringSchedulingIgnoredDuringExecution": Object {
            "nodeSelectorTerms": Array [],
          },
        },
        "podAffinity": Object {
          "preferredDuringSchedulingIgnoredDuringExecution": Array [
            Object {
              "podAffinityTerm": Object {
                "labelSelector": Object {
                  "matchExpressions": Array [
                    Object {
                      "key": "app",
                      "operator": "In",
                      "values": Array [
                        "store",
                      ],
                    },
                  ],
                },
                "namespaces": Array [],
                "topologyKey": "topology.kubernetes.io/zone",
              },
              "weight": 1,
            },
          ],
          "requiredDuringSchedulingIgnoredDuringExecution": Array [],
        },
        "podAntiAffinity": Object {
          "preferredDuringSchedulingIgnoredDuringExecution": Array [],
          "requiredDuringSchedulingIgnoredDuringExecution": Array [],
        },
      },
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "env": Array [],
          "image": "web",
          "imagePullPolicy": "Always",
          "name": "main",
          "ports": Array [],
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsNonRoot": false,
          },
          "volumeMounts": Array [],
        },
      ],
      "dnsConfig": Object {
        "nameservers": Array [],
        "options": Array [],
        "searches": Array [],
      },
      "dnsPolicy": "ClusterFirst",
      "hostAliases": Array [],
      "initContainers": Array [],
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
        "sysctls": Array [],
      },
      "setHostnameAsFQDN": false,
      "volumes": Array [],
    },
  },
]
`;

exports[`scheduling can be co-located with a managed pod - default 1`] = `
Array [
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "labels": Object {
        "app": "store",
      },
      "name": "test-redis-c870fe8d",
    },
    "spec": Object {
      "affinity": Object {
        "nodeAffinity": Object {
          "preferredDuringSchedulingIgnoredDuringExecution": Array [],
          "requiredDuringSchedulingIgnoredDuringExecution": Object {
            "nodeSelectorTerms": Array [],
          },
        },
        "podAffinity": Object {
          "preferredDuringSchedulingIgnoredDuringExecution": Array [],
          "requiredDuringSchedulingIgnoredDuringExecution": Array [],
        },
        "podAntiAffinity": Object {
          "preferredDuringSchedulingIgnoredDuringExecution": Array [],
          "requiredDuringSchedulingIgnoredDuringExecution": Array [],
        },
      },
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "env": Array [],
          "image": "redis",
          "imagePullPolicy": "Always",
          "name": "main",
          "ports": Array [],
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsNonRoot": false,
          },
          "volumeMounts": Array [],
        },
      ],
      "dnsConfig": Object {
        "nameservers": Array [],
        "options": Array [],
        "searches": Array [],
      },
      "dnsPolicy": "ClusterFirst",
      "hostAliases": Array [],
      "initContainers": Array [],
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
        "sysctls": Array [],
      },
      "setHostnameAsFQDN": false,
      "volumes": Array [],
    },
  },
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "name": "test-web-c854d28f",
    },
    "spec": Object {
      "affinity": Object {
        "nodeAffinity": Object {
          "preferredDuringSchedulingIgnoredDuringExecution": Array [],
          "requiredDuringSchedulingIgnoredDuringExecution": Object {
            "nodeSelectorTerms": Array [],
          },
        },
        "podAffinity": Object {
          "preferredDuringSchedulingIgnoredDuringExecution": Array [],
          "requiredDuringSchedulingIgnoredDuringExecution": Array [
            Object {
              "labelSelector": Object {
                "matchExpressions": Array [
                  Object {
                    "key": "app",
                    "operator": "In",
                    "values": Array [
                      "store",
                    ],
                  },
                ],
              },
              "namespaces": Array [],
              "topologyKey": "kubernetes.io/hostname",
            },
          ],
        },
        "podAntiAffinity": Object {
          "preferredDuringSchedulingIgnoredDuringExecution": Array [],
          "requiredDuringSchedulingIgnoredDuringExecution": Array [],
        },
      },
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "env": Array [],
          "image": "web",
          "imagePullPolicy": "Always",
          "name": "main",
          "ports": Array [],
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsNonRoot": false,
          },
          "volumeMounts": Array [],
        },
      ],
      "dnsConfig": Object {
        "nameservers": Array [],
        "options": Array [],
        "searches": Array [],
      },
      "dnsPolicy": "ClusterFirst",
      "hostAliases": Array [],
      "initContainers": Array [],
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
        "sysctls": Array [],
      },
      "setHostnameAsFQDN": false,
      "volumes": Array [],
    },
  },
]
`;

exports[`scheduling can be co-located with an unmanaged pod - custom 1`] = `
Array [
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "name": "test-web-c854d28f",
    },
    "spec": Object {
      "affinity": Object {
        "nodeAffinity": Object {
          "preferredDuringSchedulingIgnoredDuringExecution": Array [],
          "requiredDuringSchedulingIgnoredDuringExecution": Object {
            "nodeSelectorTerms": Array [],
          },
        },
        "podAffinity": Object {
          "preferredDuringSchedulingIgnoredDuringExecution": Array [
            Object {
              "podAffinityTerm": Object {
                "labelSelector": Object {
                  "matchExpressions": Array [
                    Object {
                      "key": "app",
                      "operator": "In",
                      "values": Array [
                        "store",
                      ],
                    },
                  ],
                },
                "namespaceSelector": Object {
                  "matchExpressions": Array [
                    Object {
                      "key": "net",
                      "operator": "In",
                      "values": Array [
                        "1",
                      ],
                    },
                  ],
                },
                "namespaces": Array [
                  "n1",
                ],
                "topologyKey": "topology.kubernetes.io/zone",
              },
              "weight": 1,
            },
          ],
          "requiredDuringSchedulingIgnoredDuringExecution": Array [],
        },
        "podAntiAffinity": Object {
          "preferredDuringSchedulingIgnoredDuringExecution": Array [],
          "requiredDuringSchedulingIgnoredDuringExecution": Array [],
        },
      },
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "env": Array [],
          "image": "web",
          "imagePullPolicy": "Always",
          "name": "main",
          "ports": Array [],
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsNonRoot": false,
          },
          "volumeMounts": Array [],
        },
      ],
      "dnsConfig": Object {
        "nameservers": Array [],
        "options": Array [],
        "searches": Array [],
      },
      "dnsPolicy": "ClusterFirst",
      "hostAliases": Array [],
      "initContainers": Array [],
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
        "sysctls": Array [],
      },
      "setHostnameAsFQDN": false,
      "volumes": Array [],
    },
  },
]
`;

exports[`scheduling can be co-located with an unmanaged pod - default 1`] = `
Array [
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "name": "test-web-c854d28f",
    },
    "spec": Object {
      "affinity": Object {
        "nodeAffinity": Object {
          "preferredDuringSchedulingIgnoredDuringExecution": Array [],
          "requiredDuringSchedulingIgnoredDuringExecution": Object {
            "nodeSelectorTerms": Array [],
          },
        },
        "podAffinity": Object {
          "preferredDuringSchedulingIgnoredDuringExecution": Array [],
          "requiredDuringSchedulingIgnoredDuringExecution": Array [
            Object {
              "labelSelector": Object {
                "matchExpressions": Array [
                  Object {
                    "key": "app",
                    "operator": "In",
                    "values": Array [
                      "store",
                    ],
                  },
                ],
              },
              "namespaceSelector": Object {
                "matchExpressions": Array [
                  Object {
                    "key": "net",
                    "operator": "In",
                    "values": Array [
                      "1",
                    ],
                  },
                ],
              },
              "namespaces": Array [
                "n1",
              ],
              "topologyKey": "kubernetes.io/hostname",
            },
          ],
        },
        "podAntiAffinity": Object {
          "preferredDuringSchedulingIgnoredDuringExecution": Array [],
          "requiredDuringSchedulingIgnoredDuringExecution": Array [],
        },
      },
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "env": Array [],
          "image": "web",
          "imagePullPolicy": "Always",
          "name": "main",
          "ports": Array [],
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsNonRoot": false,
          },
          "volumeMounts": Array [],
        },
      ],
      "dnsConfig": Object {
        "nameservers": Array [],
        "options": Array [],
        "searches": Array [],
      },
      "dnsPolicy": "ClusterFirst",
      "hostAliases": Array [],
      "initContainers": Array [],
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
        "sysctls": Array [],
      },
      "setHostnameAsFQDN": false,
      "volumes": Array [],
    },
  },
]
`;

exports[`scheduling can be separated from a managed pod - custom 1`] = `
Array [
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "labels": Object {
        "app": "store",
      },
      "name": "test-redis-c870fe8d",
    },
    "spec": Object {
      "affinity": Object {
        "nodeAffinity": Object {
          "preferredDuringSchedulingIgnoredDuringExecution": Array [],
          "requiredDuringSchedulingIgnoredDuringExecution": Object {
            "nodeSelectorTerms": Array [],
          },
        },
        "podAffinity": Object {
          "preferredDuringSchedulingIgnoredDuringExecution": Array [],
          "requiredDuringSchedulingIgnoredDuringExecution": Array [],
        },
        "podAntiAffinity": Object {
          "preferredDuringSchedulingIgnoredDuringExecution": Array [],
          "requiredDuringSchedulingIgnoredDuringExecution": Array [],
        },
      },
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "env": Array [],
          "image": "redis",
          "imagePullPolicy": "Always",
          "name": "main",
          "ports": Array [],
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsNonRoot": false,
          },
          "volumeMounts": Array [],
        },
      ],
      "dnsConfig": Object {
        "nameservers": Array [],
        "options": Array [],
        "searches": Array [],
      },
      "dnsPolicy": "ClusterFirst",
      "hostAliases": Array [],
      "initContainers": Array [],
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
        "sysctls": Array [],
      },
      "setHostnameAsFQDN": false,
      "volumes": Array [],
    },
  },
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "name": "test-web-c854d28f",
    },
    "spec": Object {
      "affinity": Object {
        "nodeAffinity": Object {
          "preferredDuringSchedulingIgnoredDuringExecution": Array [],
          "requiredDuringSchedulingIgnoredDuringExecution": Object {
            "nodeSelectorTerms": Array [],
          },
        },
        "podAffinity": Object {
          "preferredDuringSchedulingIgnoredDuringExecution": Array [],
          "requiredDuringSchedulingIgnoredDuringExecution": Array [],
        },
        "podAntiAffinity": Object {
          "preferredDuringSchedulingIgnoredDuringExecution": Array [
            Object {
              "podAffinityTerm": Object {
                "labelSelector": Object {
                  "matchExpressions": Array [
                    Object {
                      "key": "app",
                      "operator": "In",
                      "values": Array [
                        "store",
                      ],
                    },
                  ],
                },
                "namespaces": Array [],
                "topologyKey": "topology.kubernetes.io/zone",
              },
              "weight": 1,
            },
          ],
          "requiredDuringSchedulingIgnoredDuringExecution": Array [],
        },
      },
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "env": Array [],
          "image": "web",
          "imagePullPolicy": "Always",
          "name": "main",
          "ports": Array [],
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsNonRoot": false,
          },
          "volumeMounts": Array [],
        },
      ],
      "dnsConfig": Object {
        "nameservers": Array [],
        "options": Array [],
        "searches": Array [],
      },
      "dnsPolicy": "ClusterFirst",
      "hostAliases": Array [],
      "initContainers": Array [],
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
        "sysctls": Array [],
      },
      "setHostnameAsFQDN": false,
      "volumes": Array [],
    },
  },
]
`;

exports[`scheduling can be separated from a managed pod - default 1`] = `
Array [
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "labels": Object {
        "app": "store",
      },
      "name": "test-redis-c870fe8d",
    },
    "spec": Object {
      "affinity": Object {
        "nodeAffinity": Object {
          "preferredDuringSchedulingIgnoredDuringExecution": Array [],
          "requiredDuringSchedulingIgnoredDuringExecution": Object {
            "nodeSelectorTerms": Array [],
          },
        },
        "podAffinity": Object {
          "preferredDuringSchedulingIgnoredDuringExecution": Array [],
          "requiredDuringSchedulingIgnoredDuringExecution": Array [],
        },
        "podAntiAffinity": Object {
          "preferredDuringSchedulingIgnoredDuringExecution": Array [],
          "requiredDuringSchedulingIgnoredDuringExecution": Array [],
        },
      },
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "env": Array [],
          "image": "redis",
          "imagePullPolicy": "Always",
          "name": "main",
          "ports": Array [],
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsNonRoot": false,
          },
          "volumeMounts": Array [],
        },
      ],
      "dnsConfig": Object {
        "nameservers": Array [],
        "options": Array [],
        "searches": Array [],
      },
      "dnsPolicy": "ClusterFirst",
      "hostAliases": Array [],
      "initContainers": Array [],
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
        "sysctls": Array [],
      },
      "setHostnameAsFQDN": false,
      "volumes": Array [],
    },
  },
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "name": "test-web-c854d28f",
    },
    "spec": Object {
      "affinity": Object {
        "nodeAffinity": Object {
          "preferredDuringSchedulingIgnoredDuringExecution": Array [],
          "requiredDuringSchedulingIgnoredDuringExecution": Object {
            "nodeSelectorTerms": Array [],
          },
        },
        "podAffinity": Object {
          "preferredDuringSchedulingIgnoredDuringExecution": Array [],
          "requiredDuringSchedulingIgnoredDuringExecution": Array [],
        },
        "podAntiAffinity": Object {
          "preferredDuringSchedulingIgnoredDuringExecution": Array [],
          "requiredDuringSchedulingIgnoredDuringExecution": Array [
            Object {
              "labelSelector": Object {
                "matchExpressions": Array [
                  Object {
                    "key": "app",
                    "operator": "In",
                    "values": Array [
                      "store",
                    ],
                  },
                ],
              },
              "namespaces": Array [],
              "topologyKey": "kubernetes.io/hostname",
            },
          ],
        },
      },
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "env": Array [],
          "image": "web",
          "imagePullPolicy": "Always",
          "name": "main",
          "ports": Array [],
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsNonRoot": false,
          },
          "volumeMounts": Array [],
        },
      ],
      "dnsConfig": Object {
        "nameservers": Array [],
        "options": Array [],
        "searches": Array [],
      },
      "dnsPolicy": "ClusterFirst",
      "hostAliases": Array [],
      "initContainers": Array [],
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
        "sysctls": Array [],
      },
      "setHostnameAsFQDN": false,
      "volumes": Array [],
    },
  },
]
`;

exports[`scheduling can be separated from an unmanaged pod - custom 1`] = `
Array [
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "name": "test-web-c854d28f",
    },
    "spec": Object {
      "affinity": Object {
        "nodeAffinity": Object {
          "preferredDuringSchedulingIgnoredDuringExecution": Array [],
          "requiredDuringSchedulingIgnoredDuringExecution": Object {
            "nodeSelectorTerms": Array [],
          },
        },
        "podAffinity": Object {
          "preferredDuringSchedulingIgnoredDuringExecution": Array [],
          "requiredDuringSchedulingIgnoredDuringExecution": Array [],
        },
        "podAntiAffinity": Object {
          "preferredDuringSchedulingIgnoredDuringExecution": Array [
            Object {
              "podAffinityTerm": Object {
                "labelSelector": Object {
                  "matchExpressions": Array [
                    Object {
                      "key": "app",
                      "operator": "In",
                      "values": Array [
                        "store",
                      ],
                    },
                  ],
                },
                "namespaceSelector": Object {
                  "matchExpressions": Array [
                    Object {
                      "key": "net",
                      "operator": "In",
                      "values": Array [
                        "1",
                      ],
                    },
                  ],
                },
                "namespaces": Array [
                  "n1",
                ],
                "topologyKey": "topology.kubernetes.io/zone",
              },
              "weight": 1,
            },
          ],
          "requiredDuringSchedulingIgnoredDuringExecution": Array [],
        },
      },
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "env": Array [],
          "image": "web",
          "imagePullPolicy": "Always",
          "name": "main",
          "ports": Array [],
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsNonRoot": false,
          },
          "volumeMounts": Array [],
        },
      ],
      "dnsConfig": Object {
        "nameservers": Array [],
        "options": Array [],
        "searches": Array [],
      },
      "dnsPolicy": "ClusterFirst",
      "hostAliases": Array [],
      "initContainers": Array [],
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
        "sysctls": Array [],
      },
      "setHostnameAsFQDN": false,
      "volumes": Array [],
    },
  },
]
`;

exports[`scheduling can be separated from an unmanaged pod - default 1`] = `
Array [
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "name": "test-web-c854d28f",
    },
    "spec": Object {
      "affinity": Object {
        "nodeAffinity": Object {
          "preferredDuringSchedulingIgnoredDuringExecution": Array [],
          "requiredDuringSchedulingIgnoredDuringExecution": Object {
            "nodeSelectorTerms": Array [],
          },
        },
        "podAffinity": Object {
          "preferredDuringSchedulingIgnoredDuringExecution": Array [],
          "requiredDuringSchedulingIgnoredDuringExecution": Array [],
        },
        "podAntiAffinity": Object {
          "preferredDuringSchedulingIgnoredDuringExecution": Array [],
          "requiredDuringSchedulingIgnoredDuringExecution": Array [
            Object {
              "labelSelector": Object {
                "matchExpressions": Array [
                  Object {
                    "key": "app",
                    "operator": "In",
                    "values": Array [
                      "store",
                    ],
                  },
                ],
              },
              "namespaceSelector": Object {
                "matchExpressions": Array [
                  Object {
                    "key": "net",
                    "operator": "In",
                    "values": Array [
                      "1",
                    ],
                  },
                ],
              },
              "namespaces": Array [
                "n1",
              ],
              "topologyKey": "kubernetes.io/hostname",
            },
          ],
        },
      },
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "env": Array [],
          "image": "web",
          "imagePullPolicy": "Always",
          "name": "main",
          "ports": Array [],
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsNonRoot": false,
          },
          "volumeMounts": Array [],
        },
      ],
      "dnsConfig": Object {
        "nameservers": Array [],
        "options": Array [],
        "searches": Array [],
      },
      "dnsPolicy": "ClusterFirst",
      "hostAliases": Array [],
      "initContainers": Array [],
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
        "sysctls": Array [],
      },
      "setHostnameAsFQDN": false,
      "volumes": Array [],
    },
  },
]
`;
