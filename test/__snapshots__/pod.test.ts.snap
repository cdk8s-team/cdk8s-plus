// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`can select pods 1`] = `
Object {
  "matchExpressions": Array [
    Object {
      "key": "key",
      "operator": "Exists",
      "values": undefined,
    },
  ],
  "matchLabels": Object {
    "foo": "bar",
  },
}
`;

exports[`can select pods 2`] = `
Object {
  "matchExpressions": undefined,
  "matchLabels": Object {
    "foo": "bar",
  },
}
`;

exports[`connections | allow from defaults to peer container ports 1`] = `
Array [
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "labels": Object {
        "cdk8s.io/metadata.addr": "test-Pod1-c8591188",
      },
      "name": "test-pod1-c8153666",
    },
    "spec": Object {
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "image": "pod",
          "imagePullPolicy": "Always",
          "name": "main",
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsNonRoot": false,
          },
        },
      ],
      "dnsPolicy": "ClusterFirst",
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
      },
      "setHostnameAsFQDN": false,
    },
  },
  Object {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "NetworkPolicy",
    "metadata": Object {
      "name": "allowingress676e20e1947168dc30ab3197af4a39ae-c863ba5a",
      "namespace": "default",
    },
    "spec": Object {
      "ingress": Array [
        Object {
          "from": Array [
            Object {
              "namespaceSelector": Object {
                "matchLabels": Object {
                  "kubernetes.io/metadata.name": "default",
                },
              },
              "podSelector": Object {
                "matchLabels": Object {
                  "cdk8s.io/metadata.addr": "test-Pod2-c82dc44e",
                },
              },
            },
          ],
          "ports": Array [],
        },
      ],
      "podSelector": Object {
        "matchLabels": Object {
          "cdk8s.io/metadata.addr": "test-Pod1-c8591188",
        },
      },
      "policyTypes": Array [
        "Ingress",
      ],
    },
  },
  Object {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "NetworkPolicy",
    "metadata": Object {
      "name": "allowegressdefault676e20e1947168dc30ab3197af4-c86eeef7",
      "namespace": "default",
    },
    "spec": Object {
      "egress": Array [
        Object {
          "ports": Array [],
          "to": Array [
            Object {
              "namespaceSelector": Object {
                "matchLabels": Object {
                  "kubernetes.io/metadata.name": "default",
                },
              },
              "podSelector": Object {
                "matchLabels": Object {
                  "cdk8s.io/metadata.addr": "test-Pod1-c8591188",
                },
              },
            },
          ],
        },
      ],
      "podSelector": Object {
        "matchLabels": Object {
          "cdk8s.io/metadata.addr": "test-Pod2-c82dc44e",
        },
      },
      "policyTypes": Array [
        "Egress",
      ],
    },
  },
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "labels": Object {
        "cdk8s.io/metadata.addr": "test-Pod2-c82dc44e",
      },
      "name": "test-pod2-c895d79d",
    },
    "spec": Object {
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "image": "pod",
          "imagePullPolicy": "Always",
          "name": "main",
          "ports": Array [
            Object {
              "containerPort": 6739,
            },
          ],
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsNonRoot": false,
          },
        },
      ],
      "dnsPolicy": "ClusterFirst",
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
      },
      "setHostnameAsFQDN": false,
    },
  },
]
`;

exports[`connections | allow from with peer isolation creates only ingress policy on peer 1`] = `
Array [
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "labels": Object {
        "cdk8s.io/metadata.addr": "test-Pod1-c8591188",
      },
      "name": "test-pod1-c8153666",
    },
    "spec": Object {
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "image": "pod",
          "imagePullPolicy": "Always",
          "name": "main",
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsNonRoot": false,
          },
        },
      ],
      "dnsPolicy": "ClusterFirst",
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
      },
      "setHostnameAsFQDN": false,
    },
  },
  Object {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "NetworkPolicy",
    "metadata": Object {
      "name": "allowegressdefault676e20e1947168dc30ab3197af4-c86eeef7",
      "namespace": "default",
    },
    "spec": Object {
      "egress": Array [
        Object {
          "ports": Array [],
          "to": Array [
            Object {
              "namespaceSelector": Object {
                "matchLabels": Object {
                  "kubernetes.io/metadata.name": "default",
                },
              },
              "podSelector": Object {
                "matchLabels": Object {
                  "cdk8s.io/metadata.addr": "test-Pod1-c8591188",
                },
              },
            },
          ],
        },
      ],
      "podSelector": Object {
        "matchLabels": Object {
          "cdk8s.io/metadata.addr": "test-Pod2-c82dc44e",
        },
      },
      "policyTypes": Array [
        "Egress",
      ],
    },
  },
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "labels": Object {
        "cdk8s.io/metadata.addr": "test-Pod2-c82dc44e",
      },
      "name": "test-pod2-c895d79d",
    },
    "spec": Object {
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "image": "pod",
          "imagePullPolicy": "Always",
          "name": "main",
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsNonRoot": false,
          },
        },
      ],
      "dnsPolicy": "ClusterFirst",
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
      },
      "setHostnameAsFQDN": false,
    },
  },
]
`;

exports[`connections | allow from with pod isolation creates only egress policy on pod 1`] = `
Array [
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "labels": Object {
        "cdk8s.io/metadata.addr": "test-Pod1-c8591188",
      },
      "name": "test-pod1-c8153666",
    },
    "spec": Object {
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "image": "pod",
          "imagePullPolicy": "Always",
          "name": "main",
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsNonRoot": false,
          },
        },
      ],
      "dnsPolicy": "ClusterFirst",
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
      },
      "setHostnameAsFQDN": false,
    },
  },
  Object {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "NetworkPolicy",
    "metadata": Object {
      "name": "allowingress676e20e1947168dc30ab3197af4a39ae-c863ba5a",
      "namespace": "default",
    },
    "spec": Object {
      "ingress": Array [
        Object {
          "from": Array [
            Object {
              "namespaceSelector": Object {
                "matchLabels": Object {
                  "kubernetes.io/metadata.name": "default",
                },
              },
              "podSelector": Object {
                "matchLabels": Object {
                  "cdk8s.io/metadata.addr": "test-Pod2-c82dc44e",
                },
              },
            },
          ],
          "ports": Array [],
        },
      ],
      "podSelector": Object {
        "matchLabels": Object {
          "cdk8s.io/metadata.addr": "test-Pod1-c8591188",
        },
      },
      "policyTypes": Array [
        "Ingress",
      ],
    },
  },
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "labels": Object {
        "cdk8s.io/metadata.addr": "test-Pod2-c82dc44e",
      },
      "name": "test-pod2-c895d79d",
    },
    "spec": Object {
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "image": "pod",
          "imagePullPolicy": "Always",
          "name": "main",
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsNonRoot": false,
          },
        },
      ],
      "dnsPolicy": "ClusterFirst",
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
      },
      "setHostnameAsFQDN": false,
    },
  },
]
`;

exports[`connections | allow to defaults to peer container ports 1`] = `
Array [
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "labels": Object {
        "cdk8s.io/metadata.addr": "test-Pod1-c8591188",
      },
      "name": "test-pod1-c8153666",
    },
    "spec": Object {
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "image": "pod",
          "imagePullPolicy": "Always",
          "name": "main",
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsNonRoot": false,
          },
        },
      ],
      "dnsPolicy": "ClusterFirst",
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
      },
      "setHostnameAsFQDN": false,
    },
  },
  Object {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "NetworkPolicy",
    "metadata": Object {
      "name": "p-allowegress676e20e1947168dc30ab3197af4a39ae-c8311550",
      "namespace": "default",
    },
    "spec": Object {
      "egress": Array [
        Object {
          "ports": Array [
            Object {
              "port": 6739,
              "protocol": "TCP",
            },
          ],
          "to": Array [
            Object {
              "namespaceSelector": Object {
                "matchLabels": Object {
                  "kubernetes.io/metadata.name": "default",
                },
              },
              "podSelector": Object {
                "matchLabels": Object {
                  "cdk8s.io/metadata.addr": "test-Pod2-c82dc44e",
                },
              },
            },
          ],
        },
      ],
      "podSelector": Object {
        "matchLabels": Object {
          "cdk8s.io/metadata.addr": "test-Pod1-c8591188",
        },
      },
      "policyTypes": Array [
        "Egress",
      ],
    },
  },
  Object {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "NetworkPolicy",
    "metadata": Object {
      "name": "allowingressdefault676e20e1947168dc30ab3197af-c87fd967",
      "namespace": "default",
    },
    "spec": Object {
      "ingress": Array [
        Object {
          "from": Array [
            Object {
              "namespaceSelector": Object {
                "matchLabels": Object {
                  "kubernetes.io/metadata.name": "default",
                },
              },
              "podSelector": Object {
                "matchLabels": Object {
                  "cdk8s.io/metadata.addr": "test-Pod1-c8591188",
                },
              },
            },
          ],
          "ports": Array [
            Object {
              "port": 6739,
              "protocol": "TCP",
            },
          ],
        },
      ],
      "podSelector": Object {
        "matchLabels": Object {
          "cdk8s.io/metadata.addr": "test-Pod2-c82dc44e",
        },
      },
      "policyTypes": Array [
        "Ingress",
      ],
    },
  },
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "labels": Object {
        "cdk8s.io/metadata.addr": "test-Pod2-c82dc44e",
      },
      "name": "test-pod2-c895d79d",
    },
    "spec": Object {
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "image": "pod",
          "imagePullPolicy": "Always",
          "name": "main",
          "ports": Array [
            Object {
              "containerPort": 6739,
            },
          ],
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsNonRoot": false,
          },
        },
      ],
      "dnsPolicy": "ClusterFirst",
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
      },
      "setHostnameAsFQDN": false,
    },
  },
]
`;

exports[`connections | allow to with peer isolation creates only ingress policy on peer 1`] = `
Array [
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "labels": Object {
        "cdk8s.io/metadata.addr": "test-Pod1-c8591188",
      },
      "name": "test-pod1-c8153666",
    },
    "spec": Object {
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "image": "pod",
          "imagePullPolicy": "Always",
          "name": "main",
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsNonRoot": false,
          },
        },
      ],
      "dnsPolicy": "ClusterFirst",
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
      },
      "setHostnameAsFQDN": false,
    },
  },
  Object {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "NetworkPolicy",
    "metadata": Object {
      "name": "allowingressdefault676e20e1947168dc30ab3197af-c87fd967",
      "namespace": "default",
    },
    "spec": Object {
      "ingress": Array [
        Object {
          "from": Array [
            Object {
              "namespaceSelector": Object {
                "matchLabels": Object {
                  "kubernetes.io/metadata.name": "default",
                },
              },
              "podSelector": Object {
                "matchLabels": Object {
                  "cdk8s.io/metadata.addr": "test-Pod1-c8591188",
                },
              },
            },
          ],
          "ports": Array [],
        },
      ],
      "podSelector": Object {
        "matchLabels": Object {
          "cdk8s.io/metadata.addr": "test-Pod2-c82dc44e",
        },
      },
      "policyTypes": Array [
        "Ingress",
      ],
    },
  },
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "labels": Object {
        "cdk8s.io/metadata.addr": "test-Pod2-c82dc44e",
      },
      "name": "test-pod2-c895d79d",
    },
    "spec": Object {
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "image": "pod",
          "imagePullPolicy": "Always",
          "name": "main",
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsNonRoot": false,
          },
        },
      ],
      "dnsPolicy": "ClusterFirst",
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
      },
      "setHostnameAsFQDN": false,
    },
  },
]
`;

exports[`connections | allow to with pod isolation creates only egress policy on pod 1`] = `
Array [
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "labels": Object {
        "cdk8s.io/metadata.addr": "test-Pod1-c8591188",
      },
      "name": "test-pod1-c8153666",
    },
    "spec": Object {
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "image": "pod",
          "imagePullPolicy": "Always",
          "name": "main",
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsNonRoot": false,
          },
        },
      ],
      "dnsPolicy": "ClusterFirst",
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
      },
      "setHostnameAsFQDN": false,
    },
  },
  Object {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "NetworkPolicy",
    "metadata": Object {
      "name": "p-allowegress676e20e1947168dc30ab3197af4a39ae-c8311550",
      "namespace": "default",
    },
    "spec": Object {
      "egress": Array [
        Object {
          "ports": Array [],
          "to": Array [
            Object {
              "namespaceSelector": Object {
                "matchLabels": Object {
                  "kubernetes.io/metadata.name": "default",
                },
              },
              "podSelector": Object {
                "matchLabels": Object {
                  "cdk8s.io/metadata.addr": "test-Pod2-c82dc44e",
                },
              },
            },
          ],
        },
      ],
      "podSelector": Object {
        "matchLabels": Object {
          "cdk8s.io/metadata.addr": "test-Pod1-c8591188",
        },
      },
      "policyTypes": Array [
        "Egress",
      ],
    },
  },
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "labels": Object {
        "cdk8s.io/metadata.addr": "test-Pod2-c82dc44e",
      },
      "name": "test-pod2-c895d79d",
    },
    "spec": Object {
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "image": "pod",
          "imagePullPolicy": "Always",
          "name": "main",
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsNonRoot": false,
          },
        },
      ],
      "dnsPolicy": "ClusterFirst",
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
      },
      "setHostnameAsFQDN": false,
    },
  },
]
`;

exports[`connections | can allow from all pods 1`] = `
Array [
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "labels": Object {
        "cdk8s.io/metadata.addr": "test-Pod-c815bc91",
      },
      "name": "test-pod-c890e1b8",
    },
    "spec": Object {
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "image": "pod",
          "imagePullPolicy": "Always",
          "name": "main",
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsNonRoot": false,
          },
        },
      ],
      "dnsPolicy": "ClusterFirst",
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
      },
      "setHostnameAsFQDN": false,
    },
  },
  Object {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "NetworkPolicy",
    "metadata": Object {
      "name": "allowingress6656fb86cd5e129695657c4f69ce44ca-c8145ee2",
      "namespace": "default",
    },
    "spec": Object {
      "ingress": Array [
        Object {
          "from": Array [
            Object {
              "podSelector": Object {},
            },
          ],
          "ports": Array [],
        },
      ],
      "podSelector": Object {
        "matchLabels": Object {
          "cdk8s.io/metadata.addr": "test-Pod-c815bc91",
        },
      },
      "policyTypes": Array [
        "Ingress",
      ],
    },
  },
  Object {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "NetworkPolicy",
    "metadata": Object {
      "name": "allowegressdefault6656fb86cd5e129695657c4f69c-c8498c63",
      "namespace": "default",
    },
    "spec": Object {
      "egress": Array [
        Object {
          "ports": Array [],
          "to": Array [
            Object {
              "namespaceSelector": Object {
                "matchLabels": Object {
                  "kubernetes.io/metadata.name": "default",
                },
              },
              "podSelector": Object {
                "matchLabels": Object {
                  "cdk8s.io/metadata.addr": "test-Pod-c815bc91",
                },
              },
            },
          ],
        },
      ],
      "podSelector": Object {},
      "policyTypes": Array [
        "Egress",
      ],
    },
  },
]
`;

exports[`connections | can allow from ip block 1`] = `
Array [
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "labels": Object {
        "cdk8s.io/metadata.addr": "test-Pod-c815bc91",
      },
      "name": "test-pod-c890e1b8",
    },
    "spec": Object {
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "image": "pod",
          "imagePullPolicy": "Always",
          "name": "main",
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsNonRoot": false,
          },
        },
      ],
      "dnsPolicy": "ClusterFirst",
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
      },
      "setHostnameAsFQDN": false,
    },
  },
  Object {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "NetworkPolicy",
    "metadata": Object {
      "name": "allowingressc88db22008a01c8e2b472a6a5ce6991f-c82cb114",
      "namespace": "default",
    },
    "spec": Object {
      "ingress": Array [
        Object {
          "from": Array [
            Object {
              "ipBlock": Object {
                "cidr": "0.0.0.0/0",
              },
            },
          ],
          "ports": Array [],
        },
      ],
      "podSelector": Object {
        "matchLabels": Object {
          "cdk8s.io/metadata.addr": "test-Pod-c815bc91",
        },
      },
      "policyTypes": Array [
        "Ingress",
      ],
    },
  },
]
`;

exports[`connections | can allow from managed namespace 1`] = `
Array [
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "labels": Object {
        "cdk8s.io/metadata.addr": "test-Pod-c815bc91",
      },
      "name": "test-pod-c890e1b8",
    },
    "spec": Object {
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "image": "pod",
          "imagePullPolicy": "Always",
          "name": "main",
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsNonRoot": false,
          },
        },
      ],
      "dnsPolicy": "ClusterFirst",
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
      },
      "setHostnameAsFQDN": false,
    },
  },
  Object {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "NetworkPolicy",
    "metadata": Object {
      "name": "allowingressf94005c2734944c062c55002e41f64a6-c888f70c",
      "namespace": "default",
    },
    "spec": Object {
      "ingress": Array [
        Object {
          "from": Array [
            Object {
              "namespaceSelector": Object {
                "matchLabels": Object {
                  "kubernetes.io/metadata.name": "test-namespace-c83f04e1",
                },
              },
              "podSelector": Object {},
            },
          ],
          "ports": Array [],
        },
      ],
      "podSelector": Object {
        "matchLabels": Object {
          "cdk8s.io/metadata.addr": "test-Pod-c815bc91",
        },
      },
      "policyTypes": Array [
        "Ingress",
      ],
    },
  },
  Object {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "NetworkPolicy",
    "metadata": Object {
      "name": "allowegresstest-namespace-c83f04e1f94005c2734-c8e8421f",
      "namespace": "test-namespace-c83f04e1",
    },
    "spec": Object {
      "egress": Array [
        Object {
          "ports": Array [],
          "to": Array [
            Object {
              "namespaceSelector": Object {
                "matchLabels": Object {
                  "kubernetes.io/metadata.name": "default",
                },
              },
              "podSelector": Object {
                "matchLabels": Object {
                  "cdk8s.io/metadata.addr": "test-Pod-c815bc91",
                },
              },
            },
          ],
        },
      ],
      "podSelector": Object {},
      "policyTypes": Array [
        "Egress",
      ],
    },
  },
  Object {
    "apiVersion": "v1",
    "kind": "Namespace",
    "metadata": Object {
      "name": "test-namespace-c83f04e1",
    },
    "spec": Object {},
  },
]
`;

exports[`connections | can allow from managed pod 1`] = `
Array [
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "labels": Object {
        "cdk8s.io/metadata.addr": "test-Pod1-c8591188",
      },
      "name": "test-pod1-c8153666",
    },
    "spec": Object {
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "image": "pod",
          "imagePullPolicy": "Always",
          "name": "main",
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsNonRoot": false,
          },
        },
      ],
      "dnsPolicy": "ClusterFirst",
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
      },
      "setHostnameAsFQDN": false,
    },
  },
  Object {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "NetworkPolicy",
    "metadata": Object {
      "name": "allowingress676e20e1947168dc30ab3197af4a39ae-c863ba5a",
      "namespace": "default",
    },
    "spec": Object {
      "ingress": Array [
        Object {
          "from": Array [
            Object {
              "namespaceSelector": Object {
                "matchLabels": Object {
                  "kubernetes.io/metadata.name": "default",
                },
              },
              "podSelector": Object {
                "matchLabels": Object {
                  "cdk8s.io/metadata.addr": "test-Pod2-c82dc44e",
                },
              },
            },
          ],
          "ports": Array [],
        },
      ],
      "podSelector": Object {
        "matchLabels": Object {
          "cdk8s.io/metadata.addr": "test-Pod1-c8591188",
        },
      },
      "policyTypes": Array [
        "Ingress",
      ],
    },
  },
  Object {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "NetworkPolicy",
    "metadata": Object {
      "name": "allowegressdefault676e20e1947168dc30ab3197af4-c86eeef7",
      "namespace": "default",
    },
    "spec": Object {
      "egress": Array [
        Object {
          "ports": Array [],
          "to": Array [
            Object {
              "namespaceSelector": Object {
                "matchLabels": Object {
                  "kubernetes.io/metadata.name": "default",
                },
              },
              "podSelector": Object {
                "matchLabels": Object {
                  "cdk8s.io/metadata.addr": "test-Pod1-c8591188",
                },
              },
            },
          ],
        },
      ],
      "podSelector": Object {
        "matchLabels": Object {
          "cdk8s.io/metadata.addr": "test-Pod2-c82dc44e",
        },
      },
      "policyTypes": Array [
        "Egress",
      ],
    },
  },
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "labels": Object {
        "cdk8s.io/metadata.addr": "test-Pod2-c82dc44e",
      },
      "name": "test-pod2-c895d79d",
    },
    "spec": Object {
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "image": "pod",
          "imagePullPolicy": "Always",
          "name": "main",
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsNonRoot": false,
          },
        },
      ],
      "dnsPolicy": "ClusterFirst",
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
      },
      "setHostnameAsFQDN": false,
    },
  },
]
`;

exports[`connections | can allow from managed workload resource 1`] = `
Array [
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "labels": Object {
        "cdk8s.io/metadata.addr": "test-Pod-c815bc91",
      },
      "name": "test-pod-c890e1b8",
    },
    "spec": Object {
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "image": "pod",
          "imagePullPolicy": "Always",
          "name": "main",
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsNonRoot": false,
          },
        },
      ],
      "dnsPolicy": "ClusterFirst",
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
      },
      "setHostnameAsFQDN": false,
    },
  },
  Object {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "NetworkPolicy",
    "metadata": Object {
      "name": "allowingress3c9336a2e2439657a18cfc71afdd04b5-c80ebeff",
      "namespace": "default",
    },
    "spec": Object {
      "ingress": Array [
        Object {
          "from": Array [
            Object {
              "namespaceSelector": Object {
                "matchLabels": Object {
                  "kubernetes.io/metadata.name": "default",
                },
              },
              "podSelector": Object {
                "matchLabels": Object {
                  "cdk8s.io/metadata.addr": "test-Deployment-c83f5e59",
                },
              },
            },
          ],
          "ports": Array [],
        },
      ],
      "podSelector": Object {
        "matchLabels": Object {
          "cdk8s.io/metadata.addr": "test-Pod-c815bc91",
        },
      },
      "policyTypes": Array [
        "Ingress",
      ],
    },
  },
  Object {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "NetworkPolicy",
    "metadata": Object {
      "name": "allowegressdefault3c9336a2e2439657a18cfc71afd-c8c1a473",
      "namespace": "default",
    },
    "spec": Object {
      "egress": Array [
        Object {
          "ports": Array [],
          "to": Array [
            Object {
              "namespaceSelector": Object {
                "matchLabels": Object {
                  "kubernetes.io/metadata.name": "default",
                },
              },
              "podSelector": Object {
                "matchLabels": Object {
                  "cdk8s.io/metadata.addr": "test-Pod-c815bc91",
                },
              },
            },
          ],
        },
      ],
      "podSelector": Object {
        "matchLabels": Object {
          "cdk8s.io/metadata.addr": "test-Deployment-c83f5e59",
        },
      },
      "policyTypes": Array [
        "Egress",
      ],
    },
  },
  Object {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": Object {
      "name": "test-deployment-c898c72d",
    },
    "spec": Object {
      "minReadySeconds": 0,
      "progressDeadlineSeconds": 600,
      "replicas": 1,
      "selector": Object {
        "matchLabels": Object {
          "cdk8s.io/metadata.addr": "test-Deployment-c83f5e59",
        },
      },
      "strategy": Object {
        "rollingUpdate": Object {
          "maxSurge": "25%",
          "maxUnavailable": "25%",
        },
        "type": "RollingUpdate",
      },
      "template": Object {
        "metadata": Object {
          "labels": Object {
            "cdk8s.io/metadata.addr": "test-Deployment-c83f5e59",
          },
        },
        "spec": Object {
          "automountServiceAccountToken": true,
          "containers": Array [
            Object {
              "image": "pod",
              "imagePullPolicy": "Always",
              "name": "main",
              "securityContext": Object {
                "privileged": false,
                "readOnlyRootFilesystem": false,
                "runAsNonRoot": false,
              },
            },
          ],
          "dnsPolicy": "ClusterFirst",
          "securityContext": Object {
            "fsGroupChangePolicy": "Always",
            "runAsNonRoot": false,
          },
          "setHostnameAsFQDN": false,
        },
      },
    },
  },
]
`;

exports[`connections | can allow from namespaces selected by name 1`] = `
Array [
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "labels": Object {
        "cdk8s.io/metadata.addr": "test-Pod-c815bc91",
      },
      "name": "test-pod-c890e1b8",
    },
    "spec": Object {
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "image": "pod",
          "imagePullPolicy": "Always",
          "name": "main",
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsNonRoot": false,
          },
        },
      ],
      "dnsPolicy": "ClusterFirst",
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
      },
      "setHostnameAsFQDN": false,
    },
  },
  Object {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "NetworkPolicy",
    "metadata": Object {
      "name": "allowingress4a1a052274bbd9057096e3196e010b21-c800bb1b",
      "namespace": "default",
    },
    "spec": Object {
      "ingress": Array [
        Object {
          "from": Array [
            Object {
              "namespaceSelector": Object {
                "matchLabels": Object {
                  "kubernetes.io/metadata.name": "n1",
                },
              },
              "podSelector": Object {},
            },
          ],
          "ports": Array [],
        },
      ],
      "podSelector": Object {
        "matchLabels": Object {
          "cdk8s.io/metadata.addr": "test-Pod-c815bc91",
        },
      },
      "policyTypes": Array [
        "Ingress",
      ],
    },
  },
  Object {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "NetworkPolicy",
    "metadata": Object {
      "name": "allowegressn14a1a052274bbd9057096e3196e010b21-c82cb124",
      "namespace": "n1",
    },
    "spec": Object {
      "egress": Array [
        Object {
          "ports": Array [],
          "to": Array [
            Object {
              "namespaceSelector": Object {
                "matchLabels": Object {
                  "kubernetes.io/metadata.name": "default",
                },
              },
              "podSelector": Object {
                "matchLabels": Object {
                  "cdk8s.io/metadata.addr": "test-Pod-c815bc91",
                },
              },
            },
          ],
        },
      ],
      "podSelector": Object {},
      "policyTypes": Array [
        "Egress",
      ],
    },
  },
]
`;

exports[`connections | can allow from peer across namespaces 1`] = `
Array [
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "labels": Object {
        "cdk8s.io/metadata.addr": "test-Pod1-c8591188",
      },
      "name": "test-pod1-c8153666",
      "namespace": "n1",
    },
    "spec": Object {
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "image": "pod",
          "imagePullPolicy": "Always",
          "name": "main",
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsNonRoot": false,
          },
        },
      ],
      "dnsPolicy": "ClusterFirst",
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
      },
      "setHostnameAsFQDN": false,
    },
  },
  Object {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "NetworkPolicy",
    "metadata": Object {
      "name": "allowingressa6511c352ae027dce3e4915705ed577d-c8944c92",
      "namespace": "n1",
    },
    "spec": Object {
      "ingress": Array [
        Object {
          "from": Array [
            Object {
              "namespaceSelector": Object {
                "matchLabels": Object {
                  "kubernetes.io/metadata.name": "n2",
                },
              },
              "podSelector": Object {
                "matchLabels": Object {
                  "cdk8s.io/metadata.addr": "test-Pod2-c82dc44e",
                },
              },
            },
          ],
          "ports": Array [],
        },
      ],
      "podSelector": Object {
        "matchLabels": Object {
          "cdk8s.io/metadata.addr": "test-Pod1-c8591188",
        },
      },
      "policyTypes": Array [
        "Ingress",
      ],
    },
  },
  Object {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "NetworkPolicy",
    "metadata": Object {
      "name": "allowegressn2a6511c352ae027dce3e4915705ed577d-c8b36798",
      "namespace": "n2",
    },
    "spec": Object {
      "egress": Array [
        Object {
          "ports": Array [],
          "to": Array [
            Object {
              "namespaceSelector": Object {
                "matchLabels": Object {
                  "kubernetes.io/metadata.name": "n1",
                },
              },
              "podSelector": Object {
                "matchLabels": Object {
                  "cdk8s.io/metadata.addr": "test-Pod1-c8591188",
                },
              },
            },
          ],
        },
      ],
      "podSelector": Object {
        "matchLabels": Object {
          "cdk8s.io/metadata.addr": "test-Pod2-c82dc44e",
        },
      },
      "policyTypes": Array [
        "Egress",
      ],
    },
  },
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "labels": Object {
        "cdk8s.io/metadata.addr": "test-Pod2-c82dc44e",
      },
      "name": "test-pod2-c895d79d",
      "namespace": "n2",
    },
    "spec": Object {
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "image": "pod",
          "imagePullPolicy": "Always",
          "name": "main",
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsNonRoot": false,
          },
        },
      ],
      "dnsPolicy": "ClusterFirst",
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
      },
      "setHostnameAsFQDN": false,
    },
  },
]
`;

exports[`connections | can allow from pods selected with namespaces selected by names 1`] = `
Array [
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "labels": Object {
        "cdk8s.io/metadata.addr": "test-Pod-c815bc91",
      },
      "name": "test-pod-c890e1b8",
    },
    "spec": Object {
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "image": "pod",
          "imagePullPolicy": "Always",
          "name": "main",
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsNonRoot": false,
          },
        },
      ],
      "dnsPolicy": "ClusterFirst",
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
      },
      "setHostnameAsFQDN": false,
    },
  },
  Object {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "NetworkPolicy",
    "metadata": Object {
      "name": "allowingress1ee4490134b0f304d5fb3317bd4379df-c8a5f4ef",
      "namespace": "default",
    },
    "spec": Object {
      "ingress": Array [
        Object {
          "from": Array [
            Object {
              "namespaceSelector": Object {
                "matchLabels": Object {
                  "kubernetes.io/metadata.name": "selected1",
                },
              },
              "podSelector": Object {
                "matchLabels": Object {
                  "type": "selected",
                },
              },
            },
            Object {
              "namespaceSelector": Object {
                "matchLabels": Object {
                  "kubernetes.io/metadata.name": "selected2",
                },
              },
              "podSelector": Object {
                "matchLabels": Object {
                  "type": "selected",
                },
              },
            },
          ],
          "ports": Array [],
        },
      ],
      "podSelector": Object {
        "matchLabels": Object {
          "cdk8s.io/metadata.addr": "test-Pod-c815bc91",
        },
      },
      "policyTypes": Array [
        "Ingress",
      ],
    },
  },
  Object {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "NetworkPolicy",
    "metadata": Object {
      "name": "allowegressselected11ee4490134b0f304d5fb3317b-c8d43410",
      "namespace": "selected1",
    },
    "spec": Object {
      "egress": Array [
        Object {
          "ports": Array [],
          "to": Array [
            Object {
              "namespaceSelector": Object {
                "matchLabels": Object {
                  "kubernetes.io/metadata.name": "default",
                },
              },
              "podSelector": Object {
                "matchLabels": Object {
                  "cdk8s.io/metadata.addr": "test-Pod-c815bc91",
                },
              },
            },
          ],
        },
      ],
      "podSelector": Object {
        "matchLabels": Object {
          "type": "selected",
        },
      },
      "policyTypes": Array [
        "Egress",
      ],
    },
  },
  Object {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "NetworkPolicy",
    "metadata": Object {
      "name": "allowegressselected21ee4490134b0f304d5fb3317b-c81912c2",
      "namespace": "selected2",
    },
    "spec": Object {
      "egress": Array [
        Object {
          "ports": Array [],
          "to": Array [
            Object {
              "namespaceSelector": Object {
                "matchLabels": Object {
                  "kubernetes.io/metadata.name": "default",
                },
              },
              "podSelector": Object {
                "matchLabels": Object {
                  "cdk8s.io/metadata.addr": "test-Pod-c815bc91",
                },
              },
            },
          ],
        },
      ],
      "podSelector": Object {
        "matchLabels": Object {
          "type": "selected",
        },
      },
      "policyTypes": Array [
        "Egress",
      ],
    },
  },
]
`;

exports[`connections | can allow from pods selected without namespaces 1`] = `
Array [
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "labels": Object {
        "cdk8s.io/metadata.addr": "test-Pod-c815bc91",
      },
      "name": "test-pod-c890e1b8",
    },
    "spec": Object {
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "image": "pod",
          "imagePullPolicy": "Always",
          "name": "main",
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsNonRoot": false,
          },
        },
      ],
      "dnsPolicy": "ClusterFirst",
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
      },
      "setHostnameAsFQDN": false,
    },
  },
  Object {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "NetworkPolicy",
    "metadata": Object {
      "name": "allowingressa4ce161a930bfd63a7e9156180aa002e-c8aefbeb",
      "namespace": "default",
    },
    "spec": Object {
      "ingress": Array [
        Object {
          "from": Array [
            Object {
              "podSelector": Object {
                "matchLabels": Object {
                  "type": "selected",
                },
              },
            },
          ],
          "ports": Array [],
        },
      ],
      "podSelector": Object {
        "matchLabels": Object {
          "cdk8s.io/metadata.addr": "test-Pod-c815bc91",
        },
      },
      "policyTypes": Array [
        "Ingress",
      ],
    },
  },
  Object {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "NetworkPolicy",
    "metadata": Object {
      "name": "allowegressdefaulta4ce161a930bfd63a7e9156180a-c8bc1f07",
      "namespace": "default",
    },
    "spec": Object {
      "egress": Array [
        Object {
          "ports": Array [],
          "to": Array [
            Object {
              "namespaceSelector": Object {
                "matchLabels": Object {
                  "kubernetes.io/metadata.name": "default",
                },
              },
              "podSelector": Object {
                "matchLabels": Object {
                  "cdk8s.io/metadata.addr": "test-Pod-c815bc91",
                },
              },
            },
          ],
        },
      ],
      "podSelector": Object {
        "matchLabels": Object {
          "type": "selected",
        },
      },
      "policyTypes": Array [
        "Egress",
      ],
    },
  },
]
`;

exports[`connections | can allow to all pods 1`] = `
Array [
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "labels": Object {
        "cdk8s.io/metadata.addr": "test-Pod-c815bc91",
      },
      "name": "test-pod-c890e1b8",
    },
    "spec": Object {
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "image": "pod",
          "imagePullPolicy": "Always",
          "name": "main",
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsNonRoot": false,
          },
        },
      ],
      "dnsPolicy": "ClusterFirst",
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
      },
      "setHostnameAsFQDN": false,
    },
  },
  Object {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "NetworkPolicy",
    "metadata": Object {
      "name": "p-allowegress6656fb86cd5e129695657c4f69ce44ca-c83384af",
      "namespace": "default",
    },
    "spec": Object {
      "egress": Array [
        Object {
          "ports": Array [],
          "to": Array [
            Object {
              "podSelector": Object {},
            },
          ],
        },
      ],
      "podSelector": Object {
        "matchLabels": Object {
          "cdk8s.io/metadata.addr": "test-Pod-c815bc91",
        },
      },
      "policyTypes": Array [
        "Egress",
      ],
    },
  },
  Object {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "NetworkPolicy",
    "metadata": Object {
      "name": "allowingressdefault6656fb86cd5e129695657c4f69-c89c9d48",
      "namespace": "default",
    },
    "spec": Object {
      "ingress": Array [
        Object {
          "from": Array [
            Object {
              "namespaceSelector": Object {
                "matchLabels": Object {
                  "kubernetes.io/metadata.name": "default",
                },
              },
              "podSelector": Object {
                "matchLabels": Object {
                  "cdk8s.io/metadata.addr": "test-Pod-c815bc91",
                },
              },
            },
          ],
          "ports": Array [],
        },
      ],
      "podSelector": Object {},
      "policyTypes": Array [
        "Ingress",
      ],
    },
  },
]
`;

exports[`connections | can allow to ip block 1`] = `
Array [
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "labels": Object {
        "cdk8s.io/metadata.addr": "test-Pod-c815bc91",
      },
      "name": "test-pod-c890e1b8",
    },
    "spec": Object {
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "image": "pod",
          "imagePullPolicy": "Always",
          "name": "main",
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsNonRoot": false,
          },
        },
      ],
      "dnsPolicy": "ClusterFirst",
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
      },
      "setHostnameAsFQDN": false,
    },
  },
  Object {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "NetworkPolicy",
    "metadata": Object {
      "name": "p-allowegressc88db22008a01c8e2b472a6a5ce6991f-c8d105cb",
      "namespace": "default",
    },
    "spec": Object {
      "egress": Array [
        Object {
          "ports": Array [],
          "to": Array [
            Object {
              "ipBlock": Object {
                "cidr": "0.0.0.0/0",
              },
            },
          ],
        },
      ],
      "podSelector": Object {
        "matchLabels": Object {
          "cdk8s.io/metadata.addr": "test-Pod-c815bc91",
        },
      },
      "policyTypes": Array [
        "Egress",
      ],
    },
  },
]
`;

exports[`connections | can allow to managed namespace 1`] = `
Array [
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "labels": Object {
        "cdk8s.io/metadata.addr": "test-Pod-c815bc91",
      },
      "name": "test-pod-c890e1b8",
    },
    "spec": Object {
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "image": "pod",
          "imagePullPolicy": "Always",
          "name": "main",
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsNonRoot": false,
          },
        },
      ],
      "dnsPolicy": "ClusterFirst",
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
      },
      "setHostnameAsFQDN": false,
    },
  },
  Object {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "NetworkPolicy",
    "metadata": Object {
      "name": "p-allowegressf94005c2734944c062c55002e41f64a6-c8f8d57c",
      "namespace": "default",
    },
    "spec": Object {
      "egress": Array [
        Object {
          "ports": Array [],
          "to": Array [
            Object {
              "namespaceSelector": Object {
                "matchLabels": Object {
                  "kubernetes.io/metadata.name": "test-namespace-c83f04e1",
                },
              },
              "podSelector": Object {},
            },
          ],
        },
      ],
      "podSelector": Object {
        "matchLabels": Object {
          "cdk8s.io/metadata.addr": "test-Pod-c815bc91",
        },
      },
      "policyTypes": Array [
        "Egress",
      ],
    },
  },
  Object {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "NetworkPolicy",
    "metadata": Object {
      "name": "allowingresstest-namespace-c83f04e1f94005c273-c809452a",
      "namespace": "test-namespace-c83f04e1",
    },
    "spec": Object {
      "ingress": Array [
        Object {
          "from": Array [
            Object {
              "namespaceSelector": Object {
                "matchLabels": Object {
                  "kubernetes.io/metadata.name": "default",
                },
              },
              "podSelector": Object {
                "matchLabels": Object {
                  "cdk8s.io/metadata.addr": "test-Pod-c815bc91",
                },
              },
            },
          ],
          "ports": Array [],
        },
      ],
      "podSelector": Object {},
      "policyTypes": Array [
        "Ingress",
      ],
    },
  },
  Object {
    "apiVersion": "v1",
    "kind": "Namespace",
    "metadata": Object {
      "name": "test-namespace-c83f04e1",
    },
    "spec": Object {},
  },
]
`;

exports[`connections | can allow to managed pod 1`] = `
Array [
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "labels": Object {
        "cdk8s.io/metadata.addr": "test-Pod1-c8591188",
      },
      "name": "test-pod1-c8153666",
    },
    "spec": Object {
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "image": "pod",
          "imagePullPolicy": "Always",
          "name": "main",
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsNonRoot": false,
          },
        },
      ],
      "dnsPolicy": "ClusterFirst",
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
      },
      "setHostnameAsFQDN": false,
    },
  },
  Object {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "NetworkPolicy",
    "metadata": Object {
      "name": "p-allowegress676e20e1947168dc30ab3197af4a39ae-c8311550",
      "namespace": "default",
    },
    "spec": Object {
      "egress": Array [
        Object {
          "ports": Array [
            Object {
              "port": 4444,
              "protocol": "TCP",
            },
          ],
          "to": Array [
            Object {
              "namespaceSelector": Object {
                "matchLabels": Object {
                  "kubernetes.io/metadata.name": "default",
                },
              },
              "podSelector": Object {
                "matchLabels": Object {
                  "cdk8s.io/metadata.addr": "test-Pod2-c82dc44e",
                },
              },
            },
          ],
        },
      ],
      "podSelector": Object {
        "matchLabels": Object {
          "cdk8s.io/metadata.addr": "test-Pod1-c8591188",
        },
      },
      "policyTypes": Array [
        "Egress",
      ],
    },
  },
  Object {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "NetworkPolicy",
    "metadata": Object {
      "name": "allowingressdefault676e20e1947168dc30ab3197af-c87fd967",
      "namespace": "default",
    },
    "spec": Object {
      "ingress": Array [
        Object {
          "from": Array [
            Object {
              "namespaceSelector": Object {
                "matchLabels": Object {
                  "kubernetes.io/metadata.name": "default",
                },
              },
              "podSelector": Object {
                "matchLabels": Object {
                  "cdk8s.io/metadata.addr": "test-Pod1-c8591188",
                },
              },
            },
          ],
          "ports": Array [
            Object {
              "port": 4444,
              "protocol": "TCP",
            },
          ],
        },
      ],
      "podSelector": Object {
        "matchLabels": Object {
          "cdk8s.io/metadata.addr": "test-Pod2-c82dc44e",
        },
      },
      "policyTypes": Array [
        "Ingress",
      ],
    },
  },
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "labels": Object {
        "cdk8s.io/metadata.addr": "test-Pod2-c82dc44e",
      },
      "name": "test-pod2-c895d79d",
    },
    "spec": Object {
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "image": "pod",
          "imagePullPolicy": "Always",
          "name": "main",
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsNonRoot": false,
          },
        },
      ],
      "dnsPolicy": "ClusterFirst",
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
      },
      "setHostnameAsFQDN": false,
    },
  },
]
`;

exports[`connections | can allow to managed workload resource 1`] = `
Array [
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "labels": Object {
        "cdk8s.io/metadata.addr": "test-Pod-c815bc91",
      },
      "name": "test-pod-c890e1b8",
    },
    "spec": Object {
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "image": "pod",
          "imagePullPolicy": "Always",
          "name": "main",
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsNonRoot": false,
          },
        },
      ],
      "dnsPolicy": "ClusterFirst",
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
      },
      "setHostnameAsFQDN": false,
    },
  },
  Object {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "NetworkPolicy",
    "metadata": Object {
      "name": "p-allowegress3c9336a2e2439657a18cfc71afdd04b5-c89ecfd8",
      "namespace": "default",
    },
    "spec": Object {
      "egress": Array [
        Object {
          "ports": Array [],
          "to": Array [
            Object {
              "namespaceSelector": Object {
                "matchLabels": Object {
                  "kubernetes.io/metadata.name": "default",
                },
              },
              "podSelector": Object {
                "matchLabels": Object {
                  "cdk8s.io/metadata.addr": "test-Deployment-c83f5e59",
                },
              },
            },
          ],
        },
      ],
      "podSelector": Object {
        "matchLabels": Object {
          "cdk8s.io/metadata.addr": "test-Pod-c815bc91",
        },
      },
      "policyTypes": Array [
        "Egress",
      ],
    },
  },
  Object {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "NetworkPolicy",
    "metadata": Object {
      "name": "allowingressdefault3c9336a2e2439657a18cfc71af-c8758a91",
      "namespace": "default",
    },
    "spec": Object {
      "ingress": Array [
        Object {
          "from": Array [
            Object {
              "namespaceSelector": Object {
                "matchLabels": Object {
                  "kubernetes.io/metadata.name": "default",
                },
              },
              "podSelector": Object {
                "matchLabels": Object {
                  "cdk8s.io/metadata.addr": "test-Pod-c815bc91",
                },
              },
            },
          ],
          "ports": Array [],
        },
      ],
      "podSelector": Object {
        "matchLabels": Object {
          "cdk8s.io/metadata.addr": "test-Deployment-c83f5e59",
        },
      },
      "policyTypes": Array [
        "Ingress",
      ],
    },
  },
  Object {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": Object {
      "name": "test-deployment-c898c72d",
    },
    "spec": Object {
      "minReadySeconds": 0,
      "progressDeadlineSeconds": 600,
      "replicas": 1,
      "selector": Object {
        "matchLabels": Object {
          "cdk8s.io/metadata.addr": "test-Deployment-c83f5e59",
        },
      },
      "strategy": Object {
        "rollingUpdate": Object {
          "maxSurge": "25%",
          "maxUnavailable": "25%",
        },
        "type": "RollingUpdate",
      },
      "template": Object {
        "metadata": Object {
          "labels": Object {
            "cdk8s.io/metadata.addr": "test-Deployment-c83f5e59",
          },
        },
        "spec": Object {
          "automountServiceAccountToken": true,
          "containers": Array [
            Object {
              "image": "pod",
              "imagePullPolicy": "Always",
              "name": "main",
              "securityContext": Object {
                "privileged": false,
                "readOnlyRootFilesystem": false,
                "runAsNonRoot": false,
              },
            },
          ],
          "dnsPolicy": "ClusterFirst",
          "securityContext": Object {
            "fsGroupChangePolicy": "Always",
            "runAsNonRoot": false,
          },
          "setHostnameAsFQDN": false,
        },
      },
    },
  },
]
`;

exports[`connections | can allow to namespaces selected by name 1`] = `
Array [
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "labels": Object {
        "cdk8s.io/metadata.addr": "test-Pod-c815bc91",
      },
      "name": "test-pod-c890e1b8",
    },
    "spec": Object {
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "image": "pod",
          "imagePullPolicy": "Always",
          "name": "main",
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsNonRoot": false,
          },
        },
      ],
      "dnsPolicy": "ClusterFirst",
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
      },
      "setHostnameAsFQDN": false,
    },
  },
  Object {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "NetworkPolicy",
    "metadata": Object {
      "name": "p-allowegress4a1a052274bbd9057096e3196e010b21-c804f9aa",
      "namespace": "default",
    },
    "spec": Object {
      "egress": Array [
        Object {
          "ports": Array [],
          "to": Array [
            Object {
              "namespaceSelector": Object {
                "matchLabels": Object {
                  "kubernetes.io/metadata.name": "n1",
                },
              },
              "podSelector": Object {},
            },
          ],
        },
      ],
      "podSelector": Object {
        "matchLabels": Object {
          "cdk8s.io/metadata.addr": "test-Pod-c815bc91",
        },
      },
      "policyTypes": Array [
        "Egress",
      ],
    },
  },
  Object {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "NetworkPolicy",
    "metadata": Object {
      "name": "allowingressn14a1a052274bbd9057096e3196e010b2-c8e5bc94",
      "namespace": "n1",
    },
    "spec": Object {
      "ingress": Array [
        Object {
          "from": Array [
            Object {
              "namespaceSelector": Object {
                "matchLabels": Object {
                  "kubernetes.io/metadata.name": "default",
                },
              },
              "podSelector": Object {
                "matchLabels": Object {
                  "cdk8s.io/metadata.addr": "test-Pod-c815bc91",
                },
              },
            },
          ],
          "ports": Array [],
        },
      ],
      "podSelector": Object {},
      "policyTypes": Array [
        "Ingress",
      ],
    },
  },
]
`;

exports[`connections | can allow to peer across namespaces 1`] = `
Array [
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "labels": Object {
        "cdk8s.io/metadata.addr": "test-Pod1-c8591188",
      },
      "name": "test-pod1-c8153666",
      "namespace": "n1",
    },
    "spec": Object {
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "image": "pod",
          "imagePullPolicy": "Always",
          "name": "main",
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsNonRoot": false,
          },
        },
      ],
      "dnsPolicy": "ClusterFirst",
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
      },
      "setHostnameAsFQDN": false,
    },
  },
  Object {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "NetworkPolicy",
    "metadata": Object {
      "name": "p-allowegressa6511c352ae027dce3e4915705ed577d-c8cb8786",
      "namespace": "n1",
    },
    "spec": Object {
      "egress": Array [
        Object {
          "ports": Array [],
          "to": Array [
            Object {
              "namespaceSelector": Object {
                "matchLabels": Object {
                  "kubernetes.io/metadata.name": "n2",
                },
              },
              "podSelector": Object {
                "matchLabels": Object {
                  "cdk8s.io/metadata.addr": "test-Pod2-c82dc44e",
                },
              },
            },
          ],
        },
      ],
      "podSelector": Object {
        "matchLabels": Object {
          "cdk8s.io/metadata.addr": "test-Pod1-c8591188",
        },
      },
      "policyTypes": Array [
        "Egress",
      ],
    },
  },
  Object {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "NetworkPolicy",
    "metadata": Object {
      "name": "allowingressn2a6511c352ae027dce3e4915705ed577-c8eca608",
      "namespace": "n2",
    },
    "spec": Object {
      "ingress": Array [
        Object {
          "from": Array [
            Object {
              "namespaceSelector": Object {
                "matchLabels": Object {
                  "kubernetes.io/metadata.name": "n1",
                },
              },
              "podSelector": Object {
                "matchLabels": Object {
                  "cdk8s.io/metadata.addr": "test-Pod1-c8591188",
                },
              },
            },
          ],
          "ports": Array [],
        },
      ],
      "podSelector": Object {
        "matchLabels": Object {
          "cdk8s.io/metadata.addr": "test-Pod2-c82dc44e",
        },
      },
      "policyTypes": Array [
        "Ingress",
      ],
    },
  },
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "labels": Object {
        "cdk8s.io/metadata.addr": "test-Pod2-c82dc44e",
      },
      "name": "test-pod2-c895d79d",
      "namespace": "n2",
    },
    "spec": Object {
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "image": "pod",
          "imagePullPolicy": "Always",
          "name": "main",
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsNonRoot": false,
          },
        },
      ],
      "dnsPolicy": "ClusterFirst",
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
      },
      "setHostnameAsFQDN": false,
    },
  },
]
`;

exports[`connections | can allow to pods selected with namespaces selected by names 1`] = `
Array [
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "labels": Object {
        "cdk8s.io/metadata.addr": "test-Pod-c815bc91",
      },
      "name": "test-pod-c890e1b8",
    },
    "spec": Object {
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "image": "pod",
          "imagePullPolicy": "Always",
          "name": "main",
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsNonRoot": false,
          },
        },
      ],
      "dnsPolicy": "ClusterFirst",
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
      },
      "setHostnameAsFQDN": false,
    },
  },
  Object {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "NetworkPolicy",
    "metadata": Object {
      "name": "p-allowegress1ee4490134b0f304d5fb3317bd4379df-c8597616",
      "namespace": "default",
    },
    "spec": Object {
      "egress": Array [
        Object {
          "ports": Array [],
          "to": Array [
            Object {
              "namespaceSelector": Object {
                "matchLabels": Object {
                  "kubernetes.io/metadata.name": "selected1",
                },
              },
              "podSelector": Object {
                "matchLabels": Object {
                  "type": "selected",
                },
              },
            },
            Object {
              "namespaceSelector": Object {
                "matchLabels": Object {
                  "kubernetes.io/metadata.name": "selected2",
                },
              },
              "podSelector": Object {
                "matchLabels": Object {
                  "type": "selected",
                },
              },
            },
          ],
        },
      ],
      "podSelector": Object {
        "matchLabels": Object {
          "cdk8s.io/metadata.addr": "test-Pod-c815bc91",
        },
      },
      "policyTypes": Array [
        "Egress",
      ],
    },
  },
  Object {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "NetworkPolicy",
    "metadata": Object {
      "name": "allowingressselected11ee4490134b0f304d5fb3317-c8731df6",
      "namespace": "selected1",
    },
    "spec": Object {
      "ingress": Array [
        Object {
          "from": Array [
            Object {
              "namespaceSelector": Object {
                "matchLabels": Object {
                  "kubernetes.io/metadata.name": "default",
                },
              },
              "podSelector": Object {
                "matchLabels": Object {
                  "cdk8s.io/metadata.addr": "test-Pod-c815bc91",
                },
              },
            },
          ],
          "ports": Array [],
        },
      ],
      "podSelector": Object {
        "matchLabels": Object {
          "type": "selected",
        },
      },
      "policyTypes": Array [
        "Ingress",
      ],
    },
  },
  Object {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "NetworkPolicy",
    "metadata": Object {
      "name": "allowingressselected21ee4490134b0f304d5fb3317-c874d9e8",
      "namespace": "selected2",
    },
    "spec": Object {
      "ingress": Array [
        Object {
          "from": Array [
            Object {
              "namespaceSelector": Object {
                "matchLabels": Object {
                  "kubernetes.io/metadata.name": "default",
                },
              },
              "podSelector": Object {
                "matchLabels": Object {
                  "cdk8s.io/metadata.addr": "test-Pod-c815bc91",
                },
              },
            },
          ],
          "ports": Array [],
        },
      ],
      "podSelector": Object {
        "matchLabels": Object {
          "type": "selected",
        },
      },
      "policyTypes": Array [
        "Ingress",
      ],
    },
  },
]
`;

exports[`connections | can allow to pods selected without namespaces 1`] = `
Array [
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "labels": Object {
        "cdk8s.io/metadata.addr": "test-Pod-c815bc91",
      },
      "name": "test-pod-c890e1b8",
    },
    "spec": Object {
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "image": "pod",
          "imagePullPolicy": "Always",
          "name": "main",
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsNonRoot": false,
          },
        },
      ],
      "dnsPolicy": "ClusterFirst",
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
      },
      "setHostnameAsFQDN": false,
    },
  },
  Object {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "NetworkPolicy",
    "metadata": Object {
      "name": "p-allowegressa4ce161a930bfd63a7e9156180aa002e-c89f5265",
      "namespace": "default",
    },
    "spec": Object {
      "egress": Array [
        Object {
          "ports": Array [],
          "to": Array [
            Object {
              "podSelector": Object {
                "matchLabels": Object {
                  "type": "selected",
                },
              },
            },
          ],
        },
      ],
      "podSelector": Object {
        "matchLabels": Object {
          "cdk8s.io/metadata.addr": "test-Pod-c815bc91",
        },
      },
      "policyTypes": Array [
        "Egress",
      ],
    },
  },
  Object {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "NetworkPolicy",
    "metadata": Object {
      "name": "allowingressdefaulta4ce161a930bfd63a7e9156180-c8304c2b",
      "namespace": "default",
    },
    "spec": Object {
      "ingress": Array [
        Object {
          "from": Array [
            Object {
              "namespaceSelector": Object {
                "matchLabels": Object {
                  "kubernetes.io/metadata.name": "default",
                },
              },
              "podSelector": Object {
                "matchLabels": Object {
                  "cdk8s.io/metadata.addr": "test-Pod-c815bc91",
                },
              },
            },
          ],
          "ports": Array [],
        },
      ],
      "podSelector": Object {
        "matchLabels": Object {
          "type": "selected",
        },
      },
      "policyTypes": Array [
        "Ingress",
      ],
    },
  },
]
`;

exports[`defaults 1`] = `
Array [
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "labels": Object {
        "cdk8s.io/metadata.addr": "test-Pod-c815bc91",
      },
      "name": "test-pod-c890e1b8",
    },
    "spec": Object {
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "image": "image",
          "imagePullPolicy": "Always",
          "name": "main",
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsNonRoot": false,
          },
        },
      ],
      "dnsPolicy": "ClusterFirst",
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
      },
      "setHostnameAsFQDN": false,
    },
  },
]
`;

exports[`scheduling can be assigned to a node by name 1`] = `
Array [
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "labels": Object {
        "cdk8s.io/metadata.addr": "test-Redis-c8b1633b",
      },
      "name": "test-redis-c870fe8d",
    },
    "spec": Object {
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "image": "redis",
          "imagePullPolicy": "Always",
          "name": "main",
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsNonRoot": false,
          },
        },
      ],
      "dnsPolicy": "ClusterFirst",
      "nodeName": "node1",
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
      },
      "setHostnameAsFQDN": false,
    },
  },
]
`;

exports[`scheduling can be attracted to a node by selector - custom 1`] = `
Array [
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "labels": Object {
        "cdk8s.io/metadata.addr": "test-Redis-c8b1633b",
      },
      "name": "test-redis-c870fe8d",
    },
    "spec": Object {
      "affinity": Object {
        "nodeAffinity": Object {
          "preferredDuringSchedulingIgnoredDuringExecution": Array [
            Object {
              "preference": Object {
                "matchExpressions": Array [
                  Object {
                    "key": "memory",
                    "operator": "In",
                    "values": Array [
                      "high",
                    ],
                  },
                ],
              },
              "weight": 1,
            },
          ],
        },
      },
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "image": "redis",
          "imagePullPolicy": "Always",
          "name": "main",
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsNonRoot": false,
          },
        },
      ],
      "dnsPolicy": "ClusterFirst",
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
      },
      "setHostnameAsFQDN": false,
    },
  },
]
`;

exports[`scheduling can be attracted to a node by selector - default 1`] = `
Array [
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "labels": Object {
        "cdk8s.io/metadata.addr": "test-Redis-c8b1633b",
      },
      "name": "test-redis-c870fe8d",
    },
    "spec": Object {
      "affinity": Object {
        "nodeAffinity": Object {
          "requiredDuringSchedulingIgnoredDuringExecution": Object {
            "nodeSelectorTerms": Array [
              Object {
                "matchExpressions": Array [
                  Object {
                    "key": "memory",
                    "operator": "In",
                    "values": Array [
                      "high",
                    ],
                  },
                ],
              },
            ],
          },
        },
      },
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "image": "redis",
          "imagePullPolicy": "Always",
          "name": "main",
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsNonRoot": false,
          },
        },
      ],
      "dnsPolicy": "ClusterFirst",
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
      },
      "setHostnameAsFQDN": false,
    },
  },
]
`;

exports[`scheduling can be co-located with a managed pod - custom 1`] = `
Array [
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "labels": Object {
        "cdk8s.io/metadata.addr": "test-Redis-c8b1633b",
      },
      "name": "test-redis-c870fe8d",
    },
    "spec": Object {
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "image": "redis",
          "imagePullPolicy": "Always",
          "name": "main",
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsNonRoot": false,
          },
        },
      ],
      "dnsPolicy": "ClusterFirst",
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
      },
      "setHostnameAsFQDN": false,
    },
  },
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "labels": Object {
        "cdk8s.io/metadata.addr": "test-Web-c8b65d84",
      },
      "name": "test-web-c854d28f",
    },
    "spec": Object {
      "affinity": Object {
        "podAffinity": Object {
          "preferredDuringSchedulingIgnoredDuringExecution": Array [
            Object {
              "podAffinityTerm": Object {
                "labelSelector": Object {
                  "matchLabels": Object {
                    "cdk8s.io/metadata.addr": "test-Redis-c8b1633b",
                  },
                },
                "namespaces": Array [
                  "default",
                ],
                "topologyKey": "topology.kubernetes.io/zone",
              },
              "weight": 1,
            },
          ],
        },
      },
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "image": "web",
          "imagePullPolicy": "Always",
          "name": "main",
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsNonRoot": false,
          },
        },
      ],
      "dnsPolicy": "ClusterFirst",
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
      },
      "setHostnameAsFQDN": false,
    },
  },
]
`;

exports[`scheduling can be co-located with a managed pod - default 1`] = `
Array [
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "labels": Object {
        "cdk8s.io/metadata.addr": "test-Redis-c8b1633b",
      },
      "name": "test-redis-c870fe8d",
    },
    "spec": Object {
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "image": "redis",
          "imagePullPolicy": "Always",
          "name": "main",
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsNonRoot": false,
          },
        },
      ],
      "dnsPolicy": "ClusterFirst",
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
      },
      "setHostnameAsFQDN": false,
    },
  },
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "labels": Object {
        "cdk8s.io/metadata.addr": "test-Web-c8b65d84",
      },
      "name": "test-web-c854d28f",
    },
    "spec": Object {
      "affinity": Object {
        "podAffinity": Object {
          "requiredDuringSchedulingIgnoredDuringExecution": Array [
            Object {
              "labelSelector": Object {
                "matchLabels": Object {
                  "cdk8s.io/metadata.addr": "test-Redis-c8b1633b",
                },
              },
              "namespaces": Array [
                "default",
              ],
              "topologyKey": "kubernetes.io/hostname",
            },
          ],
        },
      },
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "image": "web",
          "imagePullPolicy": "Always",
          "name": "main",
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsNonRoot": false,
          },
        },
      ],
      "dnsPolicy": "ClusterFirst",
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
      },
      "setHostnameAsFQDN": false,
    },
  },
]
`;

exports[`scheduling can be co-located with an unmanaged pod - custom 1`] = `
Array [
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "labels": Object {
        "cdk8s.io/metadata.addr": "test-Web-c8b65d84",
      },
      "name": "test-web-c854d28f",
    },
    "spec": Object {
      "affinity": Object {
        "podAffinity": Object {
          "preferredDuringSchedulingIgnoredDuringExecution": Array [
            Object {
              "podAffinityTerm": Object {
                "labelSelector": Object {
                  "matchLabels": Object {
                    "app": "store",
                  },
                },
                "topologyKey": "topology.kubernetes.io/zone",
              },
              "weight": 1,
            },
          ],
        },
      },
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "image": "web",
          "imagePullPolicy": "Always",
          "name": "main",
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsNonRoot": false,
          },
        },
      ],
      "dnsPolicy": "ClusterFirst",
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
      },
      "setHostnameAsFQDN": false,
    },
  },
]
`;

exports[`scheduling can be co-located with an unmanaged pod - default 1`] = `
Array [
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "labels": Object {
        "cdk8s.io/metadata.addr": "test-Web-c8b65d84",
      },
      "name": "test-web-c854d28f",
    },
    "spec": Object {
      "affinity": Object {
        "podAffinity": Object {
          "requiredDuringSchedulingIgnoredDuringExecution": Array [
            Object {
              "labelSelector": Object {
                "matchLabels": Object {
                  "app": "store",
                },
              },
              "namespaceSelector": Object {},
              "topologyKey": "kubernetes.io/hostname",
            },
          ],
        },
      },
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "image": "web",
          "imagePullPolicy": "Always",
          "name": "main",
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsNonRoot": false,
          },
        },
      ],
      "dnsPolicy": "ClusterFirst",
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
      },
      "setHostnameAsFQDN": false,
    },
  },
]
`;

exports[`scheduling can be separated from a managed pod - custom 1`] = `
Array [
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "labels": Object {
        "cdk8s.io/metadata.addr": "test-Redis-c8b1633b",
      },
      "name": "test-redis-c870fe8d",
    },
    "spec": Object {
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "image": "redis",
          "imagePullPolicy": "Always",
          "name": "main",
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsNonRoot": false,
          },
        },
      ],
      "dnsPolicy": "ClusterFirst",
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
      },
      "setHostnameAsFQDN": false,
    },
  },
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "labels": Object {
        "cdk8s.io/metadata.addr": "test-Web-c8b65d84",
      },
      "name": "test-web-c854d28f",
    },
    "spec": Object {
      "affinity": Object {
        "podAntiAffinity": Object {
          "preferredDuringSchedulingIgnoredDuringExecution": Array [
            Object {
              "podAffinityTerm": Object {
                "labelSelector": Object {
                  "matchLabels": Object {
                    "cdk8s.io/metadata.addr": "test-Redis-c8b1633b",
                  },
                },
                "namespaces": Array [
                  "default",
                ],
                "topologyKey": "topology.kubernetes.io/zone",
              },
              "weight": 1,
            },
          ],
        },
      },
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "image": "web",
          "imagePullPolicy": "Always",
          "name": "main",
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsNonRoot": false,
          },
        },
      ],
      "dnsPolicy": "ClusterFirst",
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
      },
      "setHostnameAsFQDN": false,
    },
  },
]
`;

exports[`scheduling can be separated from a managed pod - default 1`] = `
Array [
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "labels": Object {
        "cdk8s.io/metadata.addr": "test-Redis-c8b1633b",
      },
      "name": "test-redis-c870fe8d",
    },
    "spec": Object {
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "image": "redis",
          "imagePullPolicy": "Always",
          "name": "main",
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsNonRoot": false,
          },
        },
      ],
      "dnsPolicy": "ClusterFirst",
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
      },
      "setHostnameAsFQDN": false,
    },
  },
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "labels": Object {
        "cdk8s.io/metadata.addr": "test-Web-c8b65d84",
      },
      "name": "test-web-c854d28f",
    },
    "spec": Object {
      "affinity": Object {
        "podAntiAffinity": Object {
          "requiredDuringSchedulingIgnoredDuringExecution": Array [
            Object {
              "labelSelector": Object {
                "matchLabels": Object {
                  "cdk8s.io/metadata.addr": "test-Redis-c8b1633b",
                },
              },
              "namespaces": Array [
                "default",
              ],
              "topologyKey": "kubernetes.io/hostname",
            },
          ],
        },
      },
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "image": "web",
          "imagePullPolicy": "Always",
          "name": "main",
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsNonRoot": false,
          },
        },
      ],
      "dnsPolicy": "ClusterFirst",
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
      },
      "setHostnameAsFQDN": false,
    },
  },
]
`;

exports[`scheduling can be separated from an unmanaged pod - custom 1`] = `
Array [
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "labels": Object {
        "cdk8s.io/metadata.addr": "test-Web-c8b65d84",
      },
      "name": "test-web-c854d28f",
    },
    "spec": Object {
      "affinity": Object {
        "podAntiAffinity": Object {
          "preferredDuringSchedulingIgnoredDuringExecution": Array [
            Object {
              "podAffinityTerm": Object {
                "labelSelector": Object {
                  "matchLabels": Object {
                    "app": "store",
                  },
                },
                "topologyKey": "topology.kubernetes.io/zone",
              },
              "weight": 1,
            },
          ],
        },
      },
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "image": "web",
          "imagePullPolicy": "Always",
          "name": "main",
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsNonRoot": false,
          },
        },
      ],
      "dnsPolicy": "ClusterFirst",
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
      },
      "setHostnameAsFQDN": false,
    },
  },
]
`;

exports[`scheduling can be separated from an unmanaged pod - default 1`] = `
Array [
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "labels": Object {
        "cdk8s.io/metadata.addr": "test-Web-c8b65d84",
      },
      "name": "test-web-c854d28f",
    },
    "spec": Object {
      "affinity": Object {
        "podAntiAffinity": Object {
          "requiredDuringSchedulingIgnoredDuringExecution": Array [
            Object {
              "labelSelector": Object {
                "matchLabels": Object {
                  "app": "store",
                },
              },
              "namespaceSelector": Object {
                "matchLabels": Object {
                  "net": "1",
                },
              },
              "namespaces": Array [
                "web",
              ],
              "topologyKey": "kubernetes.io/hostname",
            },
          ],
        },
      },
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "image": "web",
          "imagePullPolicy": "Always",
          "name": "main",
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsNonRoot": false,
          },
        },
      ],
      "dnsPolicy": "ClusterFirst",
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
      },
      "setHostnameAsFQDN": false,
    },
  },
]
`;

exports[`scheduling can tolerate tainted nodes 1`] = `
Array [
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "labels": Object {
        "cdk8s.io/metadata.addr": "test-Redis-c8b1633b",
      },
      "name": "test-redis-c870fe8d",
    },
    "spec": Object {
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "image": "redis",
          "imagePullPolicy": "Always",
          "name": "main",
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsNonRoot": false,
          },
        },
      ],
      "dnsPolicy": "ClusterFirst",
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
      },
      "setHostnameAsFQDN": false,
      "tolerations": Array [
        Object {
          "key": "key1",
          "operator": "Equal",
          "value": "value1",
        },
        Object {
          "effect": "PreferNoSchedule",
          "key": "key2",
          "operator": "Equal",
          "value": "value2",
        },
        Object {
          "key": "key3",
          "operator": "Exists",
        },
        Object {
          "effect": "NoSchedule",
          "key": "key4",
          "operator": "Exists",
        },
        Object {
          "effect": "NoExecute",
          "key": "key5",
          "operator": "Equal",
          "tolerationSeconds": 3600,
          "value": "value5",
        },
        Object {
          "operator": "Exists",
        },
      ],
    },
  },
]
`;
