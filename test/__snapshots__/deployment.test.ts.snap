// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Can be exposed as via ingress 1`] = `
Array [
  Object {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": Object {
      "name": "test-deployment-c898c72d",
    },
    "spec": Object {
      "minReadySeconds": 0,
      "progressDeadlineSeconds": 600,
      "replicas": 2,
      "selector": Object {
        "matchLabels": Object {
          "cdk8s.io/metadata.addr": "test-Deployment-c83f5e59",
        },
      },
      "strategy": Object {
        "rollingUpdate": Object {
          "maxSurge": "25%",
          "maxUnavailable": "25%",
        },
        "type": "RollingUpdate",
      },
      "template": Object {
        "metadata": Object {
          "labels": Object {
            "cdk8s.io/metadata.addr": "test-Deployment-c83f5e59",
          },
        },
        "spec": Object {
          "automountServiceAccountToken": false,
          "containers": Array [
            Object {
              "image": "image",
              "imagePullPolicy": "Always",
              "name": "main",
              "ports": Array [
                Object {
                  "containerPort": 9300,
                },
              ],
              "resources": Object {
                "limits": Object {
                  "cpu": "1500m",
                  "memory": "2048Mi",
                },
                "requests": Object {
                  "cpu": "1000m",
                  "memory": "512Mi",
                },
              },
              "securityContext": Object {
                "allowPrivilegeEscalation": false,
                "privileged": false,
                "readOnlyRootFilesystem": true,
                "runAsNonRoot": true,
              },
              "startupProbe": Object {
                "failureThreshold": 3,
                "tcpSocket": Object {
                  "port": 9300,
                },
              },
            },
          ],
          "dnsPolicy": "ClusterFirst",
          "hostNetwork": false,
          "restartPolicy": "Always",
          "securityContext": Object {
            "fsGroupChangePolicy": "Always",
            "runAsNonRoot": true,
          },
          "setHostnameAsFQDN": false,
          "shareProcessNamespace": false,
          "terminationGracePeriodSeconds": 30,
        },
      },
    },
  },
  Object {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": Object {
      "name": "test-deployment-service-c870ff98",
    },
    "spec": Object {
      "externalIPs": Array [],
      "ports": Array [
        Object {
          "port": 9300,
          "targetPort": 9300,
        },
      ],
      "selector": Object {
        "cdk8s.io/metadata.addr": "test-Deployment-c83f5e59",
      },
      "type": "ClusterIP",
    },
  },
  Object {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "Ingress",
    "metadata": Object {
      "name": "test-deployment-service-ingress-c8520013",
    },
    "spec": Object {
      "rules": Array [
        Object {
          "http": Object {
            "paths": Array [
              Object {
                "backend": Object {
                  "service": Object {
                    "name": "test-deployment-service-c870ff98",
                    "port": Object {
                      "number": 9300,
                    },
                  },
                },
                "path": "/hello",
                "pathType": "Prefix",
              },
            ],
          },
        },
      ],
    },
  },
]
`;

exports[`Can be isolated 1`] = `
Array [
  Object {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": Object {
      "name": "test-deployment-c898c72d",
    },
    "spec": Object {
      "minReadySeconds": 0,
      "progressDeadlineSeconds": 600,
      "replicas": 5,
      "selector": Object {
        "matchLabels": Object {
          "cdk8s.io/metadata.addr": "test-Deployment-c83f5e59",
        },
      },
      "strategy": Object {
        "rollingUpdate": Object {
          "maxSurge": "25%",
          "maxUnavailable": "25%",
        },
        "type": "RollingUpdate",
      },
      "template": Object {
        "metadata": Object {
          "labels": Object {
            "cdk8s.io/metadata.addr": "test-Deployment-c83f5e59",
          },
        },
        "spec": Object {
          "automountServiceAccountToken": false,
          "containers": Array [
            Object {
              "image": "foobar",
              "imagePullPolicy": "Always",
              "name": "main",
              "resources": Object {
                "limits": Object {
                  "cpu": "1500m",
                  "memory": "2048Mi",
                },
                "requests": Object {
                  "cpu": "1000m",
                  "memory": "512Mi",
                },
              },
              "securityContext": Object {
                "allowPrivilegeEscalation": false,
                "privileged": false,
                "readOnlyRootFilesystem": true,
                "runAsNonRoot": true,
              },
            },
          ],
          "dnsPolicy": "ClusterFirst",
          "hostNetwork": false,
          "restartPolicy": "Always",
          "securityContext": Object {
            "fsGroupChangePolicy": "Always",
            "runAsNonRoot": true,
          },
          "setHostnameAsFQDN": false,
          "shareProcessNamespace": false,
          "terminationGracePeriodSeconds": 30,
        },
      },
    },
  },
  Object {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "NetworkPolicy",
    "metadata": Object {
      "name": "test-deployment-defaultdenyall-c8a461c9",
    },
    "spec": Object {
      "podSelector": Object {
        "matchLabels": Object {
          "cdk8s.io/metadata.addr": "test-Deployment-c83f5e59",
        },
      },
      "policyTypes": Array [
        "Egress",
        "Ingress",
      ],
    },
  },
]
`;

exports[`expose captures all container ports 1`] = `
Array [
  Object {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": Object {
      "name": "test-deployment-c898c72d",
    },
    "spec": Object {
      "minReadySeconds": 0,
      "progressDeadlineSeconds": 600,
      "replicas": 2,
      "selector": Object {
        "matchLabels": Object {
          "cdk8s.io/metadata.addr": "test-Deployment-c83f5e59",
        },
      },
      "strategy": Object {
        "rollingUpdate": Object {
          "maxSurge": "25%",
          "maxUnavailable": "25%",
        },
        "type": "RollingUpdate",
      },
      "template": Object {
        "metadata": Object {
          "labels": Object {
            "cdk8s.io/metadata.addr": "test-Deployment-c83f5e59",
          },
        },
        "spec": Object {
          "automountServiceAccountToken": false,
          "containers": Array [
            Object {
              "image": "image",
              "imagePullPolicy": "Always",
              "name": "main",
              "ports": Array [
                Object {
                  "containerPort": 8080,
                  "name": "port1",
                },
                Object {
                  "containerPort": 9090,
                  "name": "port2",
                },
              ],
              "resources": Object {
                "limits": Object {
                  "cpu": "1500m",
                  "memory": "2048Mi",
                },
                "requests": Object {
                  "cpu": "1000m",
                  "memory": "512Mi",
                },
              },
              "securityContext": Object {
                "allowPrivilegeEscalation": false,
                "privileged": false,
                "readOnlyRootFilesystem": true,
                "runAsNonRoot": true,
              },
            },
          ],
          "dnsPolicy": "ClusterFirst",
          "hostNetwork": false,
          "restartPolicy": "Always",
          "securityContext": Object {
            "fsGroupChangePolicy": "Always",
            "runAsNonRoot": true,
          },
          "setHostnameAsFQDN": false,
          "shareProcessNamespace": false,
          "terminationGracePeriodSeconds": 30,
        },
      },
    },
  },
  Object {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": Object {
      "name": "test-deployment-service-c870ff98",
    },
    "spec": Object {
      "externalIPs": Array [],
      "ports": Array [
        Object {
          "name": "port1",
          "port": 8080,
          "targetPort": 8080,
        },
        Object {
          "name": "port2",
          "port": 9090,
          "targetPort": 9090,
        },
      ],
      "selector": Object {
        "cdk8s.io/metadata.addr": "test-Deployment-c83f5e59",
      },
      "type": "ClusterIP",
    },
  },
]
`;

exports[`exposing via a service preserves deployment namespace 1`] = `
Array [
  Object {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": Object {
      "name": "test-deployment-c898c72d",
      "namespace": "custom",
    },
    "spec": Object {
      "minReadySeconds": 0,
      "progressDeadlineSeconds": 600,
      "replicas": 2,
      "selector": Object {
        "matchLabels": Object {
          "cdk8s.io/metadata.addr": "test-Deployment-c83f5e59",
        },
      },
      "strategy": Object {
        "rollingUpdate": Object {
          "maxSurge": "25%",
          "maxUnavailable": "25%",
        },
        "type": "RollingUpdate",
      },
      "template": Object {
        "metadata": Object {
          "labels": Object {
            "cdk8s.io/metadata.addr": "test-Deployment-c83f5e59",
          },
        },
        "spec": Object {
          "automountServiceAccountToken": false,
          "containers": Array [
            Object {
              "image": "image",
              "imagePullPolicy": "Always",
              "name": "main",
              "ports": Array [
                Object {
                  "containerPort": 9300,
                },
              ],
              "resources": Object {
                "limits": Object {
                  "cpu": "1500m",
                  "memory": "2048Mi",
                },
                "requests": Object {
                  "cpu": "1000m",
                  "memory": "512Mi",
                },
              },
              "securityContext": Object {
                "allowPrivilegeEscalation": false,
                "privileged": false,
                "readOnlyRootFilesystem": true,
                "runAsNonRoot": true,
              },
              "startupProbe": Object {
                "failureThreshold": 3,
                "tcpSocket": Object {
                  "port": 9300,
                },
              },
            },
          ],
          "dnsPolicy": "ClusterFirst",
          "hostNetwork": false,
          "restartPolicy": "Always",
          "securityContext": Object {
            "fsGroupChangePolicy": "Always",
            "runAsNonRoot": true,
          },
          "setHostnameAsFQDN": false,
          "shareProcessNamespace": false,
          "terminationGracePeriodSeconds": 30,
        },
      },
    },
  },
  Object {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": Object {
      "name": "test-deployment-service-c870ff98",
      "namespace": "custom",
    },
    "spec": Object {
      "externalIPs": Array [],
      "ports": Array [
        Object {
          "port": 9300,
          "targetPort": 9300,
        },
      ],
      "selector": Object {
        "cdk8s.io/metadata.addr": "test-Deployment-c83f5e59",
      },
      "type": "ClusterIP",
    },
  },
]
`;

exports[`scheduling can be assigned to a node by name 1`] = `
Array [
  Object {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": Object {
      "name": "test-redis-c870fe8d",
    },
    "spec": Object {
      "minReadySeconds": 0,
      "progressDeadlineSeconds": 600,
      "replicas": 2,
      "selector": Object {
        "matchLabels": Object {
          "cdk8s.io/metadata.addr": "test-Redis-c8b1633b",
        },
      },
      "strategy": Object {
        "rollingUpdate": Object {
          "maxSurge": "25%",
          "maxUnavailable": "25%",
        },
        "type": "RollingUpdate",
      },
      "template": Object {
        "metadata": Object {
          "labels": Object {
            "cdk8s.io/metadata.addr": "test-Redis-c8b1633b",
          },
        },
        "spec": Object {
          "automountServiceAccountToken": false,
          "containers": Array [
            Object {
              "image": "redis",
              "imagePullPolicy": "Always",
              "name": "main",
              "resources": Object {
                "limits": Object {
                  "cpu": "1500m",
                  "memory": "2048Mi",
                },
                "requests": Object {
                  "cpu": "1000m",
                  "memory": "512Mi",
                },
              },
              "securityContext": Object {
                "allowPrivilegeEscalation": false,
                "privileged": false,
                "readOnlyRootFilesystem": true,
                "runAsNonRoot": true,
              },
            },
          ],
          "dnsPolicy": "ClusterFirst",
          "hostNetwork": false,
          "nodeName": "node1",
          "restartPolicy": "Always",
          "securityContext": Object {
            "fsGroupChangePolicy": "Always",
            "runAsNonRoot": true,
          },
          "setHostnameAsFQDN": false,
          "shareProcessNamespace": false,
          "terminationGracePeriodSeconds": 30,
        },
      },
    },
  },
]
`;

exports[`scheduling can be attracted to a node by selector - custom 1`] = `
Array [
  Object {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": Object {
      "name": "test-redis-c870fe8d",
    },
    "spec": Object {
      "minReadySeconds": 0,
      "progressDeadlineSeconds": 600,
      "replicas": 2,
      "selector": Object {
        "matchLabels": Object {
          "cdk8s.io/metadata.addr": "test-Redis-c8b1633b",
        },
      },
      "strategy": Object {
        "rollingUpdate": Object {
          "maxSurge": "25%",
          "maxUnavailable": "25%",
        },
        "type": "RollingUpdate",
      },
      "template": Object {
        "metadata": Object {
          "labels": Object {
            "cdk8s.io/metadata.addr": "test-Redis-c8b1633b",
          },
        },
        "spec": Object {
          "affinity": Object {
            "nodeAffinity": Object {
              "preferredDuringSchedulingIgnoredDuringExecution": Array [
                Object {
                  "preference": Object {
                    "matchExpressions": Array [
                      Object {
                        "key": "memory",
                        "operator": "In",
                        "values": Array [
                          "high",
                        ],
                      },
                    ],
                  },
                  "weight": 1,
                },
              ],
            },
          },
          "automountServiceAccountToken": false,
          "containers": Array [
            Object {
              "image": "redis",
              "imagePullPolicy": "Always",
              "name": "main",
              "resources": Object {
                "limits": Object {
                  "cpu": "1500m",
                  "memory": "2048Mi",
                },
                "requests": Object {
                  "cpu": "1000m",
                  "memory": "512Mi",
                },
              },
              "securityContext": Object {
                "allowPrivilegeEscalation": false,
                "privileged": false,
                "readOnlyRootFilesystem": true,
                "runAsNonRoot": true,
              },
            },
          ],
          "dnsPolicy": "ClusterFirst",
          "hostNetwork": false,
          "restartPolicy": "Always",
          "securityContext": Object {
            "fsGroupChangePolicy": "Always",
            "runAsNonRoot": true,
          },
          "setHostnameAsFQDN": false,
          "shareProcessNamespace": false,
          "terminationGracePeriodSeconds": 30,
        },
      },
    },
  },
]
`;

exports[`scheduling can be attracted to a node by selector - default 1`] = `
Array [
  Object {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": Object {
      "name": "test-redis-c870fe8d",
    },
    "spec": Object {
      "minReadySeconds": 0,
      "progressDeadlineSeconds": 600,
      "replicas": 2,
      "selector": Object {
        "matchLabels": Object {
          "cdk8s.io/metadata.addr": "test-Redis-c8b1633b",
        },
      },
      "strategy": Object {
        "rollingUpdate": Object {
          "maxSurge": "25%",
          "maxUnavailable": "25%",
        },
        "type": "RollingUpdate",
      },
      "template": Object {
        "metadata": Object {
          "labels": Object {
            "cdk8s.io/metadata.addr": "test-Redis-c8b1633b",
          },
        },
        "spec": Object {
          "affinity": Object {
            "nodeAffinity": Object {
              "requiredDuringSchedulingIgnoredDuringExecution": Object {
                "nodeSelectorTerms": Array [
                  Object {
                    "matchExpressions": Array [
                      Object {
                        "key": "memory",
                        "operator": "In",
                        "values": Array [
                          "high",
                        ],
                      },
                    ],
                  },
                ],
              },
            },
          },
          "automountServiceAccountToken": false,
          "containers": Array [
            Object {
              "image": "redis",
              "imagePullPolicy": "Always",
              "name": "main",
              "resources": Object {
                "limits": Object {
                  "cpu": "1500m",
                  "memory": "2048Mi",
                },
                "requests": Object {
                  "cpu": "1000m",
                  "memory": "512Mi",
                },
              },
              "securityContext": Object {
                "allowPrivilegeEscalation": false,
                "privileged": false,
                "readOnlyRootFilesystem": true,
                "runAsNonRoot": true,
              },
            },
          ],
          "dnsPolicy": "ClusterFirst",
          "hostNetwork": false,
          "restartPolicy": "Always",
          "securityContext": Object {
            "fsGroupChangePolicy": "Always",
            "runAsNonRoot": true,
          },
          "setHostnameAsFQDN": false,
          "shareProcessNamespace": false,
          "terminationGracePeriodSeconds": 30,
        },
      },
    },
  },
]
`;

exports[`scheduling can be co-located with a managed deployment - custom 1`] = `
Array [
  Object {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": Object {
      "name": "test-redis-c870fe8d",
    },
    "spec": Object {
      "minReadySeconds": 0,
      "progressDeadlineSeconds": 600,
      "replicas": 2,
      "selector": Object {
        "matchLabels": Object {
          "cdk8s.io/metadata.addr": "test-Redis-c8b1633b",
        },
      },
      "strategy": Object {
        "rollingUpdate": Object {
          "maxSurge": "25%",
          "maxUnavailable": "25%",
        },
        "type": "RollingUpdate",
      },
      "template": Object {
        "metadata": Object {
          "labels": Object {
            "cdk8s.io/metadata.addr": "test-Redis-c8b1633b",
          },
        },
        "spec": Object {
          "automountServiceAccountToken": false,
          "containers": Array [
            Object {
              "image": "redis",
              "imagePullPolicy": "Always",
              "name": "main",
              "resources": Object {
                "limits": Object {
                  "cpu": "1500m",
                  "memory": "2048Mi",
                },
                "requests": Object {
                  "cpu": "1000m",
                  "memory": "512Mi",
                },
              },
              "securityContext": Object {
                "allowPrivilegeEscalation": false,
                "privileged": false,
                "readOnlyRootFilesystem": true,
                "runAsNonRoot": true,
              },
            },
          ],
          "dnsPolicy": "ClusterFirst",
          "hostNetwork": false,
          "restartPolicy": "Always",
          "securityContext": Object {
            "fsGroupChangePolicy": "Always",
            "runAsNonRoot": true,
          },
          "setHostnameAsFQDN": false,
          "shareProcessNamespace": false,
          "terminationGracePeriodSeconds": 30,
        },
      },
    },
  },
  Object {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": Object {
      "name": "test-web-c854d28f",
    },
    "spec": Object {
      "minReadySeconds": 0,
      "progressDeadlineSeconds": 600,
      "replicas": 2,
      "selector": Object {
        "matchLabels": Object {
          "cdk8s.io/metadata.addr": "test-Web-c8b65d84",
        },
      },
      "strategy": Object {
        "rollingUpdate": Object {
          "maxSurge": "25%",
          "maxUnavailable": "25%",
        },
        "type": "RollingUpdate",
      },
      "template": Object {
        "metadata": Object {
          "labels": Object {
            "cdk8s.io/metadata.addr": "test-Web-c8b65d84",
          },
        },
        "spec": Object {
          "affinity": Object {
            "podAffinity": Object {
              "preferredDuringSchedulingIgnoredDuringExecution": Array [
                Object {
                  "podAffinityTerm": Object {
                    "labelSelector": Object {
                      "matchLabels": Object {
                        "cdk8s.io/metadata.addr": "test-Redis-c8b1633b",
                      },
                    },
                    "topologyKey": "topology.kubernetes.io/zone",
                  },
                  "weight": 1,
                },
              ],
            },
          },
          "automountServiceAccountToken": false,
          "containers": Array [
            Object {
              "image": "web",
              "imagePullPolicy": "Always",
              "name": "main",
              "resources": Object {
                "limits": Object {
                  "cpu": "1500m",
                  "memory": "2048Mi",
                },
                "requests": Object {
                  "cpu": "1000m",
                  "memory": "512Mi",
                },
              },
              "securityContext": Object {
                "allowPrivilegeEscalation": false,
                "privileged": false,
                "readOnlyRootFilesystem": true,
                "runAsNonRoot": true,
              },
            },
          ],
          "dnsPolicy": "ClusterFirst",
          "hostNetwork": false,
          "restartPolicy": "Always",
          "securityContext": Object {
            "fsGroupChangePolicy": "Always",
            "runAsNonRoot": true,
          },
          "setHostnameAsFQDN": false,
          "shareProcessNamespace": false,
          "terminationGracePeriodSeconds": 30,
        },
      },
    },
  },
]
`;

exports[`scheduling can be co-located with a managed deployment - default 1`] = `
Array [
  Object {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": Object {
      "name": "test-redis-c870fe8d",
    },
    "spec": Object {
      "minReadySeconds": 0,
      "progressDeadlineSeconds": 600,
      "replicas": 2,
      "selector": Object {
        "matchLabels": Object {
          "cdk8s.io/metadata.addr": "test-Redis-c8b1633b",
        },
      },
      "strategy": Object {
        "rollingUpdate": Object {
          "maxSurge": "25%",
          "maxUnavailable": "25%",
        },
        "type": "RollingUpdate",
      },
      "template": Object {
        "metadata": Object {
          "labels": Object {
            "cdk8s.io/metadata.addr": "test-Redis-c8b1633b",
          },
        },
        "spec": Object {
          "automountServiceAccountToken": false,
          "containers": Array [
            Object {
              "image": "redis",
              "imagePullPolicy": "Always",
              "name": "main",
              "resources": Object {
                "limits": Object {
                  "cpu": "1500m",
                  "memory": "2048Mi",
                },
                "requests": Object {
                  "cpu": "1000m",
                  "memory": "512Mi",
                },
              },
              "securityContext": Object {
                "allowPrivilegeEscalation": false,
                "privileged": false,
                "readOnlyRootFilesystem": true,
                "runAsNonRoot": true,
              },
            },
          ],
          "dnsPolicy": "ClusterFirst",
          "hostNetwork": false,
          "restartPolicy": "Always",
          "securityContext": Object {
            "fsGroupChangePolicy": "Always",
            "runAsNonRoot": true,
          },
          "setHostnameAsFQDN": false,
          "shareProcessNamespace": false,
          "terminationGracePeriodSeconds": 30,
        },
      },
    },
  },
  Object {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": Object {
      "name": "test-web-c854d28f",
    },
    "spec": Object {
      "minReadySeconds": 0,
      "progressDeadlineSeconds": 600,
      "replicas": 2,
      "selector": Object {
        "matchLabels": Object {
          "cdk8s.io/metadata.addr": "test-Web-c8b65d84",
        },
      },
      "strategy": Object {
        "rollingUpdate": Object {
          "maxSurge": "25%",
          "maxUnavailable": "25%",
        },
        "type": "RollingUpdate",
      },
      "template": Object {
        "metadata": Object {
          "labels": Object {
            "cdk8s.io/metadata.addr": "test-Web-c8b65d84",
          },
        },
        "spec": Object {
          "affinity": Object {
            "podAffinity": Object {
              "requiredDuringSchedulingIgnoredDuringExecution": Array [
                Object {
                  "labelSelector": Object {
                    "matchLabels": Object {
                      "cdk8s.io/metadata.addr": "test-Redis-c8b1633b",
                    },
                  },
                  "topologyKey": "kubernetes.io/hostname",
                },
              ],
            },
          },
          "automountServiceAccountToken": false,
          "containers": Array [
            Object {
              "image": "web",
              "imagePullPolicy": "Always",
              "name": "main",
              "resources": Object {
                "limits": Object {
                  "cpu": "1500m",
                  "memory": "2048Mi",
                },
                "requests": Object {
                  "cpu": "1000m",
                  "memory": "512Mi",
                },
              },
              "securityContext": Object {
                "allowPrivilegeEscalation": false,
                "privileged": false,
                "readOnlyRootFilesystem": true,
                "runAsNonRoot": true,
              },
            },
          ],
          "dnsPolicy": "ClusterFirst",
          "hostNetwork": false,
          "restartPolicy": "Always",
          "securityContext": Object {
            "fsGroupChangePolicy": "Always",
            "runAsNonRoot": true,
          },
          "setHostnameAsFQDN": false,
          "shareProcessNamespace": false,
          "terminationGracePeriodSeconds": 30,
        },
      },
    },
  },
]
`;

exports[`scheduling can be co-located with an unmanaged deployment - custom 1`] = `
Array [
  Object {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": Object {
      "name": "test-web-c854d28f",
    },
    "spec": Object {
      "minReadySeconds": 0,
      "progressDeadlineSeconds": 600,
      "replicas": 2,
      "selector": Object {
        "matchLabels": Object {
          "cdk8s.io/metadata.addr": "test-Web-c8b65d84",
        },
      },
      "strategy": Object {
        "rollingUpdate": Object {
          "maxSurge": "25%",
          "maxUnavailable": "25%",
        },
        "type": "RollingUpdate",
      },
      "template": Object {
        "metadata": Object {
          "labels": Object {
            "cdk8s.io/metadata.addr": "test-Web-c8b65d84",
          },
        },
        "spec": Object {
          "affinity": Object {
            "podAffinity": Object {
              "preferredDuringSchedulingIgnoredDuringExecution": Array [
                Object {
                  "podAffinityTerm": Object {
                    "labelSelector": Object {
                      "matchLabels": Object {
                        "app": "store",
                      },
                    },
                    "namespaceSelector": Object {
                      "matchLabels": Object {
                        "net": "1",
                      },
                    },
                    "topologyKey": "topology.kubernetes.io/zone",
                  },
                  "weight": 1,
                },
              ],
            },
          },
          "automountServiceAccountToken": false,
          "containers": Array [
            Object {
              "image": "web",
              "imagePullPolicy": "Always",
              "name": "main",
              "resources": Object {
                "limits": Object {
                  "cpu": "1500m",
                  "memory": "2048Mi",
                },
                "requests": Object {
                  "cpu": "1000m",
                  "memory": "512Mi",
                },
              },
              "securityContext": Object {
                "allowPrivilegeEscalation": false,
                "privileged": false,
                "readOnlyRootFilesystem": true,
                "runAsNonRoot": true,
              },
            },
          ],
          "dnsPolicy": "ClusterFirst",
          "hostNetwork": false,
          "restartPolicy": "Always",
          "securityContext": Object {
            "fsGroupChangePolicy": "Always",
            "runAsNonRoot": true,
          },
          "setHostnameAsFQDN": false,
          "shareProcessNamespace": false,
          "terminationGracePeriodSeconds": 30,
        },
      },
    },
  },
]
`;

exports[`scheduling can be co-located with an unmanaged deployment - default 1`] = `
Array [
  Object {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": Object {
      "name": "test-web-c854d28f",
    },
    "spec": Object {
      "minReadySeconds": 0,
      "progressDeadlineSeconds": 600,
      "replicas": 2,
      "selector": Object {
        "matchLabels": Object {
          "cdk8s.io/metadata.addr": "test-Web-c8b65d84",
        },
      },
      "strategy": Object {
        "rollingUpdate": Object {
          "maxSurge": "25%",
          "maxUnavailable": "25%",
        },
        "type": "RollingUpdate",
      },
      "template": Object {
        "metadata": Object {
          "labels": Object {
            "cdk8s.io/metadata.addr": "test-Web-c8b65d84",
          },
        },
        "spec": Object {
          "affinity": Object {
            "podAffinity": Object {
              "requiredDuringSchedulingIgnoredDuringExecution": Array [
                Object {
                  "labelSelector": Object {
                    "matchLabels": Object {
                      "app": "store",
                    },
                  },
                  "namespaceSelector": Object {
                    "matchLabels": Object {
                      "net": "1",
                    },
                  },
                  "topologyKey": "kubernetes.io/hostname",
                },
              ],
            },
          },
          "automountServiceAccountToken": false,
          "containers": Array [
            Object {
              "image": "web",
              "imagePullPolicy": "Always",
              "name": "main",
              "resources": Object {
                "limits": Object {
                  "cpu": "1500m",
                  "memory": "2048Mi",
                },
                "requests": Object {
                  "cpu": "1000m",
                  "memory": "512Mi",
                },
              },
              "securityContext": Object {
                "allowPrivilegeEscalation": false,
                "privileged": false,
                "readOnlyRootFilesystem": true,
                "runAsNonRoot": true,
              },
            },
          ],
          "dnsPolicy": "ClusterFirst",
          "hostNetwork": false,
          "restartPolicy": "Always",
          "securityContext": Object {
            "fsGroupChangePolicy": "Always",
            "runAsNonRoot": true,
          },
          "setHostnameAsFQDN": false,
          "shareProcessNamespace": false,
          "terminationGracePeriodSeconds": 30,
        },
      },
    },
  },
]
`;

exports[`scheduling can be separated from a managed deployment - custom 1`] = `
Array [
  Object {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": Object {
      "name": "test-redis-c870fe8d",
    },
    "spec": Object {
      "minReadySeconds": 0,
      "progressDeadlineSeconds": 600,
      "replicas": 2,
      "selector": Object {
        "matchLabels": Object {
          "cdk8s.io/metadata.addr": "test-Redis-c8b1633b",
        },
      },
      "strategy": Object {
        "rollingUpdate": Object {
          "maxSurge": "25%",
          "maxUnavailable": "25%",
        },
        "type": "RollingUpdate",
      },
      "template": Object {
        "metadata": Object {
          "labels": Object {
            "cdk8s.io/metadata.addr": "test-Redis-c8b1633b",
          },
        },
        "spec": Object {
          "automountServiceAccountToken": false,
          "containers": Array [
            Object {
              "image": "redis",
              "imagePullPolicy": "Always",
              "name": "main",
              "resources": Object {
                "limits": Object {
                  "cpu": "1500m",
                  "memory": "2048Mi",
                },
                "requests": Object {
                  "cpu": "1000m",
                  "memory": "512Mi",
                },
              },
              "securityContext": Object {
                "allowPrivilegeEscalation": false,
                "privileged": false,
                "readOnlyRootFilesystem": true,
                "runAsNonRoot": true,
              },
            },
          ],
          "dnsPolicy": "ClusterFirst",
          "hostNetwork": false,
          "restartPolicy": "Always",
          "securityContext": Object {
            "fsGroupChangePolicy": "Always",
            "runAsNonRoot": true,
          },
          "setHostnameAsFQDN": false,
          "shareProcessNamespace": false,
          "terminationGracePeriodSeconds": 30,
        },
      },
    },
  },
  Object {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": Object {
      "name": "test-web-c854d28f",
    },
    "spec": Object {
      "minReadySeconds": 0,
      "progressDeadlineSeconds": 600,
      "replicas": 2,
      "selector": Object {
        "matchLabels": Object {
          "cdk8s.io/metadata.addr": "test-Web-c8b65d84",
        },
      },
      "strategy": Object {
        "rollingUpdate": Object {
          "maxSurge": "25%",
          "maxUnavailable": "25%",
        },
        "type": "RollingUpdate",
      },
      "template": Object {
        "metadata": Object {
          "labels": Object {
            "cdk8s.io/metadata.addr": "test-Web-c8b65d84",
          },
        },
        "spec": Object {
          "affinity": Object {
            "podAntiAffinity": Object {
              "preferredDuringSchedulingIgnoredDuringExecution": Array [
                Object {
                  "podAffinityTerm": Object {
                    "labelSelector": Object {
                      "matchLabels": Object {
                        "cdk8s.io/metadata.addr": "test-Redis-c8b1633b",
                      },
                    },
                    "topologyKey": "topology.kubernetes.io/zone",
                  },
                  "weight": 1,
                },
              ],
            },
          },
          "automountServiceAccountToken": false,
          "containers": Array [
            Object {
              "image": "web",
              "imagePullPolicy": "Always",
              "name": "main",
              "resources": Object {
                "limits": Object {
                  "cpu": "1500m",
                  "memory": "2048Mi",
                },
                "requests": Object {
                  "cpu": "1000m",
                  "memory": "512Mi",
                },
              },
              "securityContext": Object {
                "allowPrivilegeEscalation": false,
                "privileged": false,
                "readOnlyRootFilesystem": true,
                "runAsNonRoot": true,
              },
            },
          ],
          "dnsPolicy": "ClusterFirst",
          "hostNetwork": false,
          "restartPolicy": "Always",
          "securityContext": Object {
            "fsGroupChangePolicy": "Always",
            "runAsNonRoot": true,
          },
          "setHostnameAsFQDN": false,
          "shareProcessNamespace": false,
          "terminationGracePeriodSeconds": 30,
        },
      },
    },
  },
]
`;

exports[`scheduling can be separated from a managed deployment - default 1`] = `
Array [
  Object {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": Object {
      "name": "test-redis-c870fe8d",
    },
    "spec": Object {
      "minReadySeconds": 0,
      "progressDeadlineSeconds": 600,
      "replicas": 2,
      "selector": Object {
        "matchLabels": Object {
          "cdk8s.io/metadata.addr": "test-Redis-c8b1633b",
        },
      },
      "strategy": Object {
        "rollingUpdate": Object {
          "maxSurge": "25%",
          "maxUnavailable": "25%",
        },
        "type": "RollingUpdate",
      },
      "template": Object {
        "metadata": Object {
          "labels": Object {
            "cdk8s.io/metadata.addr": "test-Redis-c8b1633b",
          },
        },
        "spec": Object {
          "automountServiceAccountToken": false,
          "containers": Array [
            Object {
              "image": "redis",
              "imagePullPolicy": "Always",
              "name": "main",
              "resources": Object {
                "limits": Object {
                  "cpu": "1500m",
                  "memory": "2048Mi",
                },
                "requests": Object {
                  "cpu": "1000m",
                  "memory": "512Mi",
                },
              },
              "securityContext": Object {
                "allowPrivilegeEscalation": false,
                "privileged": false,
                "readOnlyRootFilesystem": true,
                "runAsNonRoot": true,
              },
            },
          ],
          "dnsPolicy": "ClusterFirst",
          "hostNetwork": false,
          "restartPolicy": "Always",
          "securityContext": Object {
            "fsGroupChangePolicy": "Always",
            "runAsNonRoot": true,
          },
          "setHostnameAsFQDN": false,
          "shareProcessNamespace": false,
          "terminationGracePeriodSeconds": 30,
        },
      },
    },
  },
  Object {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": Object {
      "name": "test-web-c854d28f",
    },
    "spec": Object {
      "minReadySeconds": 0,
      "progressDeadlineSeconds": 600,
      "replicas": 2,
      "selector": Object {
        "matchLabels": Object {
          "cdk8s.io/metadata.addr": "test-Web-c8b65d84",
        },
      },
      "strategy": Object {
        "rollingUpdate": Object {
          "maxSurge": "25%",
          "maxUnavailable": "25%",
        },
        "type": "RollingUpdate",
      },
      "template": Object {
        "metadata": Object {
          "labels": Object {
            "cdk8s.io/metadata.addr": "test-Web-c8b65d84",
          },
        },
        "spec": Object {
          "affinity": Object {
            "podAntiAffinity": Object {
              "requiredDuringSchedulingIgnoredDuringExecution": Array [
                Object {
                  "labelSelector": Object {
                    "matchLabels": Object {
                      "cdk8s.io/metadata.addr": "test-Redis-c8b1633b",
                    },
                  },
                  "topologyKey": "kubernetes.io/hostname",
                },
              ],
            },
          },
          "automountServiceAccountToken": false,
          "containers": Array [
            Object {
              "image": "web",
              "imagePullPolicy": "Always",
              "name": "main",
              "resources": Object {
                "limits": Object {
                  "cpu": "1500m",
                  "memory": "2048Mi",
                },
                "requests": Object {
                  "cpu": "1000m",
                  "memory": "512Mi",
                },
              },
              "securityContext": Object {
                "allowPrivilegeEscalation": false,
                "privileged": false,
                "readOnlyRootFilesystem": true,
                "runAsNonRoot": true,
              },
            },
          ],
          "dnsPolicy": "ClusterFirst",
          "hostNetwork": false,
          "restartPolicy": "Always",
          "securityContext": Object {
            "fsGroupChangePolicy": "Always",
            "runAsNonRoot": true,
          },
          "setHostnameAsFQDN": false,
          "shareProcessNamespace": false,
          "terminationGracePeriodSeconds": 30,
        },
      },
    },
  },
]
`;

exports[`scheduling can be separated from an unmanaged deployment - custom 1`] = `
Array [
  Object {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": Object {
      "name": "test-web-c854d28f",
    },
    "spec": Object {
      "minReadySeconds": 0,
      "progressDeadlineSeconds": 600,
      "replicas": 2,
      "selector": Object {
        "matchLabels": Object {
          "cdk8s.io/metadata.addr": "test-Web-c8b65d84",
        },
      },
      "strategy": Object {
        "rollingUpdate": Object {
          "maxSurge": "25%",
          "maxUnavailable": "25%",
        },
        "type": "RollingUpdate",
      },
      "template": Object {
        "metadata": Object {
          "labels": Object {
            "cdk8s.io/metadata.addr": "test-Web-c8b65d84",
          },
        },
        "spec": Object {
          "affinity": Object {
            "podAntiAffinity": Object {
              "preferredDuringSchedulingIgnoredDuringExecution": Array [
                Object {
                  "podAffinityTerm": Object {
                    "labelSelector": Object {
                      "matchLabels": Object {
                        "app": "store",
                      },
                    },
                    "namespaceSelector": Object {
                      "matchLabels": Object {
                        "net": "1",
                      },
                    },
                    "topologyKey": "topology.kubernetes.io/zone",
                  },
                  "weight": 1,
                },
              ],
            },
          },
          "automountServiceAccountToken": false,
          "containers": Array [
            Object {
              "image": "web",
              "imagePullPolicy": "Always",
              "name": "main",
              "resources": Object {
                "limits": Object {
                  "cpu": "1500m",
                  "memory": "2048Mi",
                },
                "requests": Object {
                  "cpu": "1000m",
                  "memory": "512Mi",
                },
              },
              "securityContext": Object {
                "allowPrivilegeEscalation": false,
                "privileged": false,
                "readOnlyRootFilesystem": true,
                "runAsNonRoot": true,
              },
            },
          ],
          "dnsPolicy": "ClusterFirst",
          "hostNetwork": false,
          "restartPolicy": "Always",
          "securityContext": Object {
            "fsGroupChangePolicy": "Always",
            "runAsNonRoot": true,
          },
          "setHostnameAsFQDN": false,
          "shareProcessNamespace": false,
          "terminationGracePeriodSeconds": 30,
        },
      },
    },
  },
]
`;

exports[`scheduling can be separated from an unmanaged deployment - default 1`] = `
Array [
  Object {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": Object {
      "name": "test-web-c854d28f",
    },
    "spec": Object {
      "minReadySeconds": 0,
      "progressDeadlineSeconds": 600,
      "replicas": 2,
      "selector": Object {
        "matchLabels": Object {
          "cdk8s.io/metadata.addr": "test-Web-c8b65d84",
        },
      },
      "strategy": Object {
        "rollingUpdate": Object {
          "maxSurge": "25%",
          "maxUnavailable": "25%",
        },
        "type": "RollingUpdate",
      },
      "template": Object {
        "metadata": Object {
          "labels": Object {
            "cdk8s.io/metadata.addr": "test-Web-c8b65d84",
          },
        },
        "spec": Object {
          "affinity": Object {
            "podAntiAffinity": Object {
              "requiredDuringSchedulingIgnoredDuringExecution": Array [
                Object {
                  "labelSelector": Object {
                    "matchLabels": Object {
                      "app": "store",
                    },
                  },
                  "namespaceSelector": Object {
                    "matchLabels": Object {
                      "net": "1",
                    },
                  },
                  "topologyKey": "kubernetes.io/hostname",
                },
              ],
            },
          },
          "automountServiceAccountToken": false,
          "containers": Array [
            Object {
              "image": "web",
              "imagePullPolicy": "Always",
              "name": "main",
              "resources": Object {
                "limits": Object {
                  "cpu": "1500m",
                  "memory": "2048Mi",
                },
                "requests": Object {
                  "cpu": "1000m",
                  "memory": "512Mi",
                },
              },
              "securityContext": Object {
                "allowPrivilegeEscalation": false,
                "privileged": false,
                "readOnlyRootFilesystem": true,
                "runAsNonRoot": true,
              },
            },
          ],
          "dnsPolicy": "ClusterFirst",
          "hostNetwork": false,
          "restartPolicy": "Always",
          "securityContext": Object {
            "fsGroupChangePolicy": "Always",
            "runAsNonRoot": true,
          },
          "setHostnameAsFQDN": false,
          "shareProcessNamespace": false,
          "terminationGracePeriodSeconds": 30,
        },
      },
    },
  },
]
`;

exports[`scheduling can be spread - custom 1`] = `
Array [
  Object {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": Object {
      "name": "test-deployment-c898c72d",
    },
    "spec": Object {
      "minReadySeconds": 0,
      "progressDeadlineSeconds": 600,
      "replicas": 2,
      "selector": Object {
        "matchLabels": Object {
          "cdk8s.io/metadata.addr": "test-Deployment-c83f5e59",
        },
      },
      "strategy": Object {
        "rollingUpdate": Object {
          "maxSurge": "25%",
          "maxUnavailable": "25%",
        },
        "type": "RollingUpdate",
      },
      "template": Object {
        "metadata": Object {
          "labels": Object {
            "cdk8s.io/metadata.addr": "test-Deployment-c83f5e59",
          },
        },
        "spec": Object {
          "affinity": Object {
            "podAntiAffinity": Object {
              "preferredDuringSchedulingIgnoredDuringExecution": Array [
                Object {
                  "podAffinityTerm": Object {
                    "labelSelector": Object {
                      "matchLabels": Object {
                        "cdk8s.io/metadata.addr": "test-Deployment-c83f5e59",
                      },
                    },
                    "topologyKey": "kubernetes.io/hostname",
                  },
                  "weight": 1,
                },
              ],
            },
          },
          "automountServiceAccountToken": false,
          "containers": Array [
            Object {
              "image": "redis",
              "imagePullPolicy": "Always",
              "name": "main",
              "resources": Object {
                "limits": Object {
                  "cpu": "1500m",
                  "memory": "2048Mi",
                },
                "requests": Object {
                  "cpu": "1000m",
                  "memory": "512Mi",
                },
              },
              "securityContext": Object {
                "allowPrivilegeEscalation": false,
                "privileged": false,
                "readOnlyRootFilesystem": true,
                "runAsNonRoot": true,
              },
            },
          ],
          "dnsPolicy": "ClusterFirst",
          "hostNetwork": false,
          "restartPolicy": "Always",
          "securityContext": Object {
            "fsGroupChangePolicy": "Always",
            "runAsNonRoot": true,
          },
          "setHostnameAsFQDN": false,
          "shareProcessNamespace": false,
          "terminationGracePeriodSeconds": 30,
        },
      },
    },
  },
]
`;

exports[`scheduling can be spread - default 1`] = `
Array [
  Object {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": Object {
      "name": "test-deployment-c898c72d",
    },
    "spec": Object {
      "minReadySeconds": 0,
      "progressDeadlineSeconds": 600,
      "replicas": 2,
      "selector": Object {
        "matchLabels": Object {
          "cdk8s.io/metadata.addr": "test-Deployment-c83f5e59",
        },
      },
      "strategy": Object {
        "rollingUpdate": Object {
          "maxSurge": "25%",
          "maxUnavailable": "25%",
        },
        "type": "RollingUpdate",
      },
      "template": Object {
        "metadata": Object {
          "labels": Object {
            "cdk8s.io/metadata.addr": "test-Deployment-c83f5e59",
          },
        },
        "spec": Object {
          "affinity": Object {
            "podAntiAffinity": Object {
              "requiredDuringSchedulingIgnoredDuringExecution": Array [
                Object {
                  "labelSelector": Object {
                    "matchLabels": Object {
                      "cdk8s.io/metadata.addr": "test-Deployment-c83f5e59",
                    },
                  },
                  "topologyKey": "kubernetes.io/hostname",
                },
              ],
            },
          },
          "automountServiceAccountToken": false,
          "containers": Array [
            Object {
              "image": "redis",
              "imagePullPolicy": "Always",
              "name": "main",
              "resources": Object {
                "limits": Object {
                  "cpu": "1500m",
                  "memory": "2048Mi",
                },
                "requests": Object {
                  "cpu": "1000m",
                  "memory": "512Mi",
                },
              },
              "securityContext": Object {
                "allowPrivilegeEscalation": false,
                "privileged": false,
                "readOnlyRootFilesystem": true,
                "runAsNonRoot": true,
              },
            },
          ],
          "dnsPolicy": "ClusterFirst",
          "hostNetwork": false,
          "restartPolicy": "Always",
          "securityContext": Object {
            "fsGroupChangePolicy": "Always",
            "runAsNonRoot": true,
          },
          "setHostnameAsFQDN": false,
          "shareProcessNamespace": false,
          "terminationGracePeriodSeconds": 30,
        },
      },
    },
  },
]
`;

exports[`scheduling can tolerate tainted nodes 1`] = `
Array [
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "labels": Object {
        "cdk8s.io/metadata.addr": "test-Redis-c8b1633b",
      },
      "name": "test-redis-c870fe8d",
    },
    "spec": Object {
      "automountServiceAccountToken": false,
      "containers": Array [
        Object {
          "image": "redis",
          "imagePullPolicy": "Always",
          "name": "main",
          "resources": Object {
            "limits": Object {
              "cpu": "1500m",
              "memory": "2048Mi",
            },
            "requests": Object {
              "cpu": "1000m",
              "memory": "512Mi",
            },
          },
          "securityContext": Object {
            "allowPrivilegeEscalation": false,
            "privileged": false,
            "readOnlyRootFilesystem": true,
            "runAsNonRoot": true,
          },
        },
      ],
      "dnsPolicy": "ClusterFirst",
      "hostNetwork": false,
      "restartPolicy": "Always",
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": true,
      },
      "setHostnameAsFQDN": false,
      "shareProcessNamespace": false,
      "terminationGracePeriodSeconds": 30,
      "tolerations": Array [
        Object {
          "key": "key1",
          "operator": "Equal",
          "value": "value1",
        },
        Object {
          "effect": "PreferNoSchedule",
          "key": "key2",
          "operator": "Equal",
          "value": "value2",
        },
        Object {
          "key": "key3",
          "operator": "Exists",
        },
        Object {
          "effect": "NoSchedule",
          "key": "key4",
          "operator": "Exists",
        },
        Object {
          "effect": "NoExecute",
          "key": "key5",
          "operator": "Equal",
          "tolerationSeconds": 3600,
          "value": "value5",
        },
        Object {
          "operator": "Exists",
        },
      ],
    },
  },
]
`;

exports[`scheduling spread set to true 1`] = `
Array [
  Object {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": Object {
      "name": "test-deployment-c898c72d",
    },
    "spec": Object {
      "minReadySeconds": 0,
      "progressDeadlineSeconds": 600,
      "replicas": 2,
      "selector": Object {
        "matchLabels": Object {
          "cdk8s.io/metadata.addr": "test-Deployment-c83f5e59",
        },
      },
      "strategy": Object {
        "rollingUpdate": Object {
          "maxSurge": "25%",
          "maxUnavailable": "25%",
        },
        "type": "RollingUpdate",
      },
      "template": Object {
        "metadata": Object {
          "labels": Object {
            "cdk8s.io/metadata.addr": "test-Deployment-c83f5e59",
          },
        },
        "spec": Object {
          "affinity": Object {
            "podAntiAffinity": Object {
              "requiredDuringSchedulingIgnoredDuringExecution": Array [
                Object {
                  "labelSelector": Object {
                    "matchLabels": Object {
                      "cdk8s.io/metadata.addr": "test-Deployment-c83f5e59",
                    },
                  },
                  "topologyKey": "kubernetes.io/hostname",
                },
                Object {
                  "labelSelector": Object {
                    "matchLabels": Object {
                      "cdk8s.io/metadata.addr": "test-Deployment-c83f5e59",
                    },
                  },
                  "topologyKey": "topology.kubernetes.io/zone",
                },
              ],
            },
          },
          "automountServiceAccountToken": false,
          "containers": Array [
            Object {
              "image": "redis",
              "imagePullPolicy": "Always",
              "name": "main",
              "resources": Object {
                "limits": Object {
                  "cpu": "1500m",
                  "memory": "2048Mi",
                },
                "requests": Object {
                  "cpu": "1000m",
                  "memory": "512Mi",
                },
              },
              "securityContext": Object {
                "allowPrivilegeEscalation": false,
                "privileged": false,
                "readOnlyRootFilesystem": true,
                "runAsNonRoot": true,
              },
            },
          ],
          "dnsPolicy": "ClusterFirst",
          "hostNetwork": false,
          "restartPolicy": "Always",
          "securityContext": Object {
            "fsGroupChangePolicy": "Always",
            "runAsNonRoot": true,
          },
          "setHostnameAsFQDN": false,
          "shareProcessNamespace": false,
          "terminationGracePeriodSeconds": 30,
        },
      },
    },
  },
]
`;
