// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Can be exposed as via ingress 1`] = `
Array [
  Object {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": Object {
      "name": "test-deployment-c898c72d",
    },
    "spec": Object {
      "minReadySeconds": 0,
      "progressDeadlineSeconds": 600,
      "replicas": 1,
      "selector": Object {
        "matchExpressions": Array [],
        "matchLabels": Object {
          "cdk8s.deployment": "test-Deployment-c83f5e59",
        },
      },
      "strategy": Object {
        "rollingUpdate": Object {
          "maxSurge": "25%",
          "maxUnavailable": "25%",
        },
        "type": "RollingUpdate",
      },
      "template": Object {
        "metadata": Object {
          "labels": Object {
            "cdk8s.deployment": "test-Deployment-c83f5e59",
          },
        },
        "spec": Object {
          "affinity": Object {
            "nodeAffinity": Object {
              "preferredDuringSchedulingIgnoredDuringExecution": Array [],
              "requiredDuringSchedulingIgnoredDuringExecution": Object {
                "nodeSelectorTerms": Array [],
              },
            },
            "podAffinity": Object {
              "preferredDuringSchedulingIgnoredDuringExecution": Array [],
              "requiredDuringSchedulingIgnoredDuringExecution": Array [],
            },
            "podAntiAffinity": Object {
              "preferredDuringSchedulingIgnoredDuringExecution": Array [],
              "requiredDuringSchedulingIgnoredDuringExecution": Array [],
            },
          },
          "automountServiceAccountToken": true,
          "containers": Array [
            Object {
              "env": Array [],
              "image": "image",
              "imagePullPolicy": "Always",
              "name": "main",
              "ports": Array [
                Object {
                  "containerPort": 9300,
                },
              ],
              "securityContext": Object {
                "privileged": false,
                "readOnlyRootFilesystem": false,
                "runAsNonRoot": false,
              },
              "volumeMounts": Array [],
            },
          ],
          "dnsConfig": Object {
            "nameservers": Array [],
            "options": Array [],
            "searches": Array [],
          },
          "dnsPolicy": "ClusterFirst",
          "hostAliases": Array [],
          "initContainers": Array [],
          "securityContext": Object {
            "fsGroupChangePolicy": "Always",
            "runAsNonRoot": false,
            "sysctls": Array [],
          },
          "setHostnameAsFQDN": false,
          "volumes": Array [],
        },
      },
    },
  },
  Object {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": Object {
      "name": "test-deployment-service-c870ff98",
    },
    "spec": Object {
      "externalIPs": Array [],
      "ports": Array [
        Object {
          "port": 9300,
          "targetPort": 9300,
        },
      ],
      "selector": Object {
        "cdk8s.deployment": "test-Deployment-c83f5e59",
      },
      "type": "ClusterIP",
    },
  },
  Object {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "Ingress",
    "metadata": Object {
      "name": "test-deployment-service-ingress-c8520013",
    },
    "spec": Object {
      "rules": Array [
        Object {
          "http": Object {
            "paths": Array [
              Object {
                "backend": Object {
                  "service": Object {
                    "name": "test-deployment-service-c870ff98",
                    "port": Object {
                      "number": 9300,
                    },
                  },
                },
                "path": "/hello",
                "pathType": "Prefix",
              },
            ],
          },
        },
      ],
    },
  },
]
`;

exports[`scheduling can be assigned to a node - custom 1`] = `
Array [
  Object {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": Object {
      "name": "test-redis-c870fe8d",
    },
    "spec": Object {
      "minReadySeconds": 0,
      "progressDeadlineSeconds": 600,
      "replicas": 1,
      "selector": Object {
        "matchExpressions": Array [],
        "matchLabels": Object {
          "cdk8s.deployment": "test-Redis-c8b1633b",
        },
      },
      "strategy": Object {
        "rollingUpdate": Object {
          "maxSurge": "25%",
          "maxUnavailable": "25%",
        },
        "type": "RollingUpdate",
      },
      "template": Object {
        "metadata": Object {
          "labels": Object {
            "cdk8s.deployment": "test-Redis-c8b1633b",
          },
        },
        "spec": Object {
          "affinity": Object {
            "nodeAffinity": Object {
              "preferredDuringSchedulingIgnoredDuringExecution": Array [
                Object {
                  "preference": Object {
                    "matchExpressions": Array [
                      Object {
                        "key": "memory",
                        "operator": "In",
                        "values": Array [
                          "high",
                        ],
                      },
                    ],
                  },
                  "weight": 1,
                },
              ],
              "requiredDuringSchedulingIgnoredDuringExecution": Object {
                "nodeSelectorTerms": Array [],
              },
            },
            "podAffinity": Object {
              "preferredDuringSchedulingIgnoredDuringExecution": Array [],
              "requiredDuringSchedulingIgnoredDuringExecution": Array [],
            },
            "podAntiAffinity": Object {
              "preferredDuringSchedulingIgnoredDuringExecution": Array [],
              "requiredDuringSchedulingIgnoredDuringExecution": Array [],
            },
          },
          "automountServiceAccountToken": true,
          "containers": Array [
            Object {
              "env": Array [],
              "image": "redis",
              "imagePullPolicy": "Always",
              "name": "main",
              "ports": Array [],
              "securityContext": Object {
                "privileged": false,
                "readOnlyRootFilesystem": false,
                "runAsNonRoot": false,
              },
              "volumeMounts": Array [],
            },
          ],
          "dnsConfig": Object {
            "nameservers": Array [],
            "options": Array [],
            "searches": Array [],
          },
          "dnsPolicy": "ClusterFirst",
          "hostAliases": Array [],
          "initContainers": Array [],
          "securityContext": Object {
            "fsGroupChangePolicy": "Always",
            "runAsNonRoot": false,
            "sysctls": Array [],
          },
          "setHostnameAsFQDN": false,
          "volumes": Array [],
        },
      },
    },
  },
]
`;

exports[`scheduling can be assigned to a node - default 1`] = `
Array [
  Object {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": Object {
      "name": "test-redis-c870fe8d",
    },
    "spec": Object {
      "minReadySeconds": 0,
      "progressDeadlineSeconds": 600,
      "replicas": 1,
      "selector": Object {
        "matchExpressions": Array [],
        "matchLabels": Object {
          "cdk8s.deployment": "test-Redis-c8b1633b",
        },
      },
      "strategy": Object {
        "rollingUpdate": Object {
          "maxSurge": "25%",
          "maxUnavailable": "25%",
        },
        "type": "RollingUpdate",
      },
      "template": Object {
        "metadata": Object {
          "labels": Object {
            "cdk8s.deployment": "test-Redis-c8b1633b",
          },
        },
        "spec": Object {
          "affinity": Object {
            "nodeAffinity": Object {
              "preferredDuringSchedulingIgnoredDuringExecution": Array [],
              "requiredDuringSchedulingIgnoredDuringExecution": Object {
                "nodeSelectorTerms": Array [
                  Object {
                    "matchExpressions": Array [
                      Object {
                        "key": "memory",
                        "operator": "In",
                        "values": Array [
                          "high",
                        ],
                      },
                    ],
                  },
                ],
              },
            },
            "podAffinity": Object {
              "preferredDuringSchedulingIgnoredDuringExecution": Array [],
              "requiredDuringSchedulingIgnoredDuringExecution": Array [],
            },
            "podAntiAffinity": Object {
              "preferredDuringSchedulingIgnoredDuringExecution": Array [],
              "requiredDuringSchedulingIgnoredDuringExecution": Array [],
            },
          },
          "automountServiceAccountToken": true,
          "containers": Array [
            Object {
              "env": Array [],
              "image": "redis",
              "imagePullPolicy": "Always",
              "name": "main",
              "ports": Array [],
              "securityContext": Object {
                "privileged": false,
                "readOnlyRootFilesystem": false,
                "runAsNonRoot": false,
              },
              "volumeMounts": Array [],
            },
          ],
          "dnsConfig": Object {
            "nameservers": Array [],
            "options": Array [],
            "searches": Array [],
          },
          "dnsPolicy": "ClusterFirst",
          "hostAliases": Array [],
          "initContainers": Array [],
          "securityContext": Object {
            "fsGroupChangePolicy": "Always",
            "runAsNonRoot": false,
            "sysctls": Array [],
          },
          "setHostnameAsFQDN": false,
          "volumes": Array [],
        },
      },
    },
  },
]
`;

exports[`scheduling can be co-located with a managed deployment - custom 1`] = `
Array [
  Object {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": Object {
      "name": "test-redis-c870fe8d",
    },
    "spec": Object {
      "minReadySeconds": 0,
      "progressDeadlineSeconds": 600,
      "replicas": 1,
      "selector": Object {
        "matchExpressions": Array [],
        "matchLabels": Object {
          "cdk8s.deployment": "test-Redis-c8b1633b",
        },
      },
      "strategy": Object {
        "rollingUpdate": Object {
          "maxSurge": "25%",
          "maxUnavailable": "25%",
        },
        "type": "RollingUpdate",
      },
      "template": Object {
        "metadata": Object {
          "labels": Object {
            "cdk8s.deployment": "test-Redis-c8b1633b",
          },
        },
        "spec": Object {
          "affinity": Object {
            "nodeAffinity": Object {
              "preferredDuringSchedulingIgnoredDuringExecution": Array [],
              "requiredDuringSchedulingIgnoredDuringExecution": Object {
                "nodeSelectorTerms": Array [],
              },
            },
            "podAffinity": Object {
              "preferredDuringSchedulingIgnoredDuringExecution": Array [],
              "requiredDuringSchedulingIgnoredDuringExecution": Array [],
            },
            "podAntiAffinity": Object {
              "preferredDuringSchedulingIgnoredDuringExecution": Array [],
              "requiredDuringSchedulingIgnoredDuringExecution": Array [],
            },
          },
          "automountServiceAccountToken": true,
          "containers": Array [
            Object {
              "env": Array [],
              "image": "redis",
              "imagePullPolicy": "Always",
              "name": "main",
              "ports": Array [],
              "securityContext": Object {
                "privileged": false,
                "readOnlyRootFilesystem": false,
                "runAsNonRoot": false,
              },
              "volumeMounts": Array [],
            },
          ],
          "dnsConfig": Object {
            "nameservers": Array [],
            "options": Array [],
            "searches": Array [],
          },
          "dnsPolicy": "ClusterFirst",
          "hostAliases": Array [],
          "initContainers": Array [],
          "securityContext": Object {
            "fsGroupChangePolicy": "Always",
            "runAsNonRoot": false,
            "sysctls": Array [],
          },
          "setHostnameAsFQDN": false,
          "volumes": Array [],
        },
      },
    },
  },
  Object {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": Object {
      "name": "test-web-c854d28f",
    },
    "spec": Object {
      "minReadySeconds": 0,
      "progressDeadlineSeconds": 600,
      "replicas": 1,
      "selector": Object {
        "matchExpressions": Array [],
        "matchLabels": Object {
          "cdk8s.deployment": "test-Web-c8b65d84",
        },
      },
      "strategy": Object {
        "rollingUpdate": Object {
          "maxSurge": "25%",
          "maxUnavailable": "25%",
        },
        "type": "RollingUpdate",
      },
      "template": Object {
        "metadata": Object {
          "labels": Object {
            "cdk8s.deployment": "test-Web-c8b65d84",
          },
        },
        "spec": Object {
          "affinity": Object {
            "nodeAffinity": Object {
              "preferredDuringSchedulingIgnoredDuringExecution": Array [],
              "requiredDuringSchedulingIgnoredDuringExecution": Object {
                "nodeSelectorTerms": Array [],
              },
            },
            "podAffinity": Object {
              "preferredDuringSchedulingIgnoredDuringExecution": Array [
                Object {
                  "podAffinityTerm": Object {
                    "labelSelector": Object {
                      "matchExpressions": Array [
                        Object {
                          "key": "cdk8s.deployment",
                          "operator": "In",
                          "values": Array [
                            "test-Redis-c8b1633b",
                          ],
                        },
                      ],
                    },
                    "namespaces": Array [],
                    "topologyKey": "topology.kubernetes.io/zone",
                  },
                  "weight": 1,
                },
              ],
              "requiredDuringSchedulingIgnoredDuringExecution": Array [],
            },
            "podAntiAffinity": Object {
              "preferredDuringSchedulingIgnoredDuringExecution": Array [],
              "requiredDuringSchedulingIgnoredDuringExecution": Array [],
            },
          },
          "automountServiceAccountToken": true,
          "containers": Array [
            Object {
              "env": Array [],
              "image": "web",
              "imagePullPolicy": "Always",
              "name": "main",
              "ports": Array [],
              "securityContext": Object {
                "privileged": false,
                "readOnlyRootFilesystem": false,
                "runAsNonRoot": false,
              },
              "volumeMounts": Array [],
            },
          ],
          "dnsConfig": Object {
            "nameservers": Array [],
            "options": Array [],
            "searches": Array [],
          },
          "dnsPolicy": "ClusterFirst",
          "hostAliases": Array [],
          "initContainers": Array [],
          "securityContext": Object {
            "fsGroupChangePolicy": "Always",
            "runAsNonRoot": false,
            "sysctls": Array [],
          },
          "setHostnameAsFQDN": false,
          "volumes": Array [],
        },
      },
    },
  },
]
`;

exports[`scheduling can be co-located with a managed deployment - default 1`] = `
Array [
  Object {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": Object {
      "name": "test-redis-c870fe8d",
    },
    "spec": Object {
      "minReadySeconds": 0,
      "progressDeadlineSeconds": 600,
      "replicas": 1,
      "selector": Object {
        "matchExpressions": Array [],
        "matchLabels": Object {
          "cdk8s.deployment": "test-Redis-c8b1633b",
        },
      },
      "strategy": Object {
        "rollingUpdate": Object {
          "maxSurge": "25%",
          "maxUnavailable": "25%",
        },
        "type": "RollingUpdate",
      },
      "template": Object {
        "metadata": Object {
          "labels": Object {
            "cdk8s.deployment": "test-Redis-c8b1633b",
          },
        },
        "spec": Object {
          "affinity": Object {
            "nodeAffinity": Object {
              "preferredDuringSchedulingIgnoredDuringExecution": Array [],
              "requiredDuringSchedulingIgnoredDuringExecution": Object {
                "nodeSelectorTerms": Array [],
              },
            },
            "podAffinity": Object {
              "preferredDuringSchedulingIgnoredDuringExecution": Array [],
              "requiredDuringSchedulingIgnoredDuringExecution": Array [],
            },
            "podAntiAffinity": Object {
              "preferredDuringSchedulingIgnoredDuringExecution": Array [],
              "requiredDuringSchedulingIgnoredDuringExecution": Array [],
            },
          },
          "automountServiceAccountToken": true,
          "containers": Array [
            Object {
              "env": Array [],
              "image": "redis",
              "imagePullPolicy": "Always",
              "name": "main",
              "ports": Array [],
              "securityContext": Object {
                "privileged": false,
                "readOnlyRootFilesystem": false,
                "runAsNonRoot": false,
              },
              "volumeMounts": Array [],
            },
          ],
          "dnsConfig": Object {
            "nameservers": Array [],
            "options": Array [],
            "searches": Array [],
          },
          "dnsPolicy": "ClusterFirst",
          "hostAliases": Array [],
          "initContainers": Array [],
          "securityContext": Object {
            "fsGroupChangePolicy": "Always",
            "runAsNonRoot": false,
            "sysctls": Array [],
          },
          "setHostnameAsFQDN": false,
          "volumes": Array [],
        },
      },
    },
  },
  Object {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": Object {
      "name": "test-web-c854d28f",
    },
    "spec": Object {
      "minReadySeconds": 0,
      "progressDeadlineSeconds": 600,
      "replicas": 1,
      "selector": Object {
        "matchExpressions": Array [],
        "matchLabels": Object {
          "cdk8s.deployment": "test-Web-c8b65d84",
        },
      },
      "strategy": Object {
        "rollingUpdate": Object {
          "maxSurge": "25%",
          "maxUnavailable": "25%",
        },
        "type": "RollingUpdate",
      },
      "template": Object {
        "metadata": Object {
          "labels": Object {
            "cdk8s.deployment": "test-Web-c8b65d84",
          },
        },
        "spec": Object {
          "affinity": Object {
            "nodeAffinity": Object {
              "preferredDuringSchedulingIgnoredDuringExecution": Array [],
              "requiredDuringSchedulingIgnoredDuringExecution": Object {
                "nodeSelectorTerms": Array [],
              },
            },
            "podAffinity": Object {
              "preferredDuringSchedulingIgnoredDuringExecution": Array [],
              "requiredDuringSchedulingIgnoredDuringExecution": Array [
                Object {
                  "labelSelector": Object {
                    "matchExpressions": Array [
                      Object {
                        "key": "cdk8s.deployment",
                        "operator": "In",
                        "values": Array [
                          "test-Redis-c8b1633b",
                        ],
                      },
                    ],
                  },
                  "namespaces": Array [],
                  "topologyKey": "kubernetes.io/hostname",
                },
              ],
            },
            "podAntiAffinity": Object {
              "preferredDuringSchedulingIgnoredDuringExecution": Array [],
              "requiredDuringSchedulingIgnoredDuringExecution": Array [],
            },
          },
          "automountServiceAccountToken": true,
          "containers": Array [
            Object {
              "env": Array [],
              "image": "web",
              "imagePullPolicy": "Always",
              "name": "main",
              "ports": Array [],
              "securityContext": Object {
                "privileged": false,
                "readOnlyRootFilesystem": false,
                "runAsNonRoot": false,
              },
              "volumeMounts": Array [],
            },
          ],
          "dnsConfig": Object {
            "nameservers": Array [],
            "options": Array [],
            "searches": Array [],
          },
          "dnsPolicy": "ClusterFirst",
          "hostAliases": Array [],
          "initContainers": Array [],
          "securityContext": Object {
            "fsGroupChangePolicy": "Always",
            "runAsNonRoot": false,
            "sysctls": Array [],
          },
          "setHostnameAsFQDN": false,
          "volumes": Array [],
        },
      },
    },
  },
]
`;

exports[`scheduling can be co-located with an unmanaged deployment - custom 1`] = `
Array [
  Object {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": Object {
      "name": "test-web-c854d28f",
    },
    "spec": Object {
      "minReadySeconds": 0,
      "progressDeadlineSeconds": 600,
      "replicas": 1,
      "selector": Object {
        "matchExpressions": Array [],
        "matchLabels": Object {
          "cdk8s.deployment": "test-Web-c8b65d84",
        },
      },
      "strategy": Object {
        "rollingUpdate": Object {
          "maxSurge": "25%",
          "maxUnavailable": "25%",
        },
        "type": "RollingUpdate",
      },
      "template": Object {
        "metadata": Object {
          "labels": Object {
            "cdk8s.deployment": "test-Web-c8b65d84",
          },
        },
        "spec": Object {
          "affinity": Object {
            "nodeAffinity": Object {
              "preferredDuringSchedulingIgnoredDuringExecution": Array [],
              "requiredDuringSchedulingIgnoredDuringExecution": Object {
                "nodeSelectorTerms": Array [],
              },
            },
            "podAffinity": Object {
              "preferredDuringSchedulingIgnoredDuringExecution": Array [
                Object {
                  "podAffinityTerm": Object {
                    "labelSelector": Object {
                      "matchExpressions": Array [
                        Object {
                          "key": "app",
                          "operator": "In",
                          "values": Array [
                            "store",
                          ],
                        },
                      ],
                    },
                    "namespaceSelector": Object {
                      "matchExpressions": Array [
                        Object {
                          "key": "net",
                          "operator": "In",
                          "values": Array [
                            "1",
                          ],
                        },
                      ],
                    },
                    "namespaces": Array [
                      "n1",
                    ],
                    "topologyKey": "topology.kubernetes.io/zone",
                  },
                  "weight": 1,
                },
              ],
              "requiredDuringSchedulingIgnoredDuringExecution": Array [],
            },
            "podAntiAffinity": Object {
              "preferredDuringSchedulingIgnoredDuringExecution": Array [],
              "requiredDuringSchedulingIgnoredDuringExecution": Array [],
            },
          },
          "automountServiceAccountToken": true,
          "containers": Array [
            Object {
              "env": Array [],
              "image": "web",
              "imagePullPolicy": "Always",
              "name": "main",
              "ports": Array [],
              "securityContext": Object {
                "privileged": false,
                "readOnlyRootFilesystem": false,
                "runAsNonRoot": false,
              },
              "volumeMounts": Array [],
            },
          ],
          "dnsConfig": Object {
            "nameservers": Array [],
            "options": Array [],
            "searches": Array [],
          },
          "dnsPolicy": "ClusterFirst",
          "hostAliases": Array [],
          "initContainers": Array [],
          "securityContext": Object {
            "fsGroupChangePolicy": "Always",
            "runAsNonRoot": false,
            "sysctls": Array [],
          },
          "setHostnameAsFQDN": false,
          "volumes": Array [],
        },
      },
    },
  },
]
`;

exports[`scheduling can be co-located with an unmanaged deployment - default 1`] = `
Array [
  Object {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": Object {
      "name": "test-web-c854d28f",
    },
    "spec": Object {
      "minReadySeconds": 0,
      "progressDeadlineSeconds": 600,
      "replicas": 1,
      "selector": Object {
        "matchExpressions": Array [],
        "matchLabels": Object {
          "cdk8s.deployment": "test-Web-c8b65d84",
        },
      },
      "strategy": Object {
        "rollingUpdate": Object {
          "maxSurge": "25%",
          "maxUnavailable": "25%",
        },
        "type": "RollingUpdate",
      },
      "template": Object {
        "metadata": Object {
          "labels": Object {
            "cdk8s.deployment": "test-Web-c8b65d84",
          },
        },
        "spec": Object {
          "affinity": Object {
            "nodeAffinity": Object {
              "preferredDuringSchedulingIgnoredDuringExecution": Array [],
              "requiredDuringSchedulingIgnoredDuringExecution": Object {
                "nodeSelectorTerms": Array [],
              },
            },
            "podAffinity": Object {
              "preferredDuringSchedulingIgnoredDuringExecution": Array [],
              "requiredDuringSchedulingIgnoredDuringExecution": Array [
                Object {
                  "labelSelector": Object {
                    "matchExpressions": Array [
                      Object {
                        "key": "app",
                        "operator": "In",
                        "values": Array [
                          "store",
                        ],
                      },
                    ],
                  },
                  "namespaceSelector": Object {
                    "matchExpressions": Array [
                      Object {
                        "key": "net",
                        "operator": "In",
                        "values": Array [
                          "1",
                        ],
                      },
                    ],
                  },
                  "namespaces": Array [
                    "n1",
                  ],
                  "topologyKey": "kubernetes.io/hostname",
                },
              ],
            },
            "podAntiAffinity": Object {
              "preferredDuringSchedulingIgnoredDuringExecution": Array [],
              "requiredDuringSchedulingIgnoredDuringExecution": Array [],
            },
          },
          "automountServiceAccountToken": true,
          "containers": Array [
            Object {
              "env": Array [],
              "image": "web",
              "imagePullPolicy": "Always",
              "name": "main",
              "ports": Array [],
              "securityContext": Object {
                "privileged": false,
                "readOnlyRootFilesystem": false,
                "runAsNonRoot": false,
              },
              "volumeMounts": Array [],
            },
          ],
          "dnsConfig": Object {
            "nameservers": Array [],
            "options": Array [],
            "searches": Array [],
          },
          "dnsPolicy": "ClusterFirst",
          "hostAliases": Array [],
          "initContainers": Array [],
          "securityContext": Object {
            "fsGroupChangePolicy": "Always",
            "runAsNonRoot": false,
            "sysctls": Array [],
          },
          "setHostnameAsFQDN": false,
          "volumes": Array [],
        },
      },
    },
  },
]
`;

exports[`scheduling can be separated from a managed deployment - custom 1`] = `
Array [
  Object {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": Object {
      "name": "test-redis-c870fe8d",
    },
    "spec": Object {
      "minReadySeconds": 0,
      "progressDeadlineSeconds": 600,
      "replicas": 1,
      "selector": Object {
        "matchExpressions": Array [],
        "matchLabels": Object {
          "cdk8s.deployment": "test-Redis-c8b1633b",
        },
      },
      "strategy": Object {
        "rollingUpdate": Object {
          "maxSurge": "25%",
          "maxUnavailable": "25%",
        },
        "type": "RollingUpdate",
      },
      "template": Object {
        "metadata": Object {
          "labels": Object {
            "cdk8s.deployment": "test-Redis-c8b1633b",
          },
        },
        "spec": Object {
          "affinity": Object {
            "nodeAffinity": Object {
              "preferredDuringSchedulingIgnoredDuringExecution": Array [],
              "requiredDuringSchedulingIgnoredDuringExecution": Object {
                "nodeSelectorTerms": Array [],
              },
            },
            "podAffinity": Object {
              "preferredDuringSchedulingIgnoredDuringExecution": Array [],
              "requiredDuringSchedulingIgnoredDuringExecution": Array [],
            },
            "podAntiAffinity": Object {
              "preferredDuringSchedulingIgnoredDuringExecution": Array [],
              "requiredDuringSchedulingIgnoredDuringExecution": Array [],
            },
          },
          "automountServiceAccountToken": true,
          "containers": Array [
            Object {
              "env": Array [],
              "image": "redis",
              "imagePullPolicy": "Always",
              "name": "main",
              "ports": Array [],
              "securityContext": Object {
                "privileged": false,
                "readOnlyRootFilesystem": false,
                "runAsNonRoot": false,
              },
              "volumeMounts": Array [],
            },
          ],
          "dnsConfig": Object {
            "nameservers": Array [],
            "options": Array [],
            "searches": Array [],
          },
          "dnsPolicy": "ClusterFirst",
          "hostAliases": Array [],
          "initContainers": Array [],
          "securityContext": Object {
            "fsGroupChangePolicy": "Always",
            "runAsNonRoot": false,
            "sysctls": Array [],
          },
          "setHostnameAsFQDN": false,
          "volumes": Array [],
        },
      },
    },
  },
  Object {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": Object {
      "name": "test-web-c854d28f",
    },
    "spec": Object {
      "minReadySeconds": 0,
      "progressDeadlineSeconds": 600,
      "replicas": 1,
      "selector": Object {
        "matchExpressions": Array [],
        "matchLabels": Object {
          "cdk8s.deployment": "test-Web-c8b65d84",
        },
      },
      "strategy": Object {
        "rollingUpdate": Object {
          "maxSurge": "25%",
          "maxUnavailable": "25%",
        },
        "type": "RollingUpdate",
      },
      "template": Object {
        "metadata": Object {
          "labels": Object {
            "cdk8s.deployment": "test-Web-c8b65d84",
          },
        },
        "spec": Object {
          "affinity": Object {
            "nodeAffinity": Object {
              "preferredDuringSchedulingIgnoredDuringExecution": Array [],
              "requiredDuringSchedulingIgnoredDuringExecution": Object {
                "nodeSelectorTerms": Array [],
              },
            },
            "podAffinity": Object {
              "preferredDuringSchedulingIgnoredDuringExecution": Array [],
              "requiredDuringSchedulingIgnoredDuringExecution": Array [],
            },
            "podAntiAffinity": Object {
              "preferredDuringSchedulingIgnoredDuringExecution": Array [
                Object {
                  "podAffinityTerm": Object {
                    "labelSelector": Object {
                      "matchExpressions": Array [
                        Object {
                          "key": "cdk8s.deployment",
                          "operator": "In",
                          "values": Array [
                            "test-Redis-c8b1633b",
                          ],
                        },
                      ],
                    },
                    "namespaces": Array [],
                    "topologyKey": "topology.kubernetes.io/zone",
                  },
                  "weight": 1,
                },
              ],
              "requiredDuringSchedulingIgnoredDuringExecution": Array [],
            },
          },
          "automountServiceAccountToken": true,
          "containers": Array [
            Object {
              "env": Array [],
              "image": "web",
              "imagePullPolicy": "Always",
              "name": "main",
              "ports": Array [],
              "securityContext": Object {
                "privileged": false,
                "readOnlyRootFilesystem": false,
                "runAsNonRoot": false,
              },
              "volumeMounts": Array [],
            },
          ],
          "dnsConfig": Object {
            "nameservers": Array [],
            "options": Array [],
            "searches": Array [],
          },
          "dnsPolicy": "ClusterFirst",
          "hostAliases": Array [],
          "initContainers": Array [],
          "securityContext": Object {
            "fsGroupChangePolicy": "Always",
            "runAsNonRoot": false,
            "sysctls": Array [],
          },
          "setHostnameAsFQDN": false,
          "volumes": Array [],
        },
      },
    },
  },
]
`;

exports[`scheduling can be separated from a managed deployment - default 1`] = `
Array [
  Object {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": Object {
      "name": "test-redis-c870fe8d",
    },
    "spec": Object {
      "minReadySeconds": 0,
      "progressDeadlineSeconds": 600,
      "replicas": 1,
      "selector": Object {
        "matchExpressions": Array [],
        "matchLabels": Object {
          "cdk8s.deployment": "test-Redis-c8b1633b",
        },
      },
      "strategy": Object {
        "rollingUpdate": Object {
          "maxSurge": "25%",
          "maxUnavailable": "25%",
        },
        "type": "RollingUpdate",
      },
      "template": Object {
        "metadata": Object {
          "labels": Object {
            "cdk8s.deployment": "test-Redis-c8b1633b",
          },
        },
        "spec": Object {
          "affinity": Object {
            "nodeAffinity": Object {
              "preferredDuringSchedulingIgnoredDuringExecution": Array [],
              "requiredDuringSchedulingIgnoredDuringExecution": Object {
                "nodeSelectorTerms": Array [],
              },
            },
            "podAffinity": Object {
              "preferredDuringSchedulingIgnoredDuringExecution": Array [],
              "requiredDuringSchedulingIgnoredDuringExecution": Array [],
            },
            "podAntiAffinity": Object {
              "preferredDuringSchedulingIgnoredDuringExecution": Array [],
              "requiredDuringSchedulingIgnoredDuringExecution": Array [],
            },
          },
          "automountServiceAccountToken": true,
          "containers": Array [
            Object {
              "env": Array [],
              "image": "redis",
              "imagePullPolicy": "Always",
              "name": "main",
              "ports": Array [],
              "securityContext": Object {
                "privileged": false,
                "readOnlyRootFilesystem": false,
                "runAsNonRoot": false,
              },
              "volumeMounts": Array [],
            },
          ],
          "dnsConfig": Object {
            "nameservers": Array [],
            "options": Array [],
            "searches": Array [],
          },
          "dnsPolicy": "ClusterFirst",
          "hostAliases": Array [],
          "initContainers": Array [],
          "securityContext": Object {
            "fsGroupChangePolicy": "Always",
            "runAsNonRoot": false,
            "sysctls": Array [],
          },
          "setHostnameAsFQDN": false,
          "volumes": Array [],
        },
      },
    },
  },
  Object {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": Object {
      "name": "test-web-c854d28f",
    },
    "spec": Object {
      "minReadySeconds": 0,
      "progressDeadlineSeconds": 600,
      "replicas": 1,
      "selector": Object {
        "matchExpressions": Array [],
        "matchLabels": Object {
          "cdk8s.deployment": "test-Web-c8b65d84",
        },
      },
      "strategy": Object {
        "rollingUpdate": Object {
          "maxSurge": "25%",
          "maxUnavailable": "25%",
        },
        "type": "RollingUpdate",
      },
      "template": Object {
        "metadata": Object {
          "labels": Object {
            "cdk8s.deployment": "test-Web-c8b65d84",
          },
        },
        "spec": Object {
          "affinity": Object {
            "nodeAffinity": Object {
              "preferredDuringSchedulingIgnoredDuringExecution": Array [],
              "requiredDuringSchedulingIgnoredDuringExecution": Object {
                "nodeSelectorTerms": Array [],
              },
            },
            "podAffinity": Object {
              "preferredDuringSchedulingIgnoredDuringExecution": Array [],
              "requiredDuringSchedulingIgnoredDuringExecution": Array [],
            },
            "podAntiAffinity": Object {
              "preferredDuringSchedulingIgnoredDuringExecution": Array [],
              "requiredDuringSchedulingIgnoredDuringExecution": Array [
                Object {
                  "labelSelector": Object {
                    "matchExpressions": Array [
                      Object {
                        "key": "cdk8s.deployment",
                        "operator": "In",
                        "values": Array [
                          "test-Redis-c8b1633b",
                        ],
                      },
                    ],
                  },
                  "namespaces": Array [],
                  "topologyKey": "kubernetes.io/hostname",
                },
              ],
            },
          },
          "automountServiceAccountToken": true,
          "containers": Array [
            Object {
              "env": Array [],
              "image": "web",
              "imagePullPolicy": "Always",
              "name": "main",
              "ports": Array [],
              "securityContext": Object {
                "privileged": false,
                "readOnlyRootFilesystem": false,
                "runAsNonRoot": false,
              },
              "volumeMounts": Array [],
            },
          ],
          "dnsConfig": Object {
            "nameservers": Array [],
            "options": Array [],
            "searches": Array [],
          },
          "dnsPolicy": "ClusterFirst",
          "hostAliases": Array [],
          "initContainers": Array [],
          "securityContext": Object {
            "fsGroupChangePolicy": "Always",
            "runAsNonRoot": false,
            "sysctls": Array [],
          },
          "setHostnameAsFQDN": false,
          "volumes": Array [],
        },
      },
    },
  },
]
`;

exports[`scheduling can be separated from an unmanaged deployment - custom 1`] = `
Array [
  Object {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": Object {
      "name": "test-web-c854d28f",
    },
    "spec": Object {
      "minReadySeconds": 0,
      "progressDeadlineSeconds": 600,
      "replicas": 1,
      "selector": Object {
        "matchExpressions": Array [],
        "matchLabels": Object {
          "cdk8s.deployment": "test-Web-c8b65d84",
        },
      },
      "strategy": Object {
        "rollingUpdate": Object {
          "maxSurge": "25%",
          "maxUnavailable": "25%",
        },
        "type": "RollingUpdate",
      },
      "template": Object {
        "metadata": Object {
          "labels": Object {
            "cdk8s.deployment": "test-Web-c8b65d84",
          },
        },
        "spec": Object {
          "affinity": Object {
            "nodeAffinity": Object {
              "preferredDuringSchedulingIgnoredDuringExecution": Array [],
              "requiredDuringSchedulingIgnoredDuringExecution": Object {
                "nodeSelectorTerms": Array [],
              },
            },
            "podAffinity": Object {
              "preferredDuringSchedulingIgnoredDuringExecution": Array [],
              "requiredDuringSchedulingIgnoredDuringExecution": Array [],
            },
            "podAntiAffinity": Object {
              "preferredDuringSchedulingIgnoredDuringExecution": Array [
                Object {
                  "podAffinityTerm": Object {
                    "labelSelector": Object {
                      "matchExpressions": Array [
                        Object {
                          "key": "app",
                          "operator": "In",
                          "values": Array [
                            "store",
                          ],
                        },
                      ],
                    },
                    "namespaceSelector": Object {
                      "matchExpressions": Array [
                        Object {
                          "key": "net",
                          "operator": "In",
                          "values": Array [
                            "1",
                          ],
                        },
                      ],
                    },
                    "namespaces": Array [
                      "n1",
                    ],
                    "topologyKey": "topology.kubernetes.io/zone",
                  },
                  "weight": 1,
                },
              ],
              "requiredDuringSchedulingIgnoredDuringExecution": Array [],
            },
          },
          "automountServiceAccountToken": true,
          "containers": Array [
            Object {
              "env": Array [],
              "image": "web",
              "imagePullPolicy": "Always",
              "name": "main",
              "ports": Array [],
              "securityContext": Object {
                "privileged": false,
                "readOnlyRootFilesystem": false,
                "runAsNonRoot": false,
              },
              "volumeMounts": Array [],
            },
          ],
          "dnsConfig": Object {
            "nameservers": Array [],
            "options": Array [],
            "searches": Array [],
          },
          "dnsPolicy": "ClusterFirst",
          "hostAliases": Array [],
          "initContainers": Array [],
          "securityContext": Object {
            "fsGroupChangePolicy": "Always",
            "runAsNonRoot": false,
            "sysctls": Array [],
          },
          "setHostnameAsFQDN": false,
          "volumes": Array [],
        },
      },
    },
  },
]
`;

exports[`scheduling can be separated from an unmanaged deployment - default 1`] = `
Array [
  Object {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": Object {
      "name": "test-redis-c870fe8d",
    },
    "spec": Object {
      "minReadySeconds": 0,
      "progressDeadlineSeconds": 600,
      "replicas": 1,
      "selector": Object {
        "matchExpressions": Array [],
        "matchLabels": Object {
          "cdk8s.deployment": "test-Redis-c8b1633b",
        },
      },
      "strategy": Object {
        "rollingUpdate": Object {
          "maxSurge": "25%",
          "maxUnavailable": "25%",
        },
        "type": "RollingUpdate",
      },
      "template": Object {
        "metadata": Object {
          "labels": Object {
            "cdk8s.deployment": "test-Redis-c8b1633b",
          },
        },
        "spec": Object {
          "affinity": Object {
            "nodeAffinity": Object {
              "preferredDuringSchedulingIgnoredDuringExecution": Array [],
              "requiredDuringSchedulingIgnoredDuringExecution": Object {
                "nodeSelectorTerms": Array [],
              },
            },
            "podAffinity": Object {
              "preferredDuringSchedulingIgnoredDuringExecution": Array [],
              "requiredDuringSchedulingIgnoredDuringExecution": Array [],
            },
            "podAntiAffinity": Object {
              "preferredDuringSchedulingIgnoredDuringExecution": Array [],
              "requiredDuringSchedulingIgnoredDuringExecution": Array [],
            },
          },
          "automountServiceAccountToken": true,
          "containers": Array [
            Object {
              "env": Array [],
              "image": "redis",
              "imagePullPolicy": "Always",
              "name": "main",
              "ports": Array [],
              "securityContext": Object {
                "privileged": false,
                "readOnlyRootFilesystem": false,
                "runAsNonRoot": false,
              },
              "volumeMounts": Array [],
            },
          ],
          "dnsConfig": Object {
            "nameservers": Array [],
            "options": Array [],
            "searches": Array [],
          },
          "dnsPolicy": "ClusterFirst",
          "hostAliases": Array [],
          "initContainers": Array [],
          "securityContext": Object {
            "fsGroupChangePolicy": "Always",
            "runAsNonRoot": false,
            "sysctls": Array [],
          },
          "setHostnameAsFQDN": false,
          "volumes": Array [],
        },
      },
    },
  },
  Object {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": Object {
      "name": "test-web-c854d28f",
    },
    "spec": Object {
      "minReadySeconds": 0,
      "progressDeadlineSeconds": 600,
      "replicas": 1,
      "selector": Object {
        "matchExpressions": Array [],
        "matchLabels": Object {
          "cdk8s.deployment": "test-Web-c8b65d84",
        },
      },
      "strategy": Object {
        "rollingUpdate": Object {
          "maxSurge": "25%",
          "maxUnavailable": "25%",
        },
        "type": "RollingUpdate",
      },
      "template": Object {
        "metadata": Object {
          "labels": Object {
            "cdk8s.deployment": "test-Web-c8b65d84",
          },
        },
        "spec": Object {
          "affinity": Object {
            "nodeAffinity": Object {
              "preferredDuringSchedulingIgnoredDuringExecution": Array [],
              "requiredDuringSchedulingIgnoredDuringExecution": Object {
                "nodeSelectorTerms": Array [],
              },
            },
            "podAffinity": Object {
              "preferredDuringSchedulingIgnoredDuringExecution": Array [],
              "requiredDuringSchedulingIgnoredDuringExecution": Array [],
            },
            "podAntiAffinity": Object {
              "preferredDuringSchedulingIgnoredDuringExecution": Array [],
              "requiredDuringSchedulingIgnoredDuringExecution": Array [
                Object {
                  "labelSelector": Object {
                    "matchExpressions": Array [
                      Object {
                        "key": "cdk8s.deployment",
                        "operator": "In",
                        "values": Array [
                          "test-Redis-c8b1633b",
                        ],
                      },
                    ],
                  },
                  "namespaces": Array [],
                  "topologyKey": "kubernetes.io/hostname",
                },
              ],
            },
          },
          "automountServiceAccountToken": true,
          "containers": Array [
            Object {
              "env": Array [],
              "image": "web",
              "imagePullPolicy": "Always",
              "name": "main",
              "ports": Array [],
              "securityContext": Object {
                "privileged": false,
                "readOnlyRootFilesystem": false,
                "runAsNonRoot": false,
              },
              "volumeMounts": Array [],
            },
          ],
          "dnsConfig": Object {
            "nameservers": Array [],
            "options": Array [],
            "searches": Array [],
          },
          "dnsPolicy": "ClusterFirst",
          "hostAliases": Array [],
          "initContainers": Array [],
          "securityContext": Object {
            "fsGroupChangePolicy": "Always",
            "runAsNonRoot": false,
            "sysctls": Array [],
          },
          "setHostnameAsFQDN": false,
          "volumes": Array [],
        },
      },
    },
  },
]
`;

exports[`scheduling can be spread - custom 1`] = `
Array [
  Object {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": Object {
      "name": "test-deployment-c898c72d",
    },
    "spec": Object {
      "minReadySeconds": 0,
      "progressDeadlineSeconds": 600,
      "replicas": 1,
      "selector": Object {
        "matchExpressions": Array [],
        "matchLabels": Object {
          "cdk8s.deployment": "test-Deployment-c83f5e59",
        },
      },
      "strategy": Object {
        "rollingUpdate": Object {
          "maxSurge": "25%",
          "maxUnavailable": "25%",
        },
        "type": "RollingUpdate",
      },
      "template": Object {
        "metadata": Object {
          "labels": Object {
            "cdk8s.deployment": "test-Deployment-c83f5e59",
          },
        },
        "spec": Object {
          "affinity": Object {
            "nodeAffinity": Object {
              "preferredDuringSchedulingIgnoredDuringExecution": Array [],
              "requiredDuringSchedulingIgnoredDuringExecution": Object {
                "nodeSelectorTerms": Array [],
              },
            },
            "podAffinity": Object {
              "preferredDuringSchedulingIgnoredDuringExecution": Array [],
              "requiredDuringSchedulingIgnoredDuringExecution": Array [],
            },
            "podAntiAffinity": Object {
              "preferredDuringSchedulingIgnoredDuringExecution": Array [
                Object {
                  "podAffinityTerm": Object {
                    "labelSelector": Object {
                      "matchExpressions": Array [
                        Object {
                          "key": "cdk8s.deployment",
                          "operator": "In",
                          "values": Array [
                            "test-Deployment-c83f5e59",
                          ],
                        },
                      ],
                    },
                    "topologyKey": "kubernetes.io/hostname",
                  },
                  "weight": 1,
                },
              ],
              "requiredDuringSchedulingIgnoredDuringExecution": Array [],
            },
          },
          "automountServiceAccountToken": true,
          "containers": Array [
            Object {
              "env": Array [],
              "image": "redis",
              "imagePullPolicy": "Always",
              "name": "main",
              "ports": Array [],
              "securityContext": Object {
                "privileged": false,
                "readOnlyRootFilesystem": false,
                "runAsNonRoot": false,
              },
              "volumeMounts": Array [],
            },
          ],
          "dnsConfig": Object {
            "nameservers": Array [],
            "options": Array [],
            "searches": Array [],
          },
          "dnsPolicy": "ClusterFirst",
          "hostAliases": Array [],
          "initContainers": Array [],
          "securityContext": Object {
            "fsGroupChangePolicy": "Always",
            "runAsNonRoot": false,
            "sysctls": Array [],
          },
          "setHostnameAsFQDN": false,
          "volumes": Array [],
        },
      },
    },
  },
]
`;

exports[`scheduling can be spread - default 1`] = `
Array [
  Object {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": Object {
      "name": "test-deployment-c898c72d",
    },
    "spec": Object {
      "minReadySeconds": 0,
      "progressDeadlineSeconds": 600,
      "replicas": 1,
      "selector": Object {
        "matchExpressions": Array [],
        "matchLabels": Object {
          "cdk8s.deployment": "test-Deployment-c83f5e59",
        },
      },
      "strategy": Object {
        "rollingUpdate": Object {
          "maxSurge": "25%",
          "maxUnavailable": "25%",
        },
        "type": "RollingUpdate",
      },
      "template": Object {
        "metadata": Object {
          "labels": Object {
            "cdk8s.deployment": "test-Deployment-c83f5e59",
          },
        },
        "spec": Object {
          "affinity": Object {
            "nodeAffinity": Object {
              "preferredDuringSchedulingIgnoredDuringExecution": Array [],
              "requiredDuringSchedulingIgnoredDuringExecution": Object {
                "nodeSelectorTerms": Array [],
              },
            },
            "podAffinity": Object {
              "preferredDuringSchedulingIgnoredDuringExecution": Array [],
              "requiredDuringSchedulingIgnoredDuringExecution": Array [],
            },
            "podAntiAffinity": Object {
              "preferredDuringSchedulingIgnoredDuringExecution": Array [],
              "requiredDuringSchedulingIgnoredDuringExecution": Array [
                Object {
                  "labelSelector": Object {
                    "matchExpressions": Array [
                      Object {
                        "key": "cdk8s.deployment",
                        "operator": "In",
                        "values": Array [
                          "test-Deployment-c83f5e59",
                        ],
                      },
                    ],
                  },
                  "topologyKey": "kubernetes.io/hostname",
                },
              ],
            },
          },
          "automountServiceAccountToken": true,
          "containers": Array [
            Object {
              "env": Array [],
              "image": "redis",
              "imagePullPolicy": "Always",
              "name": "main",
              "ports": Array [],
              "securityContext": Object {
                "privileged": false,
                "readOnlyRootFilesystem": false,
                "runAsNonRoot": false,
              },
              "volumeMounts": Array [],
            },
          ],
          "dnsConfig": Object {
            "nameservers": Array [],
            "options": Array [],
            "searches": Array [],
          },
          "dnsPolicy": "ClusterFirst",
          "hostAliases": Array [],
          "initContainers": Array [],
          "securityContext": Object {
            "fsGroupChangePolicy": "Always",
            "runAsNonRoot": false,
            "sysctls": Array [],
          },
          "setHostnameAsFQDN": false,
          "volumes": Array [],
        },
      },
    },
  },
]
`;
