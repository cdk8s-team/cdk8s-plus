// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`NeworkPolicy | can add ingress from a managed pod 1`] = `
Array [
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "labels": Object {
        "cdk8s.io/metadata.addr": "test-DB-c89781f6",
      },
      "name": "test-db-c81b90b8",
    },
    "spec": Object {
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "image": "db",
          "imagePullPolicy": "Always",
          "name": "main",
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsNonRoot": false,
          },
        },
      ],
      "dnsPolicy": "ClusterFirst",
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
      },
      "setHostnameAsFQDN": false,
    },
  },
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "labels": Object {
        "cdk8s.io/metadata.addr": "test-Web-c8b65d84",
      },
      "name": "test-web-c854d28f",
    },
    "spec": Object {
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "image": "webs",
          "imagePullPolicy": "Always",
          "name": "main",
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsNonRoot": false,
          },
        },
      ],
      "dnsPolicy": "ClusterFirst",
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
      },
      "setHostnameAsFQDN": false,
    },
  },
  Object {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "NetworkPolicy",
    "metadata": Object {
      "name": "test-policy-c89ef47f",
      "namespace": "default",
    },
    "spec": Object {
      "ingress": Array [
        Object {
          "from": Array [
            Object {
              "namespaceSelector": Object {
                "matchLabels": Object {
                  "kubernetes.io/metadata.name": "default",
                },
              },
              "podSelector": Object {
                "matchLabels": Object {
                  "cdk8s.io/metadata.addr": "test-Web-c8b65d84",
                },
              },
            },
          ],
          "ports": Array [
            Object {
              "port": 6379,
              "protocol": "TCP",
            },
          ],
        },
      ],
      "podSelector": Object {
        "matchLabels": Object {
          "cdk8s.io/metadata.addr": "test-DB-c89781f6",
        },
      },
      "policyTypes": Array [
        "Ingress",
      ],
    },
  },
]
`;

exports[`NeworkPolicy | can add ingress from all namespaces 1`] = `
Array [
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "labels": Object {
        "cdk8s.io/metadata.addr": "test-DB-c89781f6",
      },
      "name": "test-db-c81b90b8",
    },
    "spec": Object {
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "image": "db",
          "imagePullPolicy": "Always",
          "name": "main",
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsNonRoot": false,
          },
        },
      ],
      "dnsPolicy": "ClusterFirst",
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
      },
      "setHostnameAsFQDN": false,
    },
  },
  Object {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "NetworkPolicy",
    "metadata": Object {
      "name": "test-policy-c89ef47f",
      "namespace": "default",
    },
    "spec": Object {
      "ingress": Array [
        Object {
          "from": Array [
            Object {
              "namespaceSelector": Object {},
              "podSelector": Object {},
            },
          ],
          "ports": Array [
            Object {
              "port": 6379,
              "protocol": "TCP",
            },
          ],
        },
      ],
      "podSelector": Object {
        "matchLabels": Object {
          "cdk8s.io/metadata.addr": "test-DB-c89781f6",
        },
      },
      "policyTypes": Array [
        "Ingress",
      ],
    },
  },
]
`;

exports[`NeworkPolicy | can add ingress from all pods 1`] = `
Array [
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "labels": Object {
        "cdk8s.io/metadata.addr": "test-DB-c89781f6",
      },
      "name": "test-db-c81b90b8",
    },
    "spec": Object {
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "image": "db",
          "imagePullPolicy": "Always",
          "name": "main",
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsNonRoot": false,
          },
        },
      ],
      "dnsPolicy": "ClusterFirst",
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
      },
      "setHostnameAsFQDN": false,
    },
  },
  Object {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "NetworkPolicy",
    "metadata": Object {
      "name": "test-policy-c89ef47f",
      "namespace": "default",
    },
    "spec": Object {
      "ingress": Array [
        Object {
          "from": Array [
            Object {
              "podSelector": Object {},
            },
          ],
          "ports": Array [
            Object {
              "port": 6379,
              "protocol": "TCP",
            },
          ],
        },
      ],
      "podSelector": Object {
        "matchLabels": Object {
          "cdk8s.io/metadata.addr": "test-DB-c89781f6",
        },
      },
      "policyTypes": Array [
        "Ingress",
      ],
    },
  },
]
`;

exports[`NeworkPolicy | can add ingress from an ip block 1`] = `
Array [
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "labels": Object {
        "cdk8s.io/metadata.addr": "test-DB-c89781f6",
      },
      "name": "test-db-c81b90b8",
    },
    "spec": Object {
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "image": "db",
          "imagePullPolicy": "Always",
          "name": "main",
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsNonRoot": false,
          },
        },
      ],
      "dnsPolicy": "ClusterFirst",
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
      },
      "setHostnameAsFQDN": false,
    },
  },
  Object {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "NetworkPolicy",
    "metadata": Object {
      "name": "test-policy-c89ef47f",
      "namespace": "default",
    },
    "spec": Object {
      "ingress": Array [
        Object {
          "from": Array [
            Object {
              "ipBlock": Object {
                "cidr": "172.17.0.0/16",
                "except": Array [
                  "172.17.1.0/24",
                ],
              },
            },
          ],
          "ports": Array [
            Object {
              "port": 6379,
              "protocol": "TCP",
            },
          ],
        },
      ],
      "podSelector": Object {
        "matchLabels": Object {
          "cdk8s.io/metadata.addr": "test-DB-c89781f6",
        },
      },
      "policyTypes": Array [
        "Ingress",
      ],
    },
  },
]
`;

exports[`NeworkPolicy | can add ingress from managed namespace 1`] = `
Array [
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "labels": Object {
        "cdk8s.io/metadata.addr": "test-DB-c89781f6",
      },
      "name": "test-db-c81b90b8",
    },
    "spec": Object {
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "image": "db",
          "imagePullPolicy": "Always",
          "name": "main",
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsNonRoot": false,
          },
        },
      ],
      "dnsPolicy": "ClusterFirst",
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
      },
      "setHostnameAsFQDN": false,
    },
  },
  Object {
    "apiVersion": "v1",
    "kind": "Namespace",
    "metadata": Object {
      "name": "test-namespace-c83f04e1",
    },
    "spec": Object {},
  },
  Object {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "NetworkPolicy",
    "metadata": Object {
      "name": "test-policy-c89ef47f",
      "namespace": "default",
    },
    "spec": Object {
      "ingress": Array [
        Object {
          "from": Array [
            Object {
              "namespaceSelector": Object {
                "matchLabels": Object {
                  "kubernetes.io/metadata.name": "test-namespace-c83f04e1",
                },
              },
              "podSelector": Object {},
            },
          ],
          "ports": Array [
            Object {
              "port": 6379,
              "protocol": "TCP",
            },
          ],
        },
      ],
      "podSelector": Object {
        "matchLabels": Object {
          "cdk8s.io/metadata.addr": "test-DB-c89781f6",
        },
      },
      "policyTypes": Array [
        "Ingress",
      ],
    },
  },
]
`;

exports[`NeworkPolicy | can add ingress from pods selected with namespaces selected by labes 1`] = `
Array [
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "labels": Object {
        "cdk8s.io/metadata.addr": "test-DB-c89781f6",
      },
      "name": "test-db-c81b90b8",
    },
    "spec": Object {
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "image": "db",
          "imagePullPolicy": "Always",
          "name": "main",
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsNonRoot": false,
          },
        },
      ],
      "dnsPolicy": "ClusterFirst",
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
      },
      "setHostnameAsFQDN": false,
    },
  },
  Object {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "NetworkPolicy",
    "metadata": Object {
      "name": "test-policy-c89ef47f",
      "namespace": "default",
    },
    "spec": Object {
      "ingress": Array [
        Object {
          "from": Array [
            Object {
              "namespaceSelector": Object {
                "matchLabels": Object {
                  "team": "analytics",
                },
              },
              "podSelector": Object {
                "matchLabels": Object {
                  "tier": "frontend",
                },
              },
            },
          ],
          "ports": Array [
            Object {
              "port": 6379,
              "protocol": "TCP",
            },
          ],
        },
      ],
      "podSelector": Object {
        "matchLabels": Object {
          "cdk8s.io/metadata.addr": "test-DB-c89781f6",
        },
      },
      "policyTypes": Array [
        "Ingress",
      ],
    },
  },
]
`;

exports[`NeworkPolicy | can add ingress from pods selected with namespaces selected by names 1`] = `
Array [
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "labels": Object {
        "cdk8s.io/metadata.addr": "test-DB-c89781f6",
      },
      "name": "test-db-c81b90b8",
    },
    "spec": Object {
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "image": "db",
          "imagePullPolicy": "Always",
          "name": "main",
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsNonRoot": false,
          },
        },
      ],
      "dnsPolicy": "ClusterFirst",
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
      },
      "setHostnameAsFQDN": false,
    },
  },
  Object {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "NetworkPolicy",
    "metadata": Object {
      "name": "test-policy-c89ef47f",
      "namespace": "default",
    },
    "spec": Object {
      "ingress": Array [
        Object {
          "from": Array [
            Object {
              "namespaceSelector": Object {
                "matchLabels": Object {
                  "kubernetes.io/metadata.name": "n1",
                  "team": "analytics",
                },
              },
              "podSelector": Object {
                "matchLabels": Object {
                  "tier": "frontend",
                },
              },
            },
            Object {
              "namespaceSelector": Object {
                "matchLabels": Object {
                  "kubernetes.io/metadata.name": "n2",
                  "team": "analytics",
                },
              },
              "podSelector": Object {
                "matchLabels": Object {
                  "tier": "frontend",
                },
              },
            },
          ],
          "ports": Array [
            Object {
              "port": 6379,
              "protocol": "TCP",
            },
          ],
        },
      ],
      "podSelector": Object {
        "matchLabels": Object {
          "cdk8s.io/metadata.addr": "test-DB-c89781f6",
        },
      },
      "policyTypes": Array [
        "Ingress",
      ],
    },
  },
]
`;

exports[`NeworkPolicy | can add ingress from selected namespaces 1`] = `
Array [
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "labels": Object {
        "cdk8s.io/metadata.addr": "test-DB-c89781f6",
      },
      "name": "test-db-c81b90b8",
    },
    "spec": Object {
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "image": "db",
          "imagePullPolicy": "Always",
          "name": "main",
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsNonRoot": false,
          },
        },
      ],
      "dnsPolicy": "ClusterFirst",
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
      },
      "setHostnameAsFQDN": false,
    },
  },
  Object {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "NetworkPolicy",
    "metadata": Object {
      "name": "test-policy-c89ef47f",
      "namespace": "default",
    },
    "spec": Object {
      "ingress": Array [
        Object {
          "from": Array [
            Object {
              "namespaceSelector": Object {
                "matchLabels": Object {
                  "tier": "web",
                },
              },
              "podSelector": Object {},
            },
          ],
          "ports": Array [
            Object {
              "port": 6379,
              "protocol": "TCP",
            },
          ],
        },
      ],
      "podSelector": Object {
        "matchLabels": Object {
          "cdk8s.io/metadata.addr": "test-DB-c89781f6",
        },
      },
      "policyTypes": Array [
        "Ingress",
      ],
    },
  },
]
`;

exports[`NeworkPolicy | can add ingress from selected pods 1`] = `
Array [
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "labels": Object {
        "cdk8s.io/metadata.addr": "test-DB-c89781f6",
      },
      "name": "test-db-c81b90b8",
    },
    "spec": Object {
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "image": "db",
          "imagePullPolicy": "Always",
          "name": "main",
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsNonRoot": false,
          },
        },
      ],
      "dnsPolicy": "ClusterFirst",
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
      },
      "setHostnameAsFQDN": false,
    },
  },
  Object {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "NetworkPolicy",
    "metadata": Object {
      "name": "test-policy-c89ef47f",
      "namespace": "default",
    },
    "spec": Object {
      "ingress": Array [
        Object {
          "from": Array [
            Object {
              "podSelector": Object {
                "matchLabels": Object {
                  "tier": "frontend",
                },
              },
            },
          ],
          "ports": Array [
            Object {
              "port": 6379,
              "protocol": "TCP",
            },
          ],
        },
      ],
      "podSelector": Object {
        "matchLabels": Object {
          "cdk8s.io/metadata.addr": "test-DB-c89781f6",
        },
      },
      "policyTypes": Array [
        "Ingress",
      ],
    },
  },
]
`;

exports[`NeworkPolicy | can create a policy for a managed pod 1`] = `
Array [
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "labels": Object {
        "cdk8s.io/metadata.addr": "test-Web-c8b65d84",
      },
      "name": "test-web-c854d28f",
    },
    "spec": Object {
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "image": "web",
          "imagePullPolicy": "Always",
          "name": "main",
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsNonRoot": false,
          },
        },
      ],
      "dnsPolicy": "ClusterFirst",
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
      },
      "setHostnameAsFQDN": false,
    },
  },
  Object {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "NetworkPolicy",
    "metadata": Object {
      "name": "test-policy-c89ef47f",
      "namespace": "default",
    },
    "spec": Object {
      "podSelector": Object {
        "matchLabels": Object {
          "cdk8s.io/metadata.addr": "test-Web-c8b65d84",
        },
      },
    },
  },
]
`;

exports[`NeworkPolicy | can create a policy for all pods 1`] = `
Array [
  Object {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "NetworkPolicy",
    "metadata": Object {
      "name": "test-policy1-c84bc0a0",
    },
    "spec": Object {
      "podSelector": Object {},
    },
  },
  Object {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "NetworkPolicy",
    "metadata": Object {
      "name": "test-policy2-c822b70e",
    },
    "spec": Object {
      "podSelector": Object {},
    },
  },
]
`;

exports[`NeworkPolicy | can create a policy for selected pods 1`] = `
Array [
  Object {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "NetworkPolicy",
    "metadata": Object {
      "name": "test-policy-c89ef47f",
    },
    "spec": Object {
      "podSelector": Object {
        "matchLabels": Object {
          "app": "web",
        },
      },
    },
  },
]
`;

exports[`NeworkPolicy | can create a policy that allows all ingress by default 1`] = `
Array [
  Object {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "NetworkPolicy",
    "metadata": Object {
      "name": "test-policy-c89ef47f",
    },
    "spec": Object {
      "ingress": Array [
        Object {},
      ],
      "podSelector": Object {},
      "policyTypes": Array [
        "Ingress",
      ],
    },
  },
]
`;
