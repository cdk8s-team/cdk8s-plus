// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`IpBlock | anyIpv4 1`] = `
Object {
  "cidr": "0.0.0.0/0",
  "except": undefined,
}
`;

exports[`IpBlock | anyIpv6 1`] = `
Object {
  "cidr": "::/0",
  "except": undefined,
}
`;

exports[`IpBlock | ipv4 1`] = `
Object {
  "cidr": "172.17.0.0/16",
  "except": Array [
    "172.17.1.0/24",
  ],
}
`;

exports[`IpBlock | ipv6 1`] = `
Object {
  "cidr": "2002::1234:abcd:ffff:c0a8:101/64",
  "except": Array [
    "2002::1234:abcd:ffff:c0a8:101/24",
  ],
}
`;

exports[`NetworkPolicyPort | allTcp 1`] = `
Object {
  "endPort": 65535,
  "port": IntOrString {
    "value": 0,
  },
  "protocol": "TCP",
}
`;

exports[`NetworkPolicyPort | allUcp 1`] = `
Object {
  "endPort": 65535,
  "port": IntOrString {
    "value": 0,
  },
  "protocol": "UDP",
}
`;

exports[`NetworkPolicyPort | tcp 1`] = `
Object {
  "endPort": undefined,
  "port": IntOrString {
    "value": 8080,
  },
  "protocol": "TCP",
}
`;

exports[`NetworkPolicyPort | tcpRange 1`] = `
Object {
  "endPort": 8085,
  "port": IntOrString {
    "value": 8080,
  },
  "protocol": "TCP",
}
`;

exports[`NetworkPolicyPort | udp 1`] = `
Object {
  "endPort": undefined,
  "port": IntOrString {
    "value": 8080,
  },
  "protocol": "UDP",
}
`;

exports[`NetworkPolicyPort | udpRange 1`] = `
Object {
  "endPort": 8085,
  "port": IntOrString {
    "value": 8080,
  },
  "protocol": "UDP",
}
`;

exports[`NeworkPolicy | can add egress to a managed pod 1`] = `
Array [
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "labels": Object {
        "cdk8s.io/metadata.addr": "test-Pod1-c8591188",
      },
      "name": "test-pod1-c8153666",
    },
    "spec": Object {
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "image": "pod",
          "imagePullPolicy": "Always",
          "name": "main",
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsGroup": 26000,
            "runAsNonRoot": false,
            "runAsUser": 25000,
          },
        },
      ],
      "dnsPolicy": "ClusterFirst",
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
      },
      "setHostnameAsFQDN": false,
    },
  },
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "labels": Object {
        "cdk8s.io/metadata.addr": "test-Pod2-c82dc44e",
      },
      "name": "test-pod2-c895d79d",
    },
    "spec": Object {
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "image": "pod",
          "imagePullPolicy": "Always",
          "name": "main",
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsGroup": 26000,
            "runAsNonRoot": false,
            "runAsUser": 25000,
          },
        },
      ],
      "dnsPolicy": "ClusterFirst",
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
      },
      "setHostnameAsFQDN": false,
    },
  },
  Object {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "NetworkPolicy",
    "metadata": Object {
      "name": "test-policy-c89ef47f",
    },
    "spec": Object {
      "egress": Array [
        Object {
          "ports": Array [
            Object {
              "port": 6379,
              "protocol": "TCP",
            },
          ],
          "to": Array [
            Object {
              "podSelector": Object {
                "matchLabels": Object {
                  "cdk8s.io/metadata.addr": "test-Pod2-c82dc44e",
                },
              },
            },
          ],
        },
      ],
      "podSelector": Object {
        "matchLabels": Object {
          "cdk8s.io/metadata.addr": "test-Pod1-c8591188",
        },
      },
      "policyTypes": Array [
        "Egress",
      ],
    },
  },
]
`;

exports[`NeworkPolicy | can add egress to a managed workload resource 1`] = `
Array [
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "labels": Object {
        "cdk8s.io/metadata.addr": "test-Pod-c815bc91",
      },
      "name": "test-pod-c890e1b8",
    },
    "spec": Object {
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "image": "pod",
          "imagePullPolicy": "Always",
          "name": "main",
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsGroup": 26000,
            "runAsNonRoot": false,
            "runAsUser": 25000,
          },
        },
      ],
      "dnsPolicy": "ClusterFirst",
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
      },
      "setHostnameAsFQDN": false,
    },
  },
  Object {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": Object {
      "name": "test-deployment-c898c72d",
    },
    "spec": Object {
      "minReadySeconds": 0,
      "progressDeadlineSeconds": 600,
      "replicas": 1,
      "selector": Object {
        "matchLabels": Object {
          "cdk8s.io/metadata.addr": "test-Deployment-c83f5e59",
        },
      },
      "strategy": Object {
        "rollingUpdate": Object {
          "maxSurge": "25%",
          "maxUnavailable": "25%",
        },
        "type": "RollingUpdate",
      },
      "template": Object {
        "metadata": Object {
          "labels": Object {
            "cdk8s.io/metadata.addr": "test-Deployment-c83f5e59",
          },
        },
        "spec": Object {
          "automountServiceAccountToken": true,
          "containers": Array [
            Object {
              "image": "pod",
              "imagePullPolicy": "Always",
              "name": "main",
              "securityContext": Object {
                "privileged": false,
                "readOnlyRootFilesystem": false,
                "runAsGroup": 26000,
                "runAsNonRoot": false,
                "runAsUser": 25000,
              },
            },
          ],
          "dnsPolicy": "ClusterFirst",
          "securityContext": Object {
            "fsGroupChangePolicy": "Always",
            "runAsNonRoot": false,
          },
          "setHostnameAsFQDN": false,
        },
      },
    },
  },
  Object {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "NetworkPolicy",
    "metadata": Object {
      "name": "test-policy-c89ef47f",
    },
    "spec": Object {
      "egress": Array [
        Object {
          "ports": Array [
            Object {
              "port": 6379,
              "protocol": "TCP",
            },
          ],
          "to": Array [
            Object {
              "podSelector": Object {
                "matchLabels": Object {
                  "cdk8s.io/metadata.addr": "test-Deployment-c83f5e59",
                },
              },
            },
          ],
        },
      ],
      "podSelector": Object {
        "matchLabels": Object {
          "cdk8s.io/metadata.addr": "test-Pod-c815bc91",
        },
      },
      "policyTypes": Array [
        "Egress",
      ],
    },
  },
]
`;

exports[`NeworkPolicy | can add egress to all namespaces 1`] = `
Array [
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "labels": Object {
        "cdk8s.io/metadata.addr": "test-Pod-c815bc91",
      },
      "name": "test-pod-c890e1b8",
    },
    "spec": Object {
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "image": "pod",
          "imagePullPolicy": "Always",
          "name": "main",
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsGroup": 26000,
            "runAsNonRoot": false,
            "runAsUser": 25000,
          },
        },
      ],
      "dnsPolicy": "ClusterFirst",
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
      },
      "setHostnameAsFQDN": false,
    },
  },
  Object {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "NetworkPolicy",
    "metadata": Object {
      "name": "test-policy-c89ef47f",
    },
    "spec": Object {
      "egress": Array [
        Object {
          "ports": Array [
            Object {
              "port": 6379,
              "protocol": "TCP",
            },
          ],
          "to": Array [
            Object {
              "namespaceSelector": Object {},
              "podSelector": Object {},
            },
          ],
        },
      ],
      "podSelector": Object {
        "matchLabels": Object {
          "cdk8s.io/metadata.addr": "test-Pod-c815bc91",
        },
      },
      "policyTypes": Array [
        "Egress",
      ],
    },
  },
]
`;

exports[`NeworkPolicy | can add egress to all pods 1`] = `
Array [
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "labels": Object {
        "cdk8s.io/metadata.addr": "test-Pod-c815bc91",
      },
      "name": "test-pod-c890e1b8",
    },
    "spec": Object {
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "image": "pod",
          "imagePullPolicy": "Always",
          "name": "main",
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsGroup": 26000,
            "runAsNonRoot": false,
            "runAsUser": 25000,
          },
        },
      ],
      "dnsPolicy": "ClusterFirst",
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
      },
      "setHostnameAsFQDN": false,
    },
  },
  Object {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "NetworkPolicy",
    "metadata": Object {
      "name": "test-policy-c89ef47f",
    },
    "spec": Object {
      "egress": Array [
        Object {
          "ports": Array [
            Object {
              "port": 6379,
              "protocol": "TCP",
            },
          ],
          "to": Array [
            Object {
              "podSelector": Object {},
            },
          ],
        },
      ],
      "podSelector": Object {
        "matchLabels": Object {
          "cdk8s.io/metadata.addr": "test-Pod-c815bc91",
        },
      },
      "policyTypes": Array [
        "Egress",
      ],
    },
  },
]
`;

exports[`NeworkPolicy | can add egress to an ip block 1`] = `
Array [
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "labels": Object {
        "cdk8s.io/metadata.addr": "test-Pod-c815bc91",
      },
      "name": "test-pod-c890e1b8",
    },
    "spec": Object {
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "image": "pod",
          "imagePullPolicy": "Always",
          "name": "main",
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsGroup": 26000,
            "runAsNonRoot": false,
            "runAsUser": 25000,
          },
        },
      ],
      "dnsPolicy": "ClusterFirst",
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
      },
      "setHostnameAsFQDN": false,
    },
  },
  Object {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "NetworkPolicy",
    "metadata": Object {
      "name": "test-policy-c89ef47f",
    },
    "spec": Object {
      "egress": Array [
        Object {
          "ports": Array [
            Object {
              "port": 6379,
              "protocol": "TCP",
            },
          ],
          "to": Array [
            Object {
              "ipBlock": Object {
                "cidr": "172.17.0.0/16",
                "except": Array [
                  "172.17.1.0/24",
                ],
              },
            },
          ],
        },
      ],
      "podSelector": Object {
        "matchLabels": Object {
          "cdk8s.io/metadata.addr": "test-Pod-c815bc91",
        },
      },
      "policyTypes": Array [
        "Egress",
      ],
    },
  },
]
`;

exports[`NeworkPolicy | can add egress to managed namespace 1`] = `
Array [
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "labels": Object {
        "cdk8s.io/metadata.addr": "test-Pod-c815bc91",
      },
      "name": "test-pod-c890e1b8",
    },
    "spec": Object {
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "image": "pod",
          "imagePullPolicy": "Always",
          "name": "main",
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsGroup": 26000,
            "runAsNonRoot": false,
            "runAsUser": 25000,
          },
        },
      ],
      "dnsPolicy": "ClusterFirst",
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
      },
      "setHostnameAsFQDN": false,
    },
  },
  Object {
    "apiVersion": "v1",
    "kind": "Namespace",
    "metadata": Object {
      "name": "test-namespace-c83f04e1",
    },
    "spec": Object {},
  },
  Object {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "NetworkPolicy",
    "metadata": Object {
      "name": "test-policy-c89ef47f",
    },
    "spec": Object {
      "egress": Array [
        Object {
          "ports": Array [
            Object {
              "port": 6379,
              "protocol": "TCP",
            },
          ],
          "to": Array [
            Object {
              "namespaceSelector": Object {
                "matchLabels": Object {
                  "kubernetes.io/metadata.name": "test-namespace-c83f04e1",
                },
              },
              "podSelector": Object {},
            },
          ],
        },
      ],
      "podSelector": Object {
        "matchLabels": Object {
          "cdk8s.io/metadata.addr": "test-Pod-c815bc91",
        },
      },
      "policyTypes": Array [
        "Egress",
      ],
    },
  },
]
`;

exports[`NeworkPolicy | can add egress to pods selected with namespaces selected by labes 1`] = `
Array [
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "labels": Object {
        "cdk8s.io/metadata.addr": "test-Pod-c815bc91",
      },
      "name": "test-pod-c890e1b8",
    },
    "spec": Object {
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "image": "pod",
          "imagePullPolicy": "Always",
          "name": "main",
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsGroup": 26000,
            "runAsNonRoot": false,
            "runAsUser": 25000,
          },
        },
      ],
      "dnsPolicy": "ClusterFirst",
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
      },
      "setHostnameAsFQDN": false,
    },
  },
  Object {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "NetworkPolicy",
    "metadata": Object {
      "name": "test-policy-c89ef47f",
    },
    "spec": Object {
      "egress": Array [
        Object {
          "ports": Array [
            Object {
              "port": 6379,
              "protocol": "TCP",
            },
          ],
          "to": Array [
            Object {
              "namespaceSelector": Object {
                "matchLabels": Object {
                  "type": "selected",
                },
              },
              "podSelector": Object {
                "matchLabels": Object {
                  "type": "selected",
                },
              },
            },
          ],
        },
      ],
      "podSelector": Object {
        "matchLabels": Object {
          "cdk8s.io/metadata.addr": "test-Pod-c815bc91",
        },
      },
      "policyTypes": Array [
        "Egress",
      ],
    },
  },
]
`;

exports[`NeworkPolicy | can add egress to pods selected with namespaces selected by names 1`] = `
Array [
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "labels": Object {
        "cdk8s.io/metadata.addr": "test-Pod-c815bc91",
      },
      "name": "test-pod-c890e1b8",
    },
    "spec": Object {
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "image": "pod",
          "imagePullPolicy": "Always",
          "name": "main",
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsGroup": 26000,
            "runAsNonRoot": false,
            "runAsUser": 25000,
          },
        },
      ],
      "dnsPolicy": "ClusterFirst",
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
      },
      "setHostnameAsFQDN": false,
    },
  },
  Object {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "NetworkPolicy",
    "metadata": Object {
      "name": "test-policy-c89ef47f",
    },
    "spec": Object {
      "egress": Array [
        Object {
          "ports": Array [
            Object {
              "port": 6379,
              "protocol": "TCP",
            },
          ],
          "to": Array [
            Object {
              "namespaceSelector": Object {
                "matchLabels": Object {
                  "kubernetes.io/metadata.name": "selected1",
                  "type": "selected",
                },
              },
              "podSelector": Object {
                "matchLabels": Object {
                  "type": "selected",
                },
              },
            },
            Object {
              "namespaceSelector": Object {
                "matchLabels": Object {
                  "kubernetes.io/metadata.name": "selected2",
                  "type": "selected",
                },
              },
              "podSelector": Object {
                "matchLabels": Object {
                  "type": "selected",
                },
              },
            },
          ],
        },
      ],
      "podSelector": Object {
        "matchLabels": Object {
          "cdk8s.io/metadata.addr": "test-Pod-c815bc91",
        },
      },
      "policyTypes": Array [
        "Egress",
      ],
    },
  },
]
`;

exports[`NeworkPolicy | can add egress to pods selected without namespaces 1`] = `
Array [
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "labels": Object {
        "cdk8s.io/metadata.addr": "test-Pod-c815bc91",
      },
      "name": "test-pod-c890e1b8",
    },
    "spec": Object {
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "image": "pod",
          "imagePullPolicy": "Always",
          "name": "main",
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsGroup": 26000,
            "runAsNonRoot": false,
            "runAsUser": 25000,
          },
        },
      ],
      "dnsPolicy": "ClusterFirst",
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
      },
      "setHostnameAsFQDN": false,
    },
  },
  Object {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "NetworkPolicy",
    "metadata": Object {
      "name": "test-policy-c89ef47f",
    },
    "spec": Object {
      "egress": Array [
        Object {
          "ports": Array [
            Object {
              "port": 6379,
              "protocol": "TCP",
            },
          ],
          "to": Array [
            Object {
              "podSelector": Object {
                "matchLabels": Object {
                  "type": "selected",
                },
              },
            },
          ],
        },
      ],
      "podSelector": Object {
        "matchLabels": Object {
          "cdk8s.io/metadata.addr": "test-Pod-c815bc91",
        },
      },
      "policyTypes": Array [
        "Egress",
      ],
    },
  },
]
`;

exports[`NeworkPolicy | can add egress to selected namespaces 1`] = `
Array [
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "labels": Object {
        "cdk8s.io/metadata.addr": "test-Pod-c815bc91",
      },
      "name": "test-pod-c890e1b8",
    },
    "spec": Object {
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "image": "pod",
          "imagePullPolicy": "Always",
          "name": "main",
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsGroup": 26000,
            "runAsNonRoot": false,
            "runAsUser": 25000,
          },
        },
      ],
      "dnsPolicy": "ClusterFirst",
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
      },
      "setHostnameAsFQDN": false,
    },
  },
  Object {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "NetworkPolicy",
    "metadata": Object {
      "name": "test-policy-c89ef47f",
    },
    "spec": Object {
      "egress": Array [
        Object {
          "ports": Array [
            Object {
              "port": 6379,
              "protocol": "TCP",
            },
          ],
          "to": Array [
            Object {
              "namespaceSelector": Object {
                "matchLabels": Object {
                  "type": "selected",
                },
              },
              "podSelector": Object {},
            },
          ],
        },
      ],
      "podSelector": Object {
        "matchLabels": Object {
          "cdk8s.io/metadata.addr": "test-Pod-c815bc91",
        },
      },
      "policyTypes": Array [
        "Egress",
      ],
    },
  },
]
`;

exports[`NeworkPolicy | can add ingress from a managed pod 1`] = `
Array [
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "labels": Object {
        "cdk8s.io/metadata.addr": "test-Pod1-c8591188",
      },
      "name": "test-pod1-c8153666",
    },
    "spec": Object {
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "image": "pod",
          "imagePullPolicy": "Always",
          "name": "main",
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsGroup": 26000,
            "runAsNonRoot": false,
            "runAsUser": 25000,
          },
        },
      ],
      "dnsPolicy": "ClusterFirst",
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
      },
      "setHostnameAsFQDN": false,
    },
  },
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "labels": Object {
        "cdk8s.io/metadata.addr": "test-Pod2-c82dc44e",
      },
      "name": "test-pod2-c895d79d",
    },
    "spec": Object {
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "image": "pod",
          "imagePullPolicy": "Always",
          "name": "main",
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsGroup": 26000,
            "runAsNonRoot": false,
            "runAsUser": 25000,
          },
        },
      ],
      "dnsPolicy": "ClusterFirst",
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
      },
      "setHostnameAsFQDN": false,
    },
  },
  Object {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "NetworkPolicy",
    "metadata": Object {
      "name": "test-policy-c89ef47f",
    },
    "spec": Object {
      "ingress": Array [
        Object {
          "from": Array [
            Object {
              "podSelector": Object {
                "matchLabels": Object {
                  "cdk8s.io/metadata.addr": "test-Pod2-c82dc44e",
                },
              },
            },
          ],
          "ports": Array [
            Object {
              "port": 6379,
              "protocol": "TCP",
            },
          ],
        },
      ],
      "podSelector": Object {
        "matchLabels": Object {
          "cdk8s.io/metadata.addr": "test-Pod1-c8591188",
        },
      },
      "policyTypes": Array [
        "Ingress",
      ],
    },
  },
]
`;

exports[`NeworkPolicy | can add ingress from a managed workload resource 1`] = `
Array [
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "labels": Object {
        "cdk8s.io/metadata.addr": "test-Pod-c815bc91",
      },
      "name": "test-pod-c890e1b8",
    },
    "spec": Object {
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "image": "pod",
          "imagePullPolicy": "Always",
          "name": "main",
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsGroup": 26000,
            "runAsNonRoot": false,
            "runAsUser": 25000,
          },
        },
      ],
      "dnsPolicy": "ClusterFirst",
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
      },
      "setHostnameAsFQDN": false,
    },
  },
  Object {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": Object {
      "name": "test-deployment-c898c72d",
    },
    "spec": Object {
      "minReadySeconds": 0,
      "progressDeadlineSeconds": 600,
      "replicas": 1,
      "selector": Object {
        "matchLabels": Object {
          "cdk8s.io/metadata.addr": "test-Deployment-c83f5e59",
        },
      },
      "strategy": Object {
        "rollingUpdate": Object {
          "maxSurge": "25%",
          "maxUnavailable": "25%",
        },
        "type": "RollingUpdate",
      },
      "template": Object {
        "metadata": Object {
          "labels": Object {
            "cdk8s.io/metadata.addr": "test-Deployment-c83f5e59",
          },
        },
        "spec": Object {
          "automountServiceAccountToken": true,
          "containers": Array [
            Object {
              "image": "pod",
              "imagePullPolicy": "Always",
              "name": "main",
              "securityContext": Object {
                "privileged": false,
                "readOnlyRootFilesystem": false,
                "runAsGroup": 26000,
                "runAsNonRoot": false,
                "runAsUser": 25000,
              },
            },
          ],
          "dnsPolicy": "ClusterFirst",
          "securityContext": Object {
            "fsGroupChangePolicy": "Always",
            "runAsNonRoot": false,
          },
          "setHostnameAsFQDN": false,
        },
      },
    },
  },
  Object {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "NetworkPolicy",
    "metadata": Object {
      "name": "test-policy-c89ef47f",
    },
    "spec": Object {
      "ingress": Array [
        Object {
          "from": Array [
            Object {
              "podSelector": Object {
                "matchLabels": Object {
                  "cdk8s.io/metadata.addr": "test-Deployment-c83f5e59",
                },
              },
            },
          ],
          "ports": Array [
            Object {
              "port": 6379,
              "protocol": "TCP",
            },
          ],
        },
      ],
      "podSelector": Object {
        "matchLabels": Object {
          "cdk8s.io/metadata.addr": "test-Pod-c815bc91",
        },
      },
      "policyTypes": Array [
        "Ingress",
      ],
    },
  },
]
`;

exports[`NeworkPolicy | can add ingress from all namespaces 1`] = `
Array [
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "labels": Object {
        "cdk8s.io/metadata.addr": "test-Pod-c815bc91",
      },
      "name": "test-pod-c890e1b8",
    },
    "spec": Object {
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "image": "pod",
          "imagePullPolicy": "Always",
          "name": "main",
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsGroup": 26000,
            "runAsNonRoot": false,
            "runAsUser": 25000,
          },
        },
      ],
      "dnsPolicy": "ClusterFirst",
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
      },
      "setHostnameAsFQDN": false,
    },
  },
  Object {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "NetworkPolicy",
    "metadata": Object {
      "name": "test-policy-c89ef47f",
    },
    "spec": Object {
      "ingress": Array [
        Object {
          "from": Array [
            Object {
              "namespaceSelector": Object {},
              "podSelector": Object {},
            },
          ],
          "ports": Array [
            Object {
              "port": 6379,
              "protocol": "TCP",
            },
          ],
        },
      ],
      "podSelector": Object {
        "matchLabels": Object {
          "cdk8s.io/metadata.addr": "test-Pod-c815bc91",
        },
      },
      "policyTypes": Array [
        "Ingress",
      ],
    },
  },
]
`;

exports[`NeworkPolicy | can add ingress from all pods 1`] = `
Array [
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "labels": Object {
        "cdk8s.io/metadata.addr": "test-Pod-c815bc91",
      },
      "name": "test-pod-c890e1b8",
    },
    "spec": Object {
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "image": "pod",
          "imagePullPolicy": "Always",
          "name": "main",
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsGroup": 26000,
            "runAsNonRoot": false,
            "runAsUser": 25000,
          },
        },
      ],
      "dnsPolicy": "ClusterFirst",
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
      },
      "setHostnameAsFQDN": false,
    },
  },
  Object {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "NetworkPolicy",
    "metadata": Object {
      "name": "test-policy-c89ef47f",
    },
    "spec": Object {
      "ingress": Array [
        Object {
          "from": Array [
            Object {
              "podSelector": Object {},
            },
          ],
          "ports": Array [
            Object {
              "port": 6379,
              "protocol": "TCP",
            },
          ],
        },
      ],
      "podSelector": Object {
        "matchLabels": Object {
          "cdk8s.io/metadata.addr": "test-Pod-c815bc91",
        },
      },
      "policyTypes": Array [
        "Ingress",
      ],
    },
  },
]
`;

exports[`NeworkPolicy | can add ingress from an ip block 1`] = `
Array [
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "labels": Object {
        "cdk8s.io/metadata.addr": "test-Pod-c815bc91",
      },
      "name": "test-pod-c890e1b8",
    },
    "spec": Object {
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "image": "pod",
          "imagePullPolicy": "Always",
          "name": "main",
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsGroup": 26000,
            "runAsNonRoot": false,
            "runAsUser": 25000,
          },
        },
      ],
      "dnsPolicy": "ClusterFirst",
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
      },
      "setHostnameAsFQDN": false,
    },
  },
  Object {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "NetworkPolicy",
    "metadata": Object {
      "name": "test-policy-c89ef47f",
    },
    "spec": Object {
      "ingress": Array [
        Object {
          "from": Array [
            Object {
              "ipBlock": Object {
                "cidr": "172.17.0.0/16",
                "except": Array [
                  "172.17.1.0/24",
                ],
              },
            },
          ],
          "ports": Array [
            Object {
              "port": 6379,
              "protocol": "TCP",
            },
          ],
        },
      ],
      "podSelector": Object {
        "matchLabels": Object {
          "cdk8s.io/metadata.addr": "test-Pod-c815bc91",
        },
      },
      "policyTypes": Array [
        "Ingress",
      ],
    },
  },
]
`;

exports[`NeworkPolicy | can add ingress from managed namespace 1`] = `
Array [
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "labels": Object {
        "cdk8s.io/metadata.addr": "test-Pod-c815bc91",
      },
      "name": "test-pod-c890e1b8",
    },
    "spec": Object {
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "image": "pod",
          "imagePullPolicy": "Always",
          "name": "main",
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsGroup": 26000,
            "runAsNonRoot": false,
            "runAsUser": 25000,
          },
        },
      ],
      "dnsPolicy": "ClusterFirst",
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
      },
      "setHostnameAsFQDN": false,
    },
  },
  Object {
    "apiVersion": "v1",
    "kind": "Namespace",
    "metadata": Object {
      "name": "test-namespace-c83f04e1",
    },
    "spec": Object {},
  },
  Object {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "NetworkPolicy",
    "metadata": Object {
      "name": "test-policy-c89ef47f",
    },
    "spec": Object {
      "ingress": Array [
        Object {
          "from": Array [
            Object {
              "namespaceSelector": Object {
                "matchLabels": Object {
                  "kubernetes.io/metadata.name": "test-namespace-c83f04e1",
                },
              },
              "podSelector": Object {},
            },
          ],
          "ports": Array [
            Object {
              "port": 6379,
              "protocol": "TCP",
            },
          ],
        },
      ],
      "podSelector": Object {
        "matchLabels": Object {
          "cdk8s.io/metadata.addr": "test-Pod-c815bc91",
        },
      },
      "policyTypes": Array [
        "Ingress",
      ],
    },
  },
]
`;

exports[`NeworkPolicy | can add ingress from pods selected with namespaces selected by labes 1`] = `
Array [
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "labels": Object {
        "cdk8s.io/metadata.addr": "test-Pod-c815bc91",
      },
      "name": "test-pod-c890e1b8",
    },
    "spec": Object {
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "image": "pod",
          "imagePullPolicy": "Always",
          "name": "main",
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsGroup": 26000,
            "runAsNonRoot": false,
            "runAsUser": 25000,
          },
        },
      ],
      "dnsPolicy": "ClusterFirst",
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
      },
      "setHostnameAsFQDN": false,
    },
  },
  Object {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "NetworkPolicy",
    "metadata": Object {
      "name": "test-policy-c89ef47f",
    },
    "spec": Object {
      "ingress": Array [
        Object {
          "from": Array [
            Object {
              "namespaceSelector": Object {
                "matchLabels": Object {
                  "type": "selected",
                },
              },
              "podSelector": Object {
                "matchLabels": Object {
                  "type": "selected",
                },
              },
            },
          ],
          "ports": Array [
            Object {
              "port": 6379,
              "protocol": "TCP",
            },
          ],
        },
      ],
      "podSelector": Object {
        "matchLabels": Object {
          "cdk8s.io/metadata.addr": "test-Pod-c815bc91",
        },
      },
      "policyTypes": Array [
        "Ingress",
      ],
    },
  },
]
`;

exports[`NeworkPolicy | can add ingress from pods selected with namespaces selected by names 1`] = `
Array [
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "labels": Object {
        "cdk8s.io/metadata.addr": "test-Pod-c815bc91",
      },
      "name": "test-pod-c890e1b8",
    },
    "spec": Object {
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "image": "pod",
          "imagePullPolicy": "Always",
          "name": "main",
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsGroup": 26000,
            "runAsNonRoot": false,
            "runAsUser": 25000,
          },
        },
      ],
      "dnsPolicy": "ClusterFirst",
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
      },
      "setHostnameAsFQDN": false,
    },
  },
  Object {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "NetworkPolicy",
    "metadata": Object {
      "name": "test-policy-c89ef47f",
    },
    "spec": Object {
      "ingress": Array [
        Object {
          "from": Array [
            Object {
              "namespaceSelector": Object {
                "matchLabels": Object {
                  "kubernetes.io/metadata.name": "selected1",
                  "type": "selected",
                },
              },
              "podSelector": Object {
                "matchLabels": Object {
                  "type": "selected",
                },
              },
            },
            Object {
              "namespaceSelector": Object {
                "matchLabels": Object {
                  "kubernetes.io/metadata.name": "selected2",
                  "type": "selected",
                },
              },
              "podSelector": Object {
                "matchLabels": Object {
                  "type": "selected",
                },
              },
            },
          ],
          "ports": Array [
            Object {
              "port": 6379,
              "protocol": "TCP",
            },
          ],
        },
      ],
      "podSelector": Object {
        "matchLabels": Object {
          "cdk8s.io/metadata.addr": "test-Pod-c815bc91",
        },
      },
      "policyTypes": Array [
        "Ingress",
      ],
    },
  },
]
`;

exports[`NeworkPolicy | can add ingress from pods selected without namespaces 1`] = `
Array [
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "labels": Object {
        "cdk8s.io/metadata.addr": "test-Pod-c815bc91",
      },
      "name": "test-pod-c890e1b8",
    },
    "spec": Object {
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "image": "pod",
          "imagePullPolicy": "Always",
          "name": "main",
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsGroup": 26000,
            "runAsNonRoot": false,
            "runAsUser": 25000,
          },
        },
      ],
      "dnsPolicy": "ClusterFirst",
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
      },
      "setHostnameAsFQDN": false,
    },
  },
  Object {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "NetworkPolicy",
    "metadata": Object {
      "name": "test-policy-c89ef47f",
    },
    "spec": Object {
      "ingress": Array [
        Object {
          "from": Array [
            Object {
              "podSelector": Object {
                "matchLabels": Object {
                  "type": "selected",
                },
              },
            },
          ],
          "ports": Array [
            Object {
              "port": 6379,
              "protocol": "TCP",
            },
          ],
        },
      ],
      "podSelector": Object {
        "matchLabels": Object {
          "cdk8s.io/metadata.addr": "test-Pod-c815bc91",
        },
      },
      "policyTypes": Array [
        "Ingress",
      ],
    },
  },
]
`;

exports[`NeworkPolicy | can add ingress from selected namespaces 1`] = `
Array [
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "labels": Object {
        "cdk8s.io/metadata.addr": "test-Pod-c815bc91",
      },
      "name": "test-pod-c890e1b8",
    },
    "spec": Object {
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "image": "pod",
          "imagePullPolicy": "Always",
          "name": "main",
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsGroup": 26000,
            "runAsNonRoot": false,
            "runAsUser": 25000,
          },
        },
      ],
      "dnsPolicy": "ClusterFirst",
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
      },
      "setHostnameAsFQDN": false,
    },
  },
  Object {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "NetworkPolicy",
    "metadata": Object {
      "name": "test-policy-c89ef47f",
    },
    "spec": Object {
      "ingress": Array [
        Object {
          "from": Array [
            Object {
              "namespaceSelector": Object {
                "matchLabels": Object {
                  "type": "selected",
                },
              },
              "podSelector": Object {},
            },
          ],
          "ports": Array [
            Object {
              "port": 6379,
              "protocol": "TCP",
            },
          ],
        },
      ],
      "podSelector": Object {
        "matchLabels": Object {
          "cdk8s.io/metadata.addr": "test-Pod-c815bc91",
        },
      },
      "policyTypes": Array [
        "Ingress",
      ],
    },
  },
]
`;

exports[`NeworkPolicy | can create a policy for a managed pod 1`] = `
Array [
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "labels": Object {
        "cdk8s.io/metadata.addr": "test-Web-c8b65d84",
      },
      "name": "test-web-c854d28f",
    },
    "spec": Object {
      "automountServiceAccountToken": true,
      "containers": Array [
        Object {
          "image": "web",
          "imagePullPolicy": "Always",
          "name": "main",
          "securityContext": Object {
            "privileged": false,
            "readOnlyRootFilesystem": false,
            "runAsGroup": 26000,
            "runAsNonRoot": false,
            "runAsUser": 25000,
          },
        },
      ],
      "dnsPolicy": "ClusterFirst",
      "securityContext": Object {
        "fsGroupChangePolicy": "Always",
        "runAsNonRoot": false,
      },
      "setHostnameAsFQDN": false,
    },
  },
  Object {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "NetworkPolicy",
    "metadata": Object {
      "name": "test-policy-c89ef47f",
    },
    "spec": Object {
      "podSelector": Object {
        "matchLabels": Object {
          "cdk8s.io/metadata.addr": "test-Web-c8b65d84",
        },
      },
    },
  },
]
`;

exports[`NeworkPolicy | can create a policy for a managed workload resource 1`] = `
Array [
  Object {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": Object {
      "name": "test-web-c854d28f",
    },
    "spec": Object {
      "minReadySeconds": 0,
      "progressDeadlineSeconds": 600,
      "replicas": 1,
      "selector": Object {
        "matchLabels": Object {
          "cdk8s.io/metadata.addr": "test-Web-c8b65d84",
        },
      },
      "strategy": Object {
        "rollingUpdate": Object {
          "maxSurge": "25%",
          "maxUnavailable": "25%",
        },
        "type": "RollingUpdate",
      },
      "template": Object {
        "metadata": Object {
          "labels": Object {
            "cdk8s.io/metadata.addr": "test-Web-c8b65d84",
          },
        },
        "spec": Object {
          "automountServiceAccountToken": true,
          "containers": Array [
            Object {
              "image": "web",
              "imagePullPolicy": "Always",
              "name": "main",
              "securityContext": Object {
                "privileged": false,
                "readOnlyRootFilesystem": false,
                "runAsGroup": 26000,
                "runAsNonRoot": false,
                "runAsUser": 25000,
              },
            },
          ],
          "dnsPolicy": "ClusterFirst",
          "securityContext": Object {
            "fsGroupChangePolicy": "Always",
            "runAsNonRoot": false,
          },
          "setHostnameAsFQDN": false,
        },
      },
    },
  },
  Object {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "NetworkPolicy",
    "metadata": Object {
      "name": "test-policy-c89ef47f",
    },
    "spec": Object {
      "podSelector": Object {
        "matchLabels": Object {
          "cdk8s.io/metadata.addr": "test-Web-c8b65d84",
        },
      },
    },
  },
]
`;

exports[`NeworkPolicy | can create a policy for all pods 1`] = `
Array [
  Object {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "NetworkPolicy",
    "metadata": Object {
      "name": "test-policy1-c84bc0a0",
    },
    "spec": Object {
      "podSelector": Object {},
    },
  },
  Object {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "NetworkPolicy",
    "metadata": Object {
      "name": "test-policy2-c822b70e",
    },
    "spec": Object {
      "podSelector": Object {},
    },
  },
]
`;

exports[`NeworkPolicy | can create a policy for selected pods 1`] = `
Array [
  Object {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "NetworkPolicy",
    "metadata": Object {
      "name": "test-policy-c89ef47f",
    },
    "spec": Object {
      "podSelector": Object {
        "matchLabels": Object {
          "app": "web",
        },
      },
    },
  },
]
`;

exports[`NeworkPolicy | can create a policy that allows all egress by default 1`] = `
Array [
  Object {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "NetworkPolicy",
    "metadata": Object {
      "name": "test-policy-c89ef47f",
    },
    "spec": Object {
      "egress": Array [
        Object {},
      ],
      "podSelector": Object {},
      "policyTypes": Array [
        "Egress",
      ],
    },
  },
]
`;

exports[`NeworkPolicy | can create a policy that allows all ingress by default 1`] = `
Array [
  Object {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "NetworkPolicy",
    "metadata": Object {
      "name": "test-policy-c89ef47f",
    },
    "spec": Object {
      "ingress": Array [
        Object {},
      ],
      "podSelector": Object {},
      "policyTypes": Array [
        "Ingress",
      ],
    },
  },
]
`;

exports[`NeworkPolicy | can create a policy that denies all egress by default 1`] = `
Array [
  Object {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "NetworkPolicy",
    "metadata": Object {
      "name": "test-policy-c89ef47f",
    },
    "spec": Object {
      "podSelector": Object {},
      "policyTypes": Array [
        "Egress",
      ],
    },
  },
]
`;

exports[`NeworkPolicy | can create a policy that denies all ingress by default 1`] = `
Array [
  Object {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "NetworkPolicy",
    "metadata": Object {
      "name": "test-policy-c89ef47f",
    },
    "spec": Object {
      "podSelector": Object {},
      "policyTypes": Array [
        "Ingress",
      ],
    },
  },
]
`;
